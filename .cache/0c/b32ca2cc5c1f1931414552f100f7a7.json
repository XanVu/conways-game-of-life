{"id":"Cell.js","dependencies":[{"name":"C:\\Users\\Administrator\\Desktop\\create-js-project\\package.json","includedInParent":true,"mtime":1714646979956}],"generated":{"js":"function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\nvar _isAlive = /*#__PURE__*/new WeakMap();\nvar _nextStatus = /*#__PURE__*/new WeakMap();\nvar Cell = /*#__PURE__*/function () {\n  function Cell(isAlive) {\n    _classCallCheck(this, Cell);\n    _classPrivateFieldInitSpec(this, _isAlive, void 0);\n    _classPrivateFieldInitSpec(this, _nextStatus, void 0);\n    _classPrivateFieldSet(_isAlive, this, isAlive);\n    _classPrivateFieldSet(_nextStatus, this, false);\n  }\n  return _createClass(Cell, [{\n    key: \"getIsAlive\",\n    value: function getIsAlive() {\n      return _classPrivateFieldGet(_isAlive, this);\n    }\n  }, {\n    key: \"setNextStatus\",\n    value: function setNextStatus(nextStatus) {\n      _classPrivateFieldSet(_nextStatus, this, nextStatus);\n    }\n  }, {\n    key: \"evolve\",\n    value: function evolve() {\n      _classPrivateFieldSet(_isAlive, this, _classPrivateFieldGet(_nextStatus, this));\n    }\n  }, {\n    key: \"getCellValueAsNumber\",\n    value: function getCellValueAsNumber() {\n      return this.getIsAlive() ? 1 : 0;\n    }\n\n    //Any live cell with fewer than two live neighbors dies, as if by underpopulation.\n  }], [{\n    key: \"isUnderpopulated\",\n    value: function isUnderpopulated(livingCells) {\n      return livingCells < 2;\n    }\n\n    //Any live cell with more than three live neighbors dies, as if by overpopulation.\n  }, {\n    key: \"isOverpopulated\",\n    value: function isOverpopulated(livingCells) {\n      return livingCells < 3;\n    }\n\n    //Any live cell with two or three live neighbors lives on to the next generation.\n  }, {\n    key: \"isSurvivingOnToTheNextGen\",\n    value: function isSurvivingOnToTheNextGen(livingCells) {\n      return livingCells == 2 || livingCells == 3;\n    }\n\n    //Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\n  }, {\n    key: \"isAliveByReproduction\",\n    value: function isAliveByReproduction(livingCells) {\n      return livingCells == 3;\n    }\n  }]);\n}();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":14,"column":4},"source":"Cell.js","original":{"line":1,"column":6},"name":"Cell"},{"generated":{"line":14,"column":8},"source":"Cell.js","original":{"line":1,"column":10}},{"generated":{"line":15,"column":2},"source":"Cell.js","original":{"line":5,"column":4}},{"generated":{"line":15,"column":11},"source":"Cell.js","original":{"line":5,"column":4},"name":"Cell"},{"generated":{"line":15,"column":16},"source":"Cell.js","original":{"line":5,"column":16},"name":"isAlive"},{"generated":{"line":15,"column":23},"source":"Cell.js","original":{"line":5,"column":23}},{"generated":{"line":15,"column":25},"source":"Cell.js","original":{"line":5,"column":24}},{"generated":{"line":16,"column":4},"source":"Cell.js","original":{"line":5,"column":24},"name":"_classCallCheck"},{"generated":{"line":16,"column":19},"source":"Cell.js","original":{"line":5,"column":24}},{"generated":{"line":16,"column":26},"source":"Cell.js","original":{"line":5,"column":24},"name":"Cell"},{"generated":{"line":16,"column":30},"source":"Cell.js","original":{"line":5,"column":24}},{"generated":{"line":17,"column":4},"source":"Cell.js","original":{"line":5,"column":24},"name":"_classPrivateFieldInitSpec"},{"generated":{"line":17,"column":30},"source":"Cell.js","original":{"line":5,"column":24}},{"generated":{"line":17,"column":37},"source":"Cell.js","original":{"line":5,"column":24},"name":"_isAlive"},{"generated":{"line":17,"column":45},"source":"Cell.js","original":{"line":5,"column":24}},{"generated":{"line":18,"column":4},"source":"Cell.js","original":{"line":5,"column":24},"name":"_classPrivateFieldInitSpec"},{"generated":{"line":18,"column":30},"source":"Cell.js","original":{"line":5,"column":24}},{"generated":{"line":18,"column":37},"source":"Cell.js","original":{"line":5,"column":24},"name":"_nextStatus"},{"generated":{"line":18,"column":48},"source":"Cell.js","original":{"line":5,"column":24}},{"generated":{"line":19,"column":4},"source":"Cell.js","original":{"line":6,"column":6},"name":"_classPrivateFieldSet"},{"generated":{"line":19,"column":25},"source":"Cell.js","original":{"line":6,"column":6}},{"generated":{"line":19,"column":26},"source":"Cell.js","original":{"line":6,"column":6},"name":"_isAlive"},{"generated":{"line":19,"column":34},"source":"Cell.js","original":{"line":6,"column":6}},{"generated":{"line":19,"column":40},"source":"Cell.js","original":{"line":6,"column":10}},{"generated":{"line":19,"column":42},"source":"Cell.js","original":{"line":6,"column":22},"name":"isAlive"},{"generated":{"line":19,"column":49},"source":"Cell.js","original":{"line":6,"column":29}},{"generated":{"line":20,"column":4},"source":"Cell.js","original":{"line":7,"column":6},"name":"_classPrivateFieldSet"},{"generated":{"line":20,"column":25},"source":"Cell.js","original":{"line":7,"column":6}},{"generated":{"line":20,"column":26},"source":"Cell.js","original":{"line":7,"column":6},"name":"_nextStatus"},{"generated":{"line":20,"column":37},"source":"Cell.js","original":{"line":7,"column":6}},{"generated":{"line":20,"column":43},"source":"Cell.js","original":{"line":7,"column":10}},{"generated":{"line":20,"column":45},"source":"Cell.js","original":{"line":7,"column":25}},{"generated":{"line":20,"column":50},"source":"Cell.js","original":{"line":7,"column":30}},{"generated":{"line":21,"column":2},"source":"Cell.js","original":{"line":8,"column":4}},{"generated":{"line":22,"column":2},"source":"Cell.js","original":{"line":8,"column":5}},{"generated":{"line":22,"column":9},"source":"Cell.js","original":{"line":8,"column":5},"name":"_createClass"},{"generated":{"line":22,"column":21},"source":"Cell.js","original":{"line":8,"column":5}},{"generated":{"line":22,"column":22},"source":"Cell.js","original":{"line":8,"column":5},"name":"Cell"},{"generated":{"line":22,"column":26},"source":"Cell.js","original":{"line":8,"column":5}},{"generated":{"line":23,"column":4},"source":"Cell.js","original":{"line":8,"column":5},"name":"key"},{"generated":{"line":23,"column":7},"source":"Cell.js","original":{"line":8,"column":5}},{"generated":{"line":24,"column":4},"source":"Cell.js","original":{"line":8,"column":5},"name":"value"},{"generated":{"line":24,"column":9},"source":"Cell.js","original":{"line":8,"column":5}},{"generated":{"line":24,"column":11},"source":"Cell.js","original":{"line":10,"column":4}},{"generated":{"line":24,"column":20},"source":"Cell.js","original":{"line":10,"column":4},"name":"getIsAlive"},{"generated":{"line":24,"column":31},"source":"Cell.js","original":{"line":10,"column":4}},{"generated":{"line":24,"column":33},"source":"Cell.js","original":{"line":10,"column":16}},{"generated":{"line":25,"column":6},"source":"Cell.js","original":{"line":11,"column":6}},{"generated":{"line":25,"column":13},"source":"Cell.js","original":{"line":11,"column":6},"name":"_classPrivateFieldGet"},{"generated":{"line":25,"column":34},"source":"Cell.js","original":{"line":11,"column":6}},{"generated":{"line":25,"column":35},"source":"Cell.js","original":{"line":11,"column":6},"name":"_isAlive"},{"generated":{"line":25,"column":43},"source":"Cell.js","original":{"line":11,"column":6}},{"generated":{"line":25,"column":45},"source":"Cell.js","original":{"line":11,"column":13}},{"generated":{"line":25,"column":49},"source":"Cell.js","original":{"line":11,"column":17}},{"generated":{"line":26,"column":4},"source":"Cell.js","original":{"line":12,"column":4}},{"generated":{"line":27,"column":2},"source":"Cell.js","original":{"line":12,"column":5}},{"generated":{"line":28,"column":4},"source":"Cell.js","original":{"line":12,"column":5},"name":"key"},{"generated":{"line":28,"column":7},"source":"Cell.js","original":{"line":12,"column":5}},{"generated":{"line":29,"column":4},"source":"Cell.js","original":{"line":12,"column":5},"name":"value"},{"generated":{"line":29,"column":9},"source":"Cell.js","original":{"line":12,"column":5}},{"generated":{"line":29,"column":11},"source":"Cell.js","original":{"line":14,"column":4}},{"generated":{"line":29,"column":20},"source":"Cell.js","original":{"line":14,"column":4},"name":"setNextStatus"},{"generated":{"line":29,"column":34},"source":"Cell.js","original":{"line":14,"column":18},"name":"nextStatus"},{"generated":{"line":29,"column":44},"source":"Cell.js","original":{"line":14,"column":28}},{"generated":{"line":29,"column":46},"source":"Cell.js","original":{"line":14,"column":29}},{"generated":{"line":30,"column":6},"source":"Cell.js","original":{"line":15,"column":6},"name":"_classPrivateFieldSet"},{"generated":{"line":30,"column":27},"source":"Cell.js","original":{"line":15,"column":6}},{"generated":{"line":30,"column":28},"source":"Cell.js","original":{"line":15,"column":6},"name":"_nextStatus"},{"generated":{"line":30,"column":39},"source":"Cell.js","original":{"line":15,"column":6}},{"generated":{"line":30,"column":45},"source":"Cell.js","original":{"line":15,"column":10}},{"generated":{"line":30,"column":47},"source":"Cell.js","original":{"line":15,"column":25},"name":"nextStatus"},{"generated":{"line":30,"column":57},"source":"Cell.js","original":{"line":15,"column":35}},{"generated":{"line":31,"column":4},"source":"Cell.js","original":{"line":16,"column":4}},{"generated":{"line":32,"column":2},"source":"Cell.js","original":{"line":16,"column":5}},{"generated":{"line":33,"column":4},"source":"Cell.js","original":{"line":16,"column":5},"name":"key"},{"generated":{"line":33,"column":7},"source":"Cell.js","original":{"line":16,"column":5}},{"generated":{"line":34,"column":4},"source":"Cell.js","original":{"line":16,"column":5},"name":"value"},{"generated":{"line":34,"column":9},"source":"Cell.js","original":{"line":16,"column":5}},{"generated":{"line":34,"column":11},"source":"Cell.js","original":{"line":18,"column":4}},{"generated":{"line":34,"column":20},"source":"Cell.js","original":{"line":18,"column":4},"name":"evolve"},{"generated":{"line":34,"column":27},"source":"Cell.js","original":{"line":18,"column":4}},{"generated":{"line":34,"column":29},"source":"Cell.js","original":{"line":18,"column":12}},{"generated":{"line":35,"column":6},"source":"Cell.js","original":{"line":19,"column":6},"name":"_classPrivateFieldSet"},{"generated":{"line":35,"column":27},"source":"Cell.js","original":{"line":19,"column":6}},{"generated":{"line":35,"column":28},"source":"Cell.js","original":{"line":19,"column":6},"name":"_isAlive"},{"generated":{"line":35,"column":36},"source":"Cell.js","original":{"line":19,"column":6}},{"generated":{"line":35,"column":42},"source":"Cell.js","original":{"line":19,"column":10}},{"generated":{"line":35,"column":44},"source":"Cell.js","original":{"line":19,"column":10},"name":"_classPrivateFieldGet"},{"generated":{"line":35,"column":65},"source":"Cell.js","original":{"line":19,"column":10}},{"generated":{"line":35,"column":66},"source":"Cell.js","original":{"line":19,"column":10},"name":"_nextStatus"},{"generated":{"line":35,"column":77},"source":"Cell.js","original":{"line":19,"column":10}},{"generated":{"line":35,"column":79},"source":"Cell.js","original":{"line":19,"column":22}},{"generated":{"line":35,"column":83},"source":"Cell.js","original":{"line":19,"column":26}},{"generated":{"line":36,"column":4},"source":"Cell.js","original":{"line":20,"column":4}},{"generated":{"line":37,"column":2},"source":"Cell.js","original":{"line":20,"column":5}},{"generated":{"line":38,"column":4},"source":"Cell.js","original":{"line":20,"column":5},"name":"key"},{"generated":{"line":38,"column":7},"source":"Cell.js","original":{"line":20,"column":5}},{"generated":{"line":39,"column":4},"source":"Cell.js","original":{"line":20,"column":5},"name":"value"},{"generated":{"line":39,"column":9},"source":"Cell.js","original":{"line":20,"column":5}},{"generated":{"line":39,"column":11},"source":"Cell.js","original":{"line":22,"column":4}},{"generated":{"line":39,"column":20},"source":"Cell.js","original":{"line":22,"column":4},"name":"getCellValueAsNumber"},{"generated":{"line":39,"column":41},"source":"Cell.js","original":{"line":22,"column":4}},{"generated":{"line":39,"column":43},"source":"Cell.js","original":{"line":22,"column":26}},{"generated":{"line":40,"column":6},"source":"Cell.js","original":{"line":23,"column":6}},{"generated":{"line":40,"column":13},"source":"Cell.js","original":{"line":23,"column":13}},{"generated":{"line":40,"column":17},"source":"Cell.js","original":{"line":23,"column":17}},{"generated":{"line":40,"column":18},"source":"Cell.js","original":{"line":23,"column":18},"name":"getIsAlive"},{"generated":{"line":40,"column":28},"source":"Cell.js","original":{"line":23,"column":28}},{"generated":{"line":40,"column":29},"source":"Cell.js","original":{"line":23,"column":29}},{"generated":{"line":40,"column":30},"source":"Cell.js","original":{"line":23,"column":30}},{"generated":{"line":40,"column":33},"source":"Cell.js","original":{"line":23,"column":33}},{"generated":{"line":40,"column":34},"source":"Cell.js","original":{"line":23,"column":34}},{"generated":{"line":40,"column":37},"source":"Cell.js","original":{"line":23,"column":37}},{"generated":{"line":40,"column":38},"source":"Cell.js","original":{"line":23,"column":38}},{"generated":{"line":41,"column":4},"source":"Cell.js","original":{"line":24,"column":4}},{"generated":{"line":43,"column":4},"source":"Cell.js","original":{"line":26,"column":2}},{"generated":{"line":44,"column":2},"source":"Cell.js","original":{"line":26,"column":2}},{"generated":{"line":45,"column":4},"source":"Cell.js","original":{"line":26,"column":2},"name":"key"},{"generated":{"line":45,"column":7},"source":"Cell.js","original":{"line":26,"column":2}},{"generated":{"line":46,"column":4},"source":"Cell.js","original":{"line":26,"column":2},"name":"value"},{"generated":{"line":46,"column":9},"source":"Cell.js","original":{"line":26,"column":2}},{"generated":{"line":46,"column":11},"source":"Cell.js","original":{"line":27,"column":4}},{"generated":{"line":46,"column":20},"source":"Cell.js","original":{"line":27,"column":4},"name":"isUnderpopulated"},{"generated":{"line":46,"column":37},"source":"Cell.js","original":{"line":27,"column":28},"name":"livingCells"},{"generated":{"line":46,"column":48},"source":"Cell.js","original":{"line":27,"column":39}},{"generated":{"line":46,"column":50},"source":"Cell.js","original":{"line":27,"column":40}},{"generated":{"line":47,"column":6},"source":"Cell.js","original":{"line":28,"column":6}},{"generated":{"line":47,"column":13},"source":"Cell.js","original":{"line":28,"column":13},"name":"livingCells"},{"generated":{"line":47,"column":24},"source":"Cell.js","original":{"line":28,"column":24}},{"generated":{"line":47,"column":27},"source":"Cell.js","original":{"line":28,"column":27}},{"generated":{"line":47,"column":28},"source":"Cell.js","original":{"line":28,"column":28}},{"generated":{"line":48,"column":4},"source":"Cell.js","original":{"line":29,"column":4}},{"generated":{"line":50,"column":4},"source":"Cell.js","original":{"line":31,"column":2}},{"generated":{"line":51,"column":2},"source":"Cell.js","original":{"line":31,"column":2}},{"generated":{"line":52,"column":4},"source":"Cell.js","original":{"line":31,"column":2},"name":"key"},{"generated":{"line":52,"column":7},"source":"Cell.js","original":{"line":31,"column":2}},{"generated":{"line":53,"column":4},"source":"Cell.js","original":{"line":31,"column":2},"name":"value"},{"generated":{"line":53,"column":9},"source":"Cell.js","original":{"line":31,"column":2}},{"generated":{"line":53,"column":11},"source":"Cell.js","original":{"line":33,"column":4}},{"generated":{"line":53,"column":20},"source":"Cell.js","original":{"line":33,"column":4},"name":"isOverpopulated"},{"generated":{"line":53,"column":36},"source":"Cell.js","original":{"line":33,"column":27},"name":"livingCells"},{"generated":{"line":53,"column":47},"source":"Cell.js","original":{"line":33,"column":38}},{"generated":{"line":53,"column":49},"source":"Cell.js","original":{"line":33,"column":39}},{"generated":{"line":54,"column":6},"source":"Cell.js","original":{"line":34,"column":6}},{"generated":{"line":54,"column":13},"source":"Cell.js","original":{"line":34,"column":13},"name":"livingCells"},{"generated":{"line":54,"column":24},"source":"Cell.js","original":{"line":34,"column":24}},{"generated":{"line":54,"column":27},"source":"Cell.js","original":{"line":34,"column":27}},{"generated":{"line":54,"column":28},"source":"Cell.js","original":{"line":34,"column":28}},{"generated":{"line":55,"column":4},"source":"Cell.js","original":{"line":35,"column":4}},{"generated":{"line":57,"column":4},"source":"Cell.js","original":{"line":37,"column":2}},{"generated":{"line":58,"column":2},"source":"Cell.js","original":{"line":37,"column":2}},{"generated":{"line":59,"column":4},"source":"Cell.js","original":{"line":37,"column":2},"name":"key"},{"generated":{"line":59,"column":7},"source":"Cell.js","original":{"line":37,"column":2}},{"generated":{"line":60,"column":4},"source":"Cell.js","original":{"line":37,"column":2},"name":"value"},{"generated":{"line":60,"column":9},"source":"Cell.js","original":{"line":37,"column":2}},{"generated":{"line":60,"column":11},"source":"Cell.js","original":{"line":39,"column":4}},{"generated":{"line":60,"column":20},"source":"Cell.js","original":{"line":39,"column":4},"name":"isSurvivingOnToTheNextGen"},{"generated":{"line":60,"column":46},"source":"Cell.js","original":{"line":39,"column":37},"name":"livingCells"},{"generated":{"line":60,"column":57},"source":"Cell.js","original":{"line":39,"column":48}},{"generated":{"line":60,"column":59},"source":"Cell.js","original":{"line":39,"column":49}},{"generated":{"line":61,"column":6},"source":"Cell.js","original":{"line":40,"column":6}},{"generated":{"line":61,"column":13},"source":"Cell.js","original":{"line":40,"column":13},"name":"livingCells"},{"generated":{"line":61,"column":24},"source":"Cell.js","original":{"line":40,"column":24}},{"generated":{"line":61,"column":28},"source":"Cell.js","original":{"line":40,"column":28}},{"generated":{"line":61,"column":29},"source":"Cell.js","original":{"line":40,"column":29}},{"generated":{"line":61,"column":33},"source":"Cell.js","original":{"line":40,"column":33},"name":"livingCells"},{"generated":{"line":61,"column":44},"source":"Cell.js","original":{"line":40,"column":44}},{"generated":{"line":61,"column":48},"source":"Cell.js","original":{"line":40,"column":48}},{"generated":{"line":61,"column":49},"source":"Cell.js","original":{"line":40,"column":49}},{"generated":{"line":62,"column":4},"source":"Cell.js","original":{"line":41,"column":4}},{"generated":{"line":64,"column":4},"source":"Cell.js","original":{"line":43,"column":2}},{"generated":{"line":65,"column":2},"source":"Cell.js","original":{"line":43,"column":2}},{"generated":{"line":66,"column":4},"source":"Cell.js","original":{"line":43,"column":2},"name":"key"},{"generated":{"line":66,"column":7},"source":"Cell.js","original":{"line":43,"column":2}},{"generated":{"line":67,"column":4},"source":"Cell.js","original":{"line":43,"column":2},"name":"value"},{"generated":{"line":67,"column":9},"source":"Cell.js","original":{"line":43,"column":2}},{"generated":{"line":67,"column":11},"source":"Cell.js","original":{"line":44,"column":4}},{"generated":{"line":67,"column":20},"source":"Cell.js","original":{"line":44,"column":4},"name":"isAliveByReproduction"},{"generated":{"line":67,"column":42},"source":"Cell.js","original":{"line":44,"column":33},"name":"livingCells"},{"generated":{"line":67,"column":53},"source":"Cell.js","original":{"line":44,"column":44}},{"generated":{"line":67,"column":55},"source":"Cell.js","original":{"line":44,"column":45}},{"generated":{"line":68,"column":6},"source":"Cell.js","original":{"line":45,"column":6}},{"generated":{"line":68,"column":13},"source":"Cell.js","original":{"line":45,"column":13},"name":"livingCells"},{"generated":{"line":68,"column":24},"source":"Cell.js","original":{"line":45,"column":24}},{"generated":{"line":68,"column":28},"source":"Cell.js","original":{"line":45,"column":28}},{"generated":{"line":68,"column":29},"source":"Cell.js","original":{"line":45,"column":29}},{"generated":{"line":69,"column":4},"source":"Cell.js","original":{"line":46,"column":4}},{"generated":{"line":70,"column":2},"source":"Cell.js","original":{"line":46,"column":5}},{"generated":{"line":71,"column":0},"source":"Cell.js","original":{"line":46,"column":5}}],"sources":{"Cell.js":"class Cell {\r\n    #isAlive\r\n    #nextStatus\r\n\r\n    constructor(isAlive){\r\n      this.#isAlive = isAlive\r\n      this.#nextStatus = false\r\n    }\r\n    \r\n    getIsAlive(){\r\n      return this.#isAlive\r\n    }\r\n\r\n    setNextStatus(nextStatus){\r\n      this.#nextStatus = nextStatus\r\n    }\r\n\r\n    evolve(){\r\n      this.#isAlive = this.#nextStatus\r\n    }\r\n\r\n    getCellValueAsNumber(){\r\n      return this.getIsAlive() ? 1 : 0\r\n    }\r\n\r\n  //Any live cell with fewer than two live neighbors dies, as if by underpopulation.\r\n    static isUnderpopulated(livingCells){\r\n      return livingCells < 2 \r\n    } \r\n  \r\n  //Any live cell with more than three live neighbors dies, as if by overpopulation.\r\n  \r\n    static isOverpopulated(livingCells){\r\n      return livingCells < 3  \r\n    }\r\n\r\n  //Any live cell with two or three live neighbors lives on to the next generation.\r\n  \r\n    static isSurvivingOnToTheNextGen(livingCells){\r\n      return livingCells == 2 || livingCells == 3\r\n    }\r\n\r\n  //Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\r\n    static isAliveByReproduction(livingCells){\r\n      return livingCells == 3\r\n    }\r\n  }"},"lineCount":null}},"error":null,"hash":"d4181ea2f974c8fbe7ff08dbf3c5636f","cacheData":{"env":{}}}