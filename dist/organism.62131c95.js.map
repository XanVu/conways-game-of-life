{"version":3,"sources":["cell.js","organism.js"],"names":["Cell","exports","default","isAlive","_classCallCheck","_classPrivateFieldInitSpec","_isAlive","_nextStatus","_classPrivateFieldSet","_createClass","key","value","getIsAlive","_classPrivateFieldGet","setNextStatus","nextStatus","evolve","getCellValueAsNumber","isUnderpopulated","livingCells","isOverpopulated","isSurvivingOnToTheNextGen","isAliveByReproduction","_cell","_interopRequireDefault","require","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","protoProps","staticProps","_toPrimitive","toPrimitive","String","Number","_classPrivateMethodInitSpec","privateSet","_checkPrivateRedeclaration","add","privateMap","set","privateCollection","has","get","_assertClassBrand","_deadCells","WeakMap","_livingCells","_livingCellsPerIteration","_deadCellsPerIteration","_iteration","_org","_size","_Organism_brand","WeakSet","Organism","size","_startingLive","findNumberOfLivingNeighbursCells","row","col","_this","neighburCellCoordinates","_getNeighbursCoordinates","cellNeighburs","map","x","_getCellbyCoordinate","reduce","acc","cell","validateCurrentGeneneration","livingNeighboursCells","evolveGeneration","_this$livingCellsPerI3","_this$livingCellsPerI4","_this$deadCellsPerIte3","_this$deadCellsPerIte4","table","document","querySelector","rows","cells","innerHTML","_cycleOfLife","_callee","sleep","_this$iteration","_this$iteration2","_callee$","_context","_resetIterationCounter","delay","setTimeout","cycleOfLife","_isEqualToIdentityCoordinates","array","identity","Array","every","element","index","_this2","columns","_sanitizeArrayIndecies","cartesianProduct","flatMap","column","cartesianProductWithoutIdentity","filter","coordinateArray","coordinate","_this3","Math","floor","_this4","from","insertRow","_GeneratingLife","insertCell","text","createTextNode","appendChild","random","_this$livingCellsPerI","_this$livingCellsPerI2","_this$deadCellsPerIte","_this$deadCellsPerIte2"],"mappings":";;;;;;ACAA,IAAAuB,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA6B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAxB,OAAA,EAAAwB,GAAA;AAAA,SAAAE,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAAA,SAAAK,oBAAA,kBAC7B,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAL,SAAA,EAAAM,CAAA,GAAAF,CAAA,CAAAG,cAAA,EAAAX,CAAA,GAAAS,MAAA,CAAAG,cAAA,cAAAL,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAA1B,KAAA,KAAA+B,CAAA,wBAAAZ,MAAA,GAAAA,MAAA,OAAAa,CAAA,GAAAD,CAAA,CAAAX,QAAA,kBAAAa,CAAA,GAAAF,CAAA,CAAAG,aAAA,uBAAAC,CAAA,GAAAJ,CAAA,CAAAK,WAAA,8BAAAC,OAAAZ,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAG,cAAA,CAAAL,CAAA,EAAAD,CAAA,IAAAxB,KAAA,EAAA0B,CAAA,EAAAY,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAf,CAAA,CAAAD,CAAA,WAAAa,MAAA,mBAAAZ,CAAA,IAAAY,MAAA,YAAAA,OAAAZ,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAe,KAAAhB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAP,CAAA,IAAAA,CAAA,CAAAF,SAAA,YAAAoB,SAAA,GAAAlB,CAAA,GAAAkB,SAAA,EAAAV,CAAA,GAAAL,MAAA,CAAAgB,MAAA,CAAAZ,CAAA,CAAAT,SAAA,GAAAW,CAAA,OAAAW,OAAA,CAAAhB,CAAA,gBAAAV,CAAA,CAAAc,CAAA,eAAAhC,KAAA,EAAA6C,gBAAA,CAAApB,CAAA,EAAAC,CAAA,EAAAO,CAAA,MAAAD,CAAA,aAAAc,SAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAAqB,IAAA,YAAAC,GAAA,EAAAvB,CAAA,CAAAwB,IAAA,CAAAzB,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAAsB,IAAA,WAAAC,GAAA,EAAAvB,CAAA,QAAAD,CAAA,CAAAiB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,UAAA,cAAAa,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAAzB,CAAA,qCAAA0B,CAAA,GAAA/B,MAAA,CAAAgC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAlC,CAAA,IAAAE,CAAA,CAAAqB,IAAA,CAAAW,CAAA,EAAA5B,CAAA,MAAAyB,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAlC,SAAA,GAAAoB,SAAA,CAAApB,SAAA,GAAAK,MAAA,CAAAgB,MAAA,CAAAc,CAAA,YAAAM,sBAAAtC,CAAA,gCAAAuC,OAAA,WAAAxC,CAAA,IAAAa,MAAA,CAAAZ,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAAwC,OAAA,CAAAzC,CAAA,EAAAC,CAAA,sBAAAyC,cAAAzC,CAAA,EAAAD,CAAA,aAAA2C,OAAAzC,CAAA,EAAAR,CAAA,EAAAa,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAa,QAAA,CAAArB,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAP,CAAA,mBAAAe,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAnC,KAAA,SAAAkD,CAAA,gBAAAjC,OAAA,CAAAiC,CAAA,KAAAtB,CAAA,CAAAqB,IAAA,CAAAC,CAAA,eAAA1B,CAAA,CAAA4C,OAAA,CAAAlB,CAAA,CAAAmB,OAAA,EAAAC,IAAA,WAAA7C,CAAA,IAAA0C,MAAA,SAAA1C,CAAA,EAAAM,CAAA,EAAAC,CAAA,gBAAAP,CAAA,IAAA0C,MAAA,UAAA1C,CAAA,EAAAM,CAAA,EAAAC,CAAA,QAAAR,CAAA,CAAA4C,OAAA,CAAAlB,CAAA,EAAAoB,IAAA,WAAA7C,CAAA,IAAAU,CAAA,CAAAnC,KAAA,GAAAyB,CAAA,EAAAM,CAAA,CAAAI,CAAA,gBAAAV,CAAA,WAAA0C,MAAA,UAAA1C,CAAA,EAAAM,CAAA,EAAAC,CAAA,SAAAA,CAAA,CAAAC,CAAA,CAAAe,GAAA,SAAAtB,CAAA,EAAAR,CAAA,oBAAAlB,KAAA,WAAAA,MAAAyB,CAAA,EAAAG,CAAA,aAAA2C,2BAAA,eAAA/C,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAAyC,MAAA,CAAA1C,CAAA,EAAAG,CAAA,EAAAJ,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAA4C,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA1B,iBAAArB,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAV,CAAA,GAAAgC,CAAA,mBAAAnB,CAAA,EAAAC,CAAA,QAAAd,CAAA,KAAAkC,CAAA,QAAAoB,KAAA,sCAAAtD,CAAA,KAAAmC,CAAA,oBAAAtB,CAAA,QAAAC,CAAA,WAAAhC,KAAA,EAAAyB,CAAA,EAAAgD,IAAA,eAAA7C,CAAA,CAAA8C,MAAA,GAAA3C,CAAA,EAAAH,CAAA,CAAAoB,GAAA,GAAAhB,CAAA,UAAAC,CAAA,GAAAL,CAAA,CAAA+C,QAAA,MAAA1C,CAAA,QAAAE,CAAA,GAAAyC,mBAAA,CAAA3C,CAAA,EAAAL,CAAA,OAAAO,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAP,CAAA,CAAA8C,MAAA,EAAA9C,CAAA,CAAAiD,IAAA,GAAAjD,CAAA,CAAAkD,KAAA,GAAAlD,CAAA,CAAAoB,GAAA,sBAAApB,CAAA,CAAA8C,MAAA,QAAAxD,CAAA,KAAAgC,CAAA,QAAAhC,CAAA,GAAAmC,CAAA,EAAAzB,CAAA,CAAAoB,GAAA,EAAApB,CAAA,CAAAmD,iBAAA,CAAAnD,CAAA,CAAAoB,GAAA,uBAAApB,CAAA,CAAA8C,MAAA,IAAA9C,CAAA,CAAAoD,MAAA,WAAApD,CAAA,CAAAoB,GAAA,GAAA9B,CAAA,GAAAkC,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAAtB,CAAA,EAAAE,CAAA,EAAAE,CAAA,oBAAA6B,CAAA,CAAAV,IAAA,QAAA7B,CAAA,GAAAU,CAAA,CAAA6C,IAAA,GAAApB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAAtD,KAAA,EAAAyD,CAAA,CAAAT,GAAA,EAAAyB,IAAA,EAAA7C,CAAA,CAAA6C,IAAA,kBAAAhB,CAAA,CAAAV,IAAA,KAAA7B,CAAA,GAAAmC,CAAA,EAAAzB,CAAA,CAAA8C,MAAA,YAAA9C,CAAA,CAAAoB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA4B,oBAAApD,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAgD,MAAA,EAAAxD,CAAA,GAAAM,CAAA,CAAAJ,QAAA,CAAAQ,CAAA,OAAAV,CAAA,KAAAO,CAAA,SAAAC,CAAA,CAAAiD,QAAA,qBAAA/C,CAAA,IAAAJ,CAAA,CAAAJ,QAAA,CAAA6D,MAAA,KAAAvD,CAAA,CAAAgD,MAAA,aAAAhD,CAAA,CAAAsB,GAAA,GAAAvB,CAAA,EAAAmD,mBAAA,CAAApD,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAgD,MAAA,kBAAA9C,CAAA,KAAAF,CAAA,CAAAgD,MAAA,YAAAhD,CAAA,CAAAsB,GAAA,OAAAkC,SAAA,uCAAAtD,CAAA,iBAAA0B,CAAA,MAAAvB,CAAA,GAAAe,QAAA,CAAA5B,CAAA,EAAAM,CAAA,CAAAJ,QAAA,EAAAM,CAAA,CAAAsB,GAAA,mBAAAjB,CAAA,CAAAgB,IAAA,SAAArB,CAAA,CAAAgD,MAAA,YAAAhD,CAAA,CAAAsB,GAAA,GAAAjB,CAAA,CAAAiB,GAAA,EAAAtB,CAAA,CAAAiD,QAAA,SAAArB,CAAA,MAAAtB,CAAA,GAAAD,CAAA,CAAAiB,GAAA,SAAAhB,CAAA,GAAAA,CAAA,CAAAyC,IAAA,IAAA/C,CAAA,CAAAF,CAAA,CAAA2D,UAAA,IAAAnD,CAAA,CAAAhC,KAAA,EAAA0B,CAAA,CAAA0D,IAAA,GAAA5D,CAAA,CAAA6D,OAAA,eAAA3D,CAAA,CAAAgD,MAAA,KAAAhD,CAAA,CAAAgD,MAAA,WAAAhD,CAAA,CAAAsB,GAAA,GAAAvB,CAAA,GAAAC,CAAA,CAAAiD,QAAA,SAAArB,CAAA,IAAAtB,CAAA,IAAAN,CAAA,CAAAgD,MAAA,YAAAhD,CAAA,CAAAsB,GAAA,OAAAkC,SAAA,sCAAAxD,CAAA,CAAAiD,QAAA,SAAArB,CAAA,cAAAgC,aAAA7D,CAAA,QAAAD,CAAA,KAAA+D,MAAA,EAAA9D,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAgE,QAAA,GAAA/D,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAiE,UAAA,GAAAhE,CAAA,KAAAD,CAAA,CAAAkE,QAAA,GAAAjE,CAAA,WAAAkE,UAAA,CAAAC,IAAA,CAAApE,CAAA,cAAAqE,cAAApE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAAqE,UAAA,QAAAtE,CAAA,CAAAuB,IAAA,oBAAAvB,CAAA,CAAAwB,GAAA,EAAAvB,CAAA,CAAAqE,UAAA,GAAAtE,CAAA,aAAAoB,QAAAnB,CAAA,SAAAkE,UAAA,MAAAJ,MAAA,aAAA9D,CAAA,CAAAuC,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAArC,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAQ,CAAA,OAAAN,CAAA,SAAAA,CAAA,CAAAuB,IAAA,CAAAzB,CAAA,4BAAAA,CAAA,CAAA4D,IAAA,SAAA5D,CAAA,OAAAwE,KAAA,CAAAxE,CAAA,CAAAyE,MAAA,SAAA/E,CAAA,OAAAa,CAAA,YAAAqD,KAAA,aAAAlE,CAAA,GAAAM,CAAA,CAAAyE,MAAA,OAAArE,CAAA,CAAAqB,IAAA,CAAAzB,CAAA,EAAAN,CAAA,UAAAkE,IAAA,CAAApF,KAAA,GAAAwB,CAAA,CAAAN,CAAA,GAAAkE,IAAA,CAAAX,IAAA,OAAAW,IAAA,SAAAA,IAAA,CAAApF,KAAA,GAAAyB,CAAA,EAAA2D,IAAA,CAAAX,IAAA,OAAAW,IAAA,YAAArD,CAAA,CAAAqD,IAAA,GAAArD,CAAA,gBAAAmD,SAAA,CAAAjE,OAAA,CAAAO,CAAA,kCAAA+B,iBAAA,CAAAjC,SAAA,GAAAkC,0BAAA,EAAAtC,CAAA,CAAA4C,CAAA,mBAAA9D,KAAA,EAAAwD,0BAAA,EAAAjB,YAAA,SAAArB,CAAA,CAAAsC,0BAAA,mBAAAxD,KAAA,EAAAuD,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAX,CAAA,CAAA2E,mBAAA,aAAA1E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAJ,WAAA,WAAAG,CAAA,KAAAA,CAAA,KAAA+B,iBAAA,6BAAA/B,CAAA,CAAA0E,WAAA,IAAA1E,CAAA,CAAA4E,IAAA,OAAA5E,CAAA,CAAA6E,IAAA,aAAA5E,CAAA,WAAAE,MAAA,CAAA2E,cAAA,GAAA3E,MAAA,CAAA2E,cAAA,CAAA7E,CAAA,EAAA+B,0BAAA,KAAA/B,CAAA,CAAA8E,SAAA,GAAA/C,0BAAA,EAAAnB,MAAA,CAAAZ,CAAA,EAAAU,CAAA,yBAAAV,CAAA,CAAAH,SAAA,GAAAK,MAAA,CAAAgB,MAAA,CAAAmB,CAAA,GAAArC,CAAA,KAAAD,CAAA,CAAAgF,KAAA,aAAA/E,CAAA,aAAA4C,OAAA,EAAA5C,CAAA,OAAAsC,qBAAA,CAAAG,aAAA,CAAA5C,SAAA,GAAAe,MAAA,CAAA6B,aAAA,CAAA5C,SAAA,EAAAW,CAAA,iCAAAT,CAAA,CAAA0C,aAAA,GAAAA,aAAA,EAAA1C,CAAA,CAAAiF,KAAA,aAAAhF,CAAA,EAAAC,CAAA,EAAAE,CAAA,EAAAV,CAAA,EAAAa,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA2E,OAAA,OAAA1E,CAAA,OAAAkC,aAAA,CAAAzB,IAAA,CAAAhB,CAAA,EAAAC,CAAA,EAAAE,CAAA,EAAAV,CAAA,GAAAa,CAAA,UAAAP,CAAA,CAAA2E,mBAAA,CAAAzE,CAAA,IAAAM,CAAA,GAAAA,CAAA,CAAAoD,IAAA,GAAAd,IAAA,WAAA7C,CAAA,WAAAA,CAAA,CAAAgD,IAAA,GAAAhD,CAAA,CAAAzB,KAAA,GAAAgC,CAAA,CAAAoD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA9B,CAAA,iCAAAK,MAAA,CAAAyB,CAAA,6DAAAtC,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAE,CAAA,IAAAJ,CAAA,EAAAE,CAAA,CAAAkE,IAAA,CAAAhE,CAAA,UAAAF,CAAA,CAAAkF,OAAA,aAAAxB,KAAA,WAAA1D,CAAA,CAAAuE,MAAA,SAAAxE,CAAA,GAAAC,CAAA,CAAAmF,GAAA,QAAApF,CAAA,IAAAD,CAAA,SAAA4D,IAAA,CAAApF,KAAA,GAAAyB,CAAA,EAAA2D,IAAA,CAAAX,IAAA,OAAAW,IAAA,WAAAA,IAAA,CAAAX,IAAA,OAAAW,IAAA,QAAA5D,CAAA,CAAAqC,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAAtB,SAAA,KAAAD,WAAA,EAAAuB,OAAA,EAAAmD,KAAA,WAAAA,MAAAvE,CAAA,aAAAsF,IAAA,WAAA1B,IAAA,WAAAP,IAAA,QAAAC,KAAA,GAAArD,CAAA,OAAAgD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA1B,GAAA,GAAAvB,CAAA,OAAAkE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAArE,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAAqF,MAAA,OAAAnF,CAAA,CAAAqB,IAAA,OAAAvB,CAAA,MAAAsE,KAAA,EAAAtE,CAAA,CAAAsF,KAAA,cAAAtF,CAAA,IAAAD,CAAA,MAAAwF,IAAA,WAAAA,KAAA,SAAAxC,IAAA,WAAAhD,CAAA,QAAAkE,UAAA,IAAAG,UAAA,kBAAArE,CAAA,CAAAsB,IAAA,QAAAtB,CAAA,CAAAuB,GAAA,cAAAkE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAAvD,CAAA,aAAAiD,IAAA,QAAAjD,CAAA,MAAAE,CAAA,kBAAAyF,OAAAvF,CAAA,EAAAV,CAAA,WAAAc,CAAA,CAAAe,IAAA,YAAAf,CAAA,CAAAgB,GAAA,GAAAxB,CAAA,EAAAE,CAAA,CAAA0D,IAAA,GAAAxD,CAAA,EAAAV,CAAA,KAAAQ,CAAA,CAAAgD,MAAA,WAAAhD,CAAA,CAAAsB,GAAA,GAAAvB,CAAA,KAAAP,CAAA,aAAAA,CAAA,QAAAyE,UAAA,CAAAM,MAAA,MAAA/E,CAAA,SAAAA,CAAA,QAAAa,CAAA,QAAA4D,UAAA,CAAAzE,CAAA,GAAAc,CAAA,GAAAD,CAAA,CAAA+D,UAAA,iBAAA/D,CAAA,CAAAwD,MAAA,SAAA4B,MAAA,aAAApF,CAAA,CAAAwD,MAAA,SAAAuB,IAAA,QAAA7E,CAAA,GAAAL,CAAA,CAAAqB,IAAA,CAAAlB,CAAA,eAAAI,CAAA,GAAAP,CAAA,CAAAqB,IAAA,CAAAlB,CAAA,qBAAAE,CAAA,IAAAE,CAAA,aAAA2E,IAAA,GAAA/E,CAAA,CAAAyD,QAAA,SAAA2B,MAAA,CAAApF,CAAA,CAAAyD,QAAA,gBAAAsB,IAAA,GAAA/E,CAAA,CAAA0D,UAAA,SAAA0B,MAAA,CAAApF,CAAA,CAAA0D,UAAA,cAAAxD,CAAA,aAAA6E,IAAA,GAAA/E,CAAA,CAAAyD,QAAA,SAAA2B,MAAA,CAAApF,CAAA,CAAAyD,QAAA,qBAAArD,CAAA,QAAAqC,KAAA,qDAAAsC,IAAA,GAAA/E,CAAA,CAAA0D,UAAA,SAAA0B,MAAA,CAAApF,CAAA,CAAA0D,UAAA,YAAAT,MAAA,WAAAA,OAAAvD,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAR,CAAA,QAAAyE,UAAA,CAAAjE,CAAA,OAAAR,CAAA,CAAAqE,MAAA,SAAAuB,IAAA,IAAAlF,CAAA,CAAAqB,IAAA,CAAA/B,CAAA,wBAAA4F,IAAA,GAAA5F,CAAA,CAAAuE,UAAA,QAAA1D,CAAA,GAAAb,CAAA,aAAAa,CAAA,iBAAAN,CAAA,mBAAAA,CAAA,KAAAM,CAAA,CAAAwD,MAAA,IAAA/D,CAAA,IAAAA,CAAA,IAAAO,CAAA,CAAA0D,UAAA,KAAA1D,CAAA,cAAAC,CAAA,GAAAD,CAAA,GAAAA,CAAA,CAAA+D,UAAA,cAAA9D,CAAA,CAAAe,IAAA,GAAAtB,CAAA,EAAAO,CAAA,CAAAgB,GAAA,GAAAxB,CAAA,EAAAO,CAAA,SAAA2C,MAAA,gBAAAU,IAAA,GAAArD,CAAA,CAAA0D,UAAA,EAAAnC,CAAA,SAAA8D,QAAA,CAAApF,CAAA,MAAAoF,QAAA,WAAAA,SAAA3F,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAAsB,IAAA,QAAAtB,CAAA,CAAAuB,GAAA,qBAAAvB,CAAA,CAAAsB,IAAA,mBAAAtB,CAAA,CAAAsB,IAAA,QAAAqC,IAAA,GAAA3D,CAAA,CAAAuB,GAAA,gBAAAvB,CAAA,CAAAsB,IAAA,SAAAmE,IAAA,QAAAlE,GAAA,GAAAvB,CAAA,CAAAuB,GAAA,OAAA0B,MAAA,kBAAAU,IAAA,yBAAA3D,CAAA,CAAAsB,IAAA,IAAAvB,CAAA,UAAA4D,IAAA,GAAA5D,CAAA,GAAA8B,CAAA,KAAA+D,MAAA,WAAAA,OAAA5F,CAAA,aAAAD,CAAA,QAAAmE,UAAA,CAAAM,MAAA,MAAAzE,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAiE,UAAA,CAAAnE,CAAA,OAAAE,CAAA,CAAA+D,UAAA,KAAAhE,CAAA,cAAA2F,QAAA,CAAA1F,CAAA,CAAAoE,UAAA,EAAApE,CAAA,CAAAgE,QAAA,GAAAG,aAAA,CAAAnE,CAAA,GAAA4B,CAAA,OAAAgE,KAAA,WAAAC,OAAA9F,CAAA,aAAAD,CAAA,QAAAmE,UAAA,CAAAM,MAAA,MAAAzE,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAiE,UAAA,CAAAnE,CAAA,OAAAE,CAAA,CAAA6D,MAAA,KAAA9D,CAAA,QAAAG,CAAA,GAAAF,CAAA,CAAAoE,UAAA,kBAAAlE,CAAA,CAAAmB,IAAA,QAAA7B,CAAA,GAAAU,CAAA,CAAAoB,GAAA,EAAA6C,aAAA,CAAAnE,CAAA,YAAAR,CAAA,YAAAsD,KAAA,8BAAAgD,aAAA,WAAAA,cAAAhG,CAAA,EAAAE,CAAA,EAAAE,CAAA,gBAAA+C,QAAA,KAAAvD,QAAA,EAAAyC,MAAA,CAAArC,CAAA,GAAA2D,UAAA,EAAAzD,CAAA,EAAA2D,OAAA,EAAAzD,CAAA,oBAAA8C,MAAA,UAAA1B,GAAA,GAAAvB,CAAA,GAAA6B,CAAA,OAAA9B,CAAA;AAAA,SAAAiG,mBAAAC,GAAA,EAAAtD,OAAA,EAAAuD,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAA9H,GAAA,EAAAiD,GAAA,cAAA8E,IAAA,GAAAJ,GAAA,CAAA3H,GAAA,EAAAiD,GAAA,OAAAhD,KAAA,GAAA8H,IAAA,CAAA9H,KAAA,WAAA+H,KAAA,IAAAJ,MAAA,CAAAI,KAAA,iBAAAD,IAAA,CAAArD,IAAA,IAAAL,OAAA,CAAApE,KAAA,YAAA0G,OAAA,CAAAtC,OAAA,CAAApE,KAAA,EAAAsE,IAAA,CAAAsD,KAAA,EAAAC,MAAA;AAAA,SAAAG,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAA1B,OAAA,WAAAtC,OAAA,EAAAuD,MAAA,QAAAD,GAAA,GAAAO,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAP,MAAA5H,KAAA,IAAAyH,kBAAA,CAAAC,GAAA,EAAAtD,OAAA,EAAAuD,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAA7H,KAAA,cAAA6H,OAAAS,GAAA,IAAAb,kBAAA,CAAAC,GAAA,EAAAtD,OAAA,EAAAuD,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAS,GAAA,KAAAV,KAAA,CAAAW,SAAA;AAAA,SAAA9I,gBAAA+I,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAvD,SAAA;AAAA,SAAAwD,kBAAAC,MAAA,EAAAC,KAAA,aAAA7G,CAAA,MAAAA,CAAA,GAAA6G,KAAA,CAAA3C,MAAA,EAAAlE,CAAA,UAAA8G,UAAA,GAAAD,KAAA,CAAA7G,CAAA,GAAA8G,UAAA,CAAAvG,UAAA,GAAAuG,UAAA,CAAAvG,UAAA,WAAAuG,UAAA,CAAAtG,YAAA,wBAAAsG,UAAA,EAAAA,UAAA,CAAArG,QAAA,SAAAb,MAAA,CAAAG,cAAA,CAAA6G,MAAA,EAAAG,cAAA,CAAAD,UAAA,CAAA9I,GAAA,GAAA8I,UAAA;AAAA,SAAA/I,aAAA2I,WAAA,EAAAM,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAL,iBAAA,CAAAD,WAAA,CAAAnH,SAAA,EAAAyH,UAAA,OAAAC,WAAA,EAAAN,iBAAA,CAAAD,WAAA,EAAAO,WAAA,GAAArH,MAAA,CAAAG,cAAA,CAAA2G,WAAA,iBAAAjG,QAAA,mBAAAiG,WAAA;AAAA,SAAAK,eAAArH,CAAA,QAAAM,CAAA,GAAAkH,YAAA,CAAAxH,CAAA,gCAAAR,OAAA,CAAAc,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAkH,aAAAxH,CAAA,EAAAC,CAAA,oBAAAT,OAAA,CAAAQ,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAD,CAAA,GAAAC,CAAA,CAAAN,MAAA,CAAA+H,WAAA,kBAAA1H,CAAA,QAAAO,CAAA,GAAAP,CAAA,CAAAyB,IAAA,CAAAxB,CAAA,EAAAC,CAAA,gCAAAT,OAAA,CAAAc,CAAA,UAAAA,CAAA,YAAAmD,SAAA,yEAAAxD,CAAA,GAAAyH,MAAA,GAAAC,MAAA,EAAA3H,CAAA;AAAA,SAAA4H,4BAAAtI,GAAA,EAAAuI,UAAA,IAAAC,0BAAA,CAAAxI,GAAA,EAAAuI,UAAA,GAAAA,UAAA,CAAAE,GAAA,CAAAzI,GAAA;AAAA,SAAArB,2BAAAqB,GAAA,EAAA0I,UAAA,EAAAzJ,KAAA,IAAAuJ,0BAAA,CAAAxI,GAAA,EAAA0I,UAAA,GAAAA,UAAA,CAAAC,GAAA,CAAA3I,GAAA,EAAAf,KAAA;AAAA,IDDqBX,IAAI,CCCzBkK,EDDyBjK,OAAA,CAAAC,OAAA,UCCzBwB,GAAA,EAAA4I,iBAAA,QAAAA,iBAAA,CAAAC,GAAA,CAAA7I,GAAA,eAAAmE,SAAA;AAAA,EDGI,OCHJhF,EDGIb,KAAYG,OAAO,EAAC,MCHxB6D,CAAA,EAAArB,CAAA,WAAAqB,CAAA,CAAAwG,GAAA,CAAAC,iBAAA,CAAAzG,CAAA,EAAArB,CAAA;AAAA,IDGwBvC,KCHxBI,UDGwB,OAAAR,IAAA,CCHxBgE,CAAA,EAAArB,CAAA,EAAAN,CAAA,WAAA2B,CAAA,CAAAqG,GAAA,CAAAI,iBAAA,CAAAzG,CAAA,EAAArB,CAAA,GAAAN,CAAA,GAAAA,CAAA;AAAA,IDGwBhC,KCHxBoK,kBAAAtI,CAAA,EDGwB,ACHxBC,CAAA,EAAAG,CAAA,GDGwBjC,QAAA,kBCHxB6B,CAAA,GAAAA,CAAA,KAAAC,CAAA,GAAAD,CAAA,CAAAoI,GAAA,CAAAnI,CAAA,UAAA2G,SAAA,CAAAnC,MAAA,OAAAxE,CAAA,GAAAG,CAAA,YAAAsD,SAAA;AAAA,IDGwBxF,ACHxBqK,UAAA,gBDGwB,ICHxBC,GDGwBpK,ICHxB,ODGwB;ACHxB,IDIMC,ACJNoK,YAAA,SDIM,CAAAtK,QAAA,ECJNqK,IDIU,EAAYxK,CCJtB,MDI6B;ACJ7B,IDKMK,ACLNqK,qBDKM,CAAAtK,ECLN,SDKM,MAAI,EAAe,GCLzBoK,EDK8B,KCL9B;AAAA,EDMI,ECNJG,sBAAA,oBAAAH,OAAA;AAAA,EDMK,ECNLI,KDMKtK,KCNL,ODMK,CAAAT,IAAA,QCNL2K,OAAA;AAAA,IDMKjK,ACNLsK,GDMK,CCNL,oBAAAL,OAAA;AAAA,IDMKhK,ACNLsK,KDMK,ACNL,EDQI,SAAArK,SCRJ+J,EDQI,EAAY,GCRhB;AAAA,IAAAO,EDSM,OAAArK,MCTN,eDSM,CAAAP,ICTN6K,IDSM,EAAO,CCTb,GDSiB;ACTjB,IDUI,ACTiBC,QAAQ,GAAAnL,OAAA,CAAAC,OAAA;EDSxB,ACAD,SAAAkL,SAAYC,IAAI,EAAC;IDAhB3K,ACAgBN,GDAhB,YCAgB,OAAAgL,QAAA;IDAhBzK,ACAgBqJ,KDAhB,EAED,SAAAlJ,WCFiB,GDEHC,ICFGmK,MDEO,EAAC,OCFR;IAAA7K,EDGfG,qBAAA,CAAAD,ECHe,OAAAmK,EDGf,MAAI,EAAe3J,ACHJ,EARJ,CAAC,ODWiB;IAC/B,ACZcV,0BAAA,OAAAuK,YAAA,EACC,CAAC;EDWf,ECXevK,0BAAA,OAAAwK,wBAAA,EACW,CAAC;IDU3BnK,ACV2BL,GDU3B,uBCV2B,OAAAyK,sBAAA,EACH,CAAC;IDSzBnK,ACTyBN,KDSzB,EAED,SAAAW,OAAA,EAAQ,CCXkB,OAAA+J,UAAA,EACb,CAAC;IAAA1K,EDWZG,qBAAA,CAAAF,ECXY,MDWZ,CCXY0K,IAAA,CDWR,EAAAnK,qBAAA,CAAAN,WAAA,EAAY,IAAI;IACtB,ACZcF,0BAAA,OAAA4K,KAAA;EDYb,ECPCzK,qBAAA,CAAAyK,KAAA,MAAI,EAASI,IAAI;IDOlB3K,ACNCF,GDMD,kBCNC,CAAAwK,IAAA,MAAI,EAAAP,iBAAA,CAAAS,eAAA,EAAQ,IAAI,EAAAI,aAAA,EAAA1H,IAAA,CAAJ,IAAI;EAClB,EDKCjD,KAAA,EAED,SAAAM,qBAAA,EAAsB;ECPrB,IDQC,GCRDR,IDQQ,IAAI,CAACG,GCRb,CAAAwK,MDQuB,CAAC,CAAC,ACRzB,GDQ4B,CAAC,GAAG,CAAC;IAClC,ACTC1K,GAAA;IAAAC,KAAA,EAqDD,SAAA4K,iCAAiCC,GAAG,EAAEC,GAAG,EAAC;ID1C5C,EC0C4C,IAAAC,KAAA;ED1C5C,IC2CI,IAAIC,uBAAuB,GAAAlB,iBAAA,CAAAS,eAAA,EAAG,IAAI,EAAAU,wBAAA,EAAAhI,IAAA,CAAJ,IAAI,EAA0B4H,GAAG,EAAEC,GAAG,CAAC;ID3CzE/K,EC4CI,CD5CJ,GC4CQmL,aAAa,GAAGF,uBAAuB,CAACG,GAAG,CAAC,UAAAC,CAAC;ID5CrDpL,IC4CqD,CD5CrD,EACE,IC2CmD8J,KD3CnDvJ,YC2CmD,CAAAgK,ID3C3B/J,WAAW,AC2CgB,ED3Cf,AC2CmBuK,KAAI,EAAAM,oBAAA,EAAApI,IAAA,CAAJ8H,KAAI,EAAsBK,CAAC;MD1ChF,AC0CgF,CAAC,CAAC,KD1C3E5K,WAAW,GAAG,CAAC;IACxB,EC0CE,OAAO0K,aAAa,CAACI,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI,EAAK;QACzC,OAAOA,IAAI,CAAClL,oBAAoB,CAAC,CAAC,GAAGiL,GAAG;IDzC9C,ECyC+C,CAAC,EAAE,CAAC,CAAC;EDzCpD,EC0CE;EAAC,ED1CHxL,GAAA;IAAAC,AC0CGD,GAAA,ED1CH,EAEE,SAAAU,gBAAuBD,WAAW,EAAC;ICwClCR,EDvCC,GCuCD,EAcD,EDrDSQ,OCqDTiL,IDrDoB,GAAG,CAAC,oBCqDxB,EAA6B;IDpD7B,ECqDE,KAAI,IAAIZ,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG3K,qBAAA,CAAAmK,IAAA,MAAI,EAAMpE,MAAM,EAAE4E,GAAG,EAAE,EAAC;QAC7C,KAAI,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG5K,qBAAA,CAAAmK,IAAA,MAAI,EAAMpE,MAAM,EAAE6E,GAAG,EAAE,EAAC;IDpDrD,MCsDU,IAAIY,qBAAqB,GAAG,IAAI,CAACd,gCAAgC,CAACC,GAAG,EAAEC,GAAG,CAAC;EDtDrF,QCwDU,IAAIU,IAAI,GAAGtL,qBAAA,CAAAmK,IAAA,MAAI,EAAMQ,GAAG,CAAC,CAACC,GAAG,CAAC;IDxDxC/K,GAAA,GC2DM,IAAGyL,IAAI,CAACvL,UAAU,CAAC,CAAC,EAAC;ID3D3BD,KAAA,EAEE,CC0DM,IAAGX,ID1DTqB,SC0Da,CAACA,gBD1DmBF,SC0DM,CAACkL,CD1DI,EAAC,kBC0DgB,CAAC,EAAC;MDzD7D,OAAOlL,CC0DDgL,IAAI,CAACrL,KD1DO,IAAI,CAAC,GC0DC,CD1DGK,AC0DF,IAAI,CAAC,MD1DQ,IAAI,CAAC;IAC7C,QC0DM,CAAC,MAEDgL,IAAI,CAACrL,aAAa,CAAC,KAAK,CAAC;UAC3B,CAAC,MACG;ID5DV,QC6DQ,IAAGd,aAAI,CAACsB,qBAAqB,CAAC+K,qBAAqB,CAAC,EAAC;ED7D7D,YC8DUF,IAAI,CAACrL,aAAa,CAAC,IAAI,CAAC;ID9DlCJ,GAAA,KC+DQ,CAAC,MACG;IDhEZC,KAAA,EACE,GCgEQwL,IAAI,CAACrL,CDhEbQ,YCgE0B,CAAC,KAAK,CAAC,GDhEJH,WAAW,EAAC;MACvC,MCgEI,CDhEGA,WAAW,IAAI,CAAC;IACzB,MCgEI;EDhEH,MCiEC;ADjED,MCkED;IACF;EAAC;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAA2L,iBAAA,EAAkB;MACd,KAAI,IAAId,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG3K,qBAAA,CAAAmK,IAAA,MAAI,EAAMpE,MAAM,EAAE4E,GAAG,EAAE,EAAC;QAC/C,KAAI,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG5K,qBAAA,CAAAmK,IAAA,MAAI,EAAMpE,MAAM,EAAE6E,GAAG,EAAE,EAAC;UAAA,IAAAc,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;UAC/C,IAAMP,IAAI,GAAGtL,qBAAA,CAAAmK,IAAA,MAAI,EAAMQ,GAAG,CAAC,CAACC,GAAG,CAAC;UAChCU,IAAI,CAACnL,MAAM,CAAC,CAAC;UAEb,IAAI2L,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;UAC3CF,KAAK,CAACG,IAAI,CAACtB,GAAG,CAAC,CAACuB,KAAK,CAACtB,GAAG,CAAC,CAACuB,SAAS,GAAGb,IAAI,CAAClL,oBAAoB,CAAC,CAAC;UAElE,IAAGkL,IAAI,CAACvL,UAAU,CAAC,CAAC,EAClBJ,qBAAA,CAAAqK,wBAAA,MAAI,GAAA0B,sBAAA,GAAA1L,qBAAA,CAAAgK,wBAAA,EAAJ,IAAI,GAAA2B,sBAAA,GAAAD,sBAAA,IAAAA,sBAAA,IAAAC,sBAAA,CAA2B,KAEjChM,qBAAA,CAAAsK,sBAAA,MAAI,GAAA2B,sBAAA,GAAA5L,qBAAA,CAAAiK,sBAAA,EAAJ,IAAI,GAAA4B,sBAAA,GAAAD,sBAAA,IAAAA,sBAAA,IAAAC,sBAAA;QACJ;MACF;MAEAlM,qBAAA,CAAAkK,UAAA,MAAI,EAAA7J,qBAAA,CAAA6J,UAAA,EAAJ,IAAI,IAAA7J,qBAAA,CAAAiK,sBAAA,EAAe,IAAI;MACvBtK,qBAAA,CAAAoK,YAAA,MAAI,EAAA/J,qBAAA,CAAA+J,YAAA,EAAJ,IAAI,IAAA/J,qBAAA,CAAAgK,wBAAA,EAAiB,IAAI;IAC3B;EAAC;IAAAnK,GAAA;IAAAC,KAAA;MAAA,IAAAsM,YAAA,GAAAtE,iBAAA,eAAAzG,mBAAA,GAAA8E,IAAA,CAED,SAAAkG,QAAA;QAAA,IAAAC,KAAA,EAAAC,eAAA,EAAAC,gBAAA;QAAA,OAAAnL,mBAAA,GAAAkB,IAAA,UAAAkK,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAA9F,IAAA,GAAA8F,QAAA,CAAAxH,IAAA;YAAA;cACE0E,iBAAA,CAAAS,eAAA,MAAI,EAAAsC,sBAAA,EAAA5J,IAAA,CAAJ,IAAI;cAEEuJ,KAAK,GAAG,SAARA,KAAKA,CAAIM,KAAK;gBAAA,OAAK,IAAIpG,OAAO,CAAC,UAACtC,OAAO;kBAAA,OAAK2I,UAAU,CAAC3I,OAAO,EAAE0I,KAAK,CAAC;gBAAA,EAAC;cAAA;YAAA;cAAA,MAGvE5M,qBAAA,CAAAkK,UAAA,MAAI,IAAc,GAAG;gBAAAwC,QAAA,CAAAxH,IAAA;gBAAA;cAAA;cACzB,IAAI,CAACqG,2BAA2B,CAAC,CAAC;cAClC,IAAI,CAACE,gBAAgB,CAAC,CAAC;cAAAiB,QAAA,CAAAxH,IAAA;cAAA,OAGjBoH,KAAK,CAAC,IAAI,CAAC;YAAA;cAEjB1C,iBAAA,CAAAS,eAAA,MAAI,EAAAsC,sBAAA,EAAA5J,IAAA,CAAJ,IAAI;cAEJpD,qBAAA,CAAAuK,UAAA,MAAI,GAAAqC,eAAA,GAAAvM,qBAAA,CAAAkK,UAAA,EAAJ,IAAI,GAAAsC,gBAAA,GAAAD,eAAA,IAAAA,eAAA,IAAAC,gBAAA;cAAaE,QAAA,CAAAxH,IAAA;cAAA;YAAA;YAAA;cAAA,OAAAwH,QAAA,CAAA3F,IAAA;UAAA;QAAA,GAAAsF,OAAA;MAAA,CAEpB;MAAA,SAAAS,YAAA;QAAA,OAAAV,YAAA,CAAAjE,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAA4E,WAAA;IAAA;EAAA;AAAA;AAAA,SAAAH,uBAAA,EAvIyB;EACtBhN,qBAAA,CAAAsK,sBAAA,MAAI,EAA0B,CAAC;EAC/BtK,qBAAA,CAAAqK,wBAAA,MAAI,EAA4B,CAAC;AACnC;AAAC,SAAA+C,8BAE6BpC,GAAG,EAAEC,GAAG,EAAEoC,KAAK,EAAC;EAC5C,IAAIC,QAAQ,GAAGC,KAAK,CAACvC,GAAG,EAAEC,GAAG,CAAC;EAC9B,OAAOoC,KAAK,CAACG,KAAK,CAAC,UAACC,OAAO,EAAEC,KAAK;IAAA,OAAKD,OAAO,KAAKH,QAAQ,CAACI,KAAK,CAAC;EAAA,EAAC;AACrE;AAAC,SAAAtC,yBAEwBJ,GAAG,EAAEC,GAAG,EAAC;EAAA,IAAA0C,MAAA;EAClC,IAAIC,OAAO,GAAA3D,iBAAA,CAAAS,eAAA,EAAG,IAAI,EAAAmD,sBAAA,EAAAzK,IAAA,CAAJ,IAAI,EAAwBmK,KAAK,CAAEtC,GAAG,GAAG,CAAC,EAAGA,GAAG,EAAIA,GAAG,GAAG,CAAE,CAAC,CAAC;EAC5E,IAAIqB,IAAI,GAAArC,iBAAA,CAAAS,eAAA,EAAG,IAAI,EAAAmD,sBAAA,EAAAzK,IAAA,CAAJ,IAAI,EAAwBmK,KAAK,CAAEvC,GAAG,GAAG,CAAC,EAAGA,GAAG,EAAGA,GAAG,GAAG,CAAE,CAAC,CAAC;EACxE,IAAI8C,gBAAgB,GAAGxB,IAAI,CAACyB,OAAO,CAAC,UAAA/C,GAAG;IAAA,OAAI4C,OAAO,CAACtC,GAAG,CAAC,UAAA0C,MAAM;MAAA,OAAIT,KAAK,CAACvC,GAAG,EAAEgD,MAAM,CAAC;IAAA,EAAC;EAAA,EAAC;EACrF,IAAIC,+BAA+B,GAAGH,gBAAgB,CAACI,MAAM,CAAC,UAAAC,eAAe;IAAA,OAAI,CAAAlE,iBAAA,CAAAS,eAAA,EAACiD,MAAI,EAAAP,6BAAA,EAAAhK,IAAA,CAAJuK,MAAI,EAA+B3C,GAAG,EAAEC,GAAG,EAAEkD,eAAe,CAAC;EAAA,EAAC;EAChJ,OAAOF,+BAA+B;AACxC;AAAC,SAAAzC,qBAEoB4C,UAAU,EAAC;EAC9B,IAAIpD,GAAG,GAAGoD,UAAU,CAAC,CAAC,CAAC;EACvB,IAAInD,GAAG,GAAGmD,UAAU,CAAC,CAAC,CAAC;EACvB,OAAO/N,qBAAA,CAAAmK,IAAA,MAAI,EAAMQ,GAAG,CAAC,CAACC,GAAG,CAAC;AAC5B;AAAC,SAAA4C,uBAEsBR,KAAK,EAAC;EAAA,IAAAgB,MAAA;EAC3B,OAAOhB,KAAK,CAAC/B,GAAG,CAAC,UAAAnL,KAAK;IAAA,OAAIA,KAAK,GAAImO,IAAI,CAACC,KAAK,CAACpO,KAAK,GAAAE,qBAAA,CAAAoK,KAAA,EAAG4D,MAAI,CAAM,CAAC,GAAAhO,qBAAA,CAAAoK,KAAA,EAAG4D,MAAI,CAAO;EAAA,EAAC;AAClF;AAAC,SAAAvD,cAAA,EAEc;EAAA,IAAA0D,MAAA;EACb,IAAInB,KAAK,GAAIE,KAAK,CAACkB,IAAI,CAAC,IAAIlB,KAAK,CAAAlN,qBAAA,CAAAoK,KAAA,EAAC,IAAI,CAAM,CAAC,EAAE;IAAA,OAAM,IAAI8C,KAAK,CAAAlN,qBAAA,CAAAoK,KAAA,EAAC+D,MAAI,CAAM,CAAC;EAAA,EAAC;EACzE,IAAIrC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAE3C,KAAI,IAAIrB,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGqC,KAAK,CAACjH,MAAM,EAAE4E,GAAG,EAAE,EAAC;IAEzC,IAAInJ,CAAC,GAAGsK,KAAK,CAACuC,SAAS,CAAC,CAAC;IAEzB,KAAI,IAAIzD,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGoC,KAAK,CAACjH,MAAM,EAAE6E,GAAG,EAAE,EAAC;MACzC,IAAI9K,KAAK,GAAA8J,iBAAA,CAAAS,eAAA,EAAG,IAAI,EAAAiE,eAAA,EAAAvL,IAAA,CAAJ,IAAI,CAAkB;MAClCiK,KAAK,CAACrC,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG9K,KAAK;MACvB,IAAIwL,IAAI,GAAG9J,CAAC,CAAC+M,UAAU,CAAC,CAAC;MACzB,IAAIC,IAAI,GAAGzC,QAAQ,CAAC0C,cAAc,CAAC3O,KAAK,CAACM,oBAAoB,CAAC,CAAC,CAAC;MAChEkL,IAAI,CAACoD,WAAW,CAACF,IAAI,CAAC;IACxB;EACF;EAEA7O,qBAAA,CAAAoK,YAAA,MAAI,EAAA/J,qBAAA,CAAAgK,wBAAA,EAAgB,IAAI;EACxBrK,qBAAA,CAAAkK,UAAA,MAAI,EAAA7J,qBAAA,CAAAiK,sBAAA,EAAc,IAAI;EAEtB,OAAO+C,KAAK;AACd;AAAC,SAAAsB,gBAAA,EAUgB;EAChB,IAAGL,IAAI,CAACU,MAAM,CAAC,CAAC,GAAG,GAAG,EAAC;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IACtBlP,qBAAA,CAAAqK,wBAAA,MAAI,GAAA4E,qBAAA,GAAA5O,qBAAA,CAAAgK,wBAAA,EAAJ,IAAI,GAAA6E,sBAAA,GAAAD,qBAAA,IAAAA,qBAAA,IAAAC,sBAAA;IACJ,OAAO,IAAI1P,aAAI,CAAC,IAAI,CAAC;EACtB,CAAC,MACG;IAAA,IAAA2P,qBAAA,EAAAC,sBAAA;IACHpP,qBAAA,CAAAsK,sBAAA,MAAI,GAAA6E,qBAAA,GAAA9O,qBAAA,CAAAiK,sBAAA,EAAJ,IAAI,GAAA8E,sBAAA,GAAAD,qBAAA,IAAAA,qBAAA,IAAAC,sBAAA;IACJ,OAAO,IAAI5P,aAAI,CAAC,KAAK,CAAC;EACvB;AACD","file":"organism.62131c95.js","sourceRoot":"..\\src","sourcesContent":["export default class Cell {\r\n    #isAlive\r\n    #nextStatus\r\n\r\n    constructor(isAlive){\r\n      this.#isAlive = isAlive\r\n      this.#nextStatus = false\r\n    }\r\n    \r\n    getIsAlive(){\r\n      return this.#isAlive\r\n    }\r\n\r\n    setNextStatus(nextStatus){\r\n      this.#nextStatus = nextStatus\r\n    }\r\n\r\n    evolve(){\r\n      this.#isAlive = this.#nextStatus\r\n    }\r\n\r\n    getCellValueAsNumber(){\r\n      return this.getIsAlive() ? 1 : 0\r\n    }\r\n\r\n  //Any live cell with fewer than two live neighbors dies, as if by underpopulation.\r\n    static isUnderpopulated(livingCells){\r\n      return livingCells < 2 \r\n    } \r\n  \r\n  //Any live cell with more than three live neighbors dies, as if by overpopulation.\r\n  \r\n    static isOverpopulated(livingCells){\r\n      return livingCells < 3  \r\n    }\r\n\r\n  //Any live cell with two or three live neighbors lives on to the next generation.\r\n  \r\n    static isSurvivingOnToTheNextGen(livingCells){\r\n      return livingCells == 2 || livingCells == 3\r\n    }\r\n\r\n  //Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\r\n    static isAliveByReproduction(livingCells){\r\n      return livingCells == 3\r\n    }\r\n  }","import Cell from \"./cell.js\";\r\n\r\nexport default class Organism {\r\n    #deadCells = 0\r\n    #livingCells = 0\r\n    #livingCellsPerIteration = 0\r\n    #deadCellsPerIteration = 0\r\n    #iteration = 0\r\n    #org\r\n    #size\r\n\r\n    constructor(size){\r\n      this.#size = size\r\n      this.#org = this.#startingLive()\r\n    }\r\n\r\n    #resetIterationCounter(){\r\n      this.#deadCellsPerIteration = 0\r\n      this.#livingCellsPerIteration = 0\r\n    }\r\n\r\n    #isEqualToIdentityCoordinates(row, col, array){\r\n      let identity = Array(row, col)\r\n      return array.every((element, index) => element === identity[index]);\r\n    }\r\n\r\n    #getNeighbursCoordinates(row, col){\r\n    let columns = this.#sanitizeArrayIndecies(Array((col - 1), col, ( col + 1)))\r\n    let rows = this.#sanitizeArrayIndecies(Array((row - 1), row, (row + 1)))\r\n    let cartesianProduct = rows.flatMap(row => columns.map(column => Array(row, column)))\r\n    let cartesianProductWithoutIdentity = cartesianProduct.filter(coordinateArray => !this.#isEqualToIdentityCoordinates(row, col, coordinateArray))\r\n    return cartesianProductWithoutIdentity\r\n  }\r\n\r\n  #getCellbyCoordinate(coordinate){\r\n    let row = coordinate[0]\r\n    let col = coordinate[1]\r\n    return this.#org[row][col]\r\n  }\r\n\r\n  #sanitizeArrayIndecies(array){\r\n    return array.map(value => value - (Math.floor(value / this.#size) * this.#size));\r\n  }\r\n\r\n  #startingLive(){\r\n    let array =  Array.from(new Array(this.#size), () => new Array(this.#size))\r\n      let table = document.querySelector(\"table\");\r\n\r\n      for(var row = 0; row < array.length; row++){\r\n\r\n        let r = table.insertRow();\r\n\r\n        for(var col = 0; col < array.length; col++){\r\n          let value = this.#GeneratingLife()\r\n          array[row][col] = value\r\n          let cell = r.insertCell();\r\n          let text = document.createTextNode(value.getCellValueAsNumber());\r\n          cell.appendChild(text);\r\n        }\r\n      } \r\n    \r\n      this.#livingCells = this.#livingCellsPerIteration\r\n      this.#deadCells = this.#deadCellsPerIteration\r\n  \r\n      return array\r\n    }\r\n\r\n    findNumberOfLivingNeighbursCells(row, col){\r\n      let neighburCellCoordinates = this.#getNeighbursCoordinates(row, col)\r\n      let cellNeighburs = neighburCellCoordinates.map(x => this.#getCellbyCoordinate(x))\r\n      return cellNeighburs.reduce((acc, cell) => {\r\n        return cell.getCellValueAsNumber() + acc }, 0);\r\n    }\r\n\r\n\r\n    #GeneratingLife(){\r\n     if(Math.random() > 0.5){\r\n      this.#livingCellsPerIteration++ \r\n      return new Cell(true)\r\n     }\r\n     else{\r\n      this.#deadCellsPerIteration++\r\n      return new Cell(false)\r\n     }\r\n    }\r\n\r\n    validateCurrentGeneneration(){\r\n      for(var row = 0; row < this.#org.length; row++){\r\n        for(var col = 0; col < this.#org.length; col++){\r\n          \r\n            let livingNeighboursCells = this.findNumberOfLivingNeighbursCells(row, col)\r\n        \r\n            var cell = this.#org[row][col]\r\n        \r\n        \r\n        if(cell.getIsAlive()){\r\n          if(Cell.isSurvivingOnToTheNextGen(livingNeighboursCells)){\r\n            cell.setNextStatus(true)\r\n          }\r\n          else \r\n          cell.setNextStatus(false)\r\n        }\r\n        else{\r\n          if(Cell.isAliveByReproduction(livingNeighboursCells)){\r\n            cell.setNextStatus(true)\r\n          }\r\n          else{\r\n            cell.setNextStatus(false)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  evolveGeneration(){\r\n      for(var row = 0; row < this.#org.length; row++){\r\n      for(var col = 0; col < this.#org.length; col++){\r\n      const cell = this.#org[row][col]\r\n      cell.evolve()\r\n      \r\n      let table = document.querySelector(\"table\");\r\n      table.rows[row].cells[col].innerHTML = cell.getCellValueAsNumber();  \r\n\r\n      if(cell.getIsAlive())\r\n        this.#livingCellsPerIteration++\r\n      else\r\n      this.#deadCellsPerIteration++  \r\n      }\r\n    }\r\n\r\n    this.#deadCells += this.#deadCellsPerIteration\r\n    this.#livingCells += this.#livingCellsPerIteration\r\n  }\r\n\r\n  async cycleOfLife(){\r\n    this.#resetIterationCounter();\r\n\r\n    const sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\r\n\r\n\r\n    while(this.#iteration < 101){\r\n      this.validateCurrentGeneneration()\r\n      this.evolveGeneration()\r\n\r\n\r\n      await sleep(1000)\r\n  \r\n      this.#resetIterationCounter();\r\n\r\n      this.#iteration++\r\n    }  \r\n  }\r\n}"]}