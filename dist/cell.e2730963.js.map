{"version":3,"sources":["cell.js"],"names":["Cell","exports","default","isAlive","_classCallCheck","_classPrivateFieldInitSpec","_isAlive","_nextStatus","_classPrivateFieldSet","_createClass","key","value","getIsAlive","_classPrivateFieldGet","setNextStatus","nextStatus","evolve","getCellValueAsNumber","isUnderpopulated","livingCells","isOverpopulated","isSurvivingOnToTheNextGen","isAliveByReproduction"],"mappings":";;;;;;;;;;;;;;;;;;;IAAqBA,IAAI,GAAAC,OAAA,CAAAC,OAAA;EAIrB,SAAAF,KAAYG,OAAO,EAAC;IAAAC,eAAA,OAAAJ,IAAA;IAAAK,0BAAA,OAAAC,QAAA;IAAAD,0BAAA,OAAAE,WAAA;IAClBC,qBAAA,CAAAF,QAAA,MAAI,EAAYH,OAAO;IACvBK,qBAAA,CAAAD,WAAA,MAAI,EAAe,KAAK;EAC1B;EAAC,OAAAE,YAAA,CAAAT,IAAA;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAAC,WAAA,EAAY;MACV,OAAAC,qBAAA,CAAAP,QAAA,EAAO,IAAI;IACb;EAAC;IAAAI,GAAA;IAAAC,KAAA,EAED,SAAAG,cAAcC,UAAU,EAAC;MACvBP,qBAAA,CAAAD,WAAA,MAAI,EAAeQ,UAAU;IAC/B;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAK,OAAA,EAAQ;MACNR,qBAAA,CAAAF,QAAA,MAAI,EAAAO,qBAAA,CAAAN,WAAA,EAAY,IAAI;IACtB;EAAC;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAM,qBAAA,EAAsB;MACpB,OAAO,IAAI,CAACL,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;IAClC;;IAEF;EAAA;IAAAF,GAAA;IAAAC,KAAA,EACE,SAAAO,iBAAwBC,WAAW,EAAC;MAClC,OAAOA,WAAW,GAAG,CAAC;IACxB;;IAEF;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAEE,SAAAS,gBAAuBD,WAAW,EAAC;MACjC,OAAOA,WAAW,GAAG,CAAC;IACxB;;IAEF;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAEE,SAAAU,0BAAiCF,WAAW,EAAC;MAC3C,OAAOA,WAAW,IAAI,CAAC,IAAIA,WAAW,IAAI,CAAC;IAC7C;;IAEF;EAAA;IAAAT,GAAA;IAAAC,KAAA,EACE,SAAAW,sBAA6BH,WAAW,EAAC;MACvC,OAAOA,WAAW,IAAI,CAAC;IACzB;EAAC;AAAA","file":"cell.e2730963.js","sourceRoot":"..\\src","sourcesContent":["export default class Cell {\r\n    #isAlive\r\n    #nextStatus\r\n\r\n    constructor(isAlive){\r\n      this.#isAlive = isAlive\r\n      this.#nextStatus = false\r\n    }\r\n    \r\n    getIsAlive(){\r\n      return this.#isAlive\r\n    }\r\n\r\n    setNextStatus(nextStatus){\r\n      this.#nextStatus = nextStatus\r\n    }\r\n\r\n    evolve(){\r\n      this.#isAlive = this.#nextStatus\r\n    }\r\n\r\n    getCellValueAsNumber(){\r\n      return this.getIsAlive() ? 1 : 0\r\n    }\r\n\r\n  //Any live cell with fewer than two live neighbors dies, as if by underpopulation.\r\n    static isUnderpopulated(livingCells){\r\n      return livingCells < 2 \r\n    } \r\n  \r\n  //Any live cell with more than three live neighbors dies, as if by overpopulation.\r\n  \r\n    static isOverpopulated(livingCells){\r\n      return livingCells < 3  \r\n    }\r\n\r\n  //Any live cell with two or three live neighbors lives on to the next generation.\r\n  \r\n    static isSurvivingOnToTheNextGen(livingCells){\r\n      return livingCells == 2 || livingCells == 3\r\n    }\r\n\r\n  //Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\r\n    static isAliveByReproduction(livingCells){\r\n      return livingCells == 3\r\n    }\r\n  }"]}