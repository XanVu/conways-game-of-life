{"version":3,"sources":["cell.js","organism.js","HtmlHandler.js","main.js"],"names":["Cell","exports","default","isAlive","_classCallCheck","_classPrivateMethodInitSpec","_Cell_brand","_classPrivateFieldInitSpec","_isAlive","_nextState","_isUnderpopulated","_isOverpopulated","_isReproducing","_isUnchanged","_classPrivateFieldSet","_createClass","key","value","getIsAlive","_classPrivateFieldGet","getNextState","getIsUnderpopulated","getIsOverpopulated","getIsReproducing","getIsUnchanged","determineDevelopment","adjacentLivingCells","_assertClassBrand","_isSurviving","call","_reproducing","evolve","isUnchanged","_setIsUnchanged","_setIsAlive","bool","_setNextState","_setIsUnderpopulated","_setIsOverpopulated","_setIsReproducing","_isNotUnderpopulated","isNotUnderpopulated","_isNotOverpopulated","isNotOverpopulated","isReproducing","isSurviving","_cell","_interopRequireDefault","require","_Organism","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","t","_toPrimitive","r","e","toPrimitive","String","Number","n","has","arguments","Organism","getTable","_table","_","getSize","_size","getInterval","interval","_interval","getIteration","_iteration","getLivingCellPerIteration","_livingCellsPerIteration","getDeadCellPerIteration","_deadCellsPerIteration","getFatalitiesOfOverpopulation","_fatalitiesOfOverpopulation","getFatalitiesOfUnderpopulation","_fatalitiesOfUnderpopulation","getReproducedCells","_reproducedCells","getHasStarted","_hasStarted","getHasStopped","_hasStopped","getIsStable","_isStable","getIsRepeating","_isRepeating","setSize","size","setTable","table","setHasStarted","setStopped","setInterval","setIteration","_this$iteration","setIsAlive","setIsRepeating","initTable","Array","from","startingLive","array","row","col","cell","_CreateCell","_setIterationStatsCounter","validateStock","livingAdjacentCells","_livingAdjacentCells","_updateStatsForCells","evolveGeneration","acc","_validateUnchangedState","resetIterationStatsCounter","initEvolution","isStillAlive","Math","random","_this","adjacentCellCoordinates","_getAdjacentCellCoordinates","adjacentCells","map","coordinate","_getCellbyCoordinate","_calculateNumberOfLivingAdjacentCells","_this2","columns","index","_calculateValidIndex","rows","cartesianProduct","flatMap","column","filter","coordinateArray","_isIdentity","_mod","a","b","floor","identity","every","element","reduce","_this$fatalitiesOfOve","_this$fatalitiesOfUnd","_this$reproducedCells","_this$livingCellsPerI","_this$deadCellsPerIte","_main","_organism","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","slice","name","test","iter","isArray","len","arr2","HtmlHandler","registerTabs","StatsTab","document","getElementById","RulesTab","DefinitionTab","stats","rules","definition","_addOnCLickEventListener","registerControls","startButton","stopButton","resetButton","addEventListener","Test","location","reload","initHtmlTable","querySelector","insertRow","c","insertCell","span","createElement","appendChild","_setColorOfSpan","setHtmlStatValues","updateHtmlSpanInTable","td","cells","childNodes","underpopulation","overpopulation","repoduction","currentLiving","currentDead","iteration","_addingStats","tab","style","display","_span$classList","classList","remove","apply","add","_span$classList2","text","textContent","_HtmlHandler","_regeneratorRuntime","hasOwnProperty","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","undefined","_test","_callee","repetitionCounter","sleep","x","x1","y1","_callee$","_context","delay","setTimeout","console","log"],"mappings":"AGAA,YAAY;;AAACsE,MAAA,CAAAC,cAAA,CAAAtE,OAAA;EAAAgB,KAAA;AAAA;AAAAhB,OAAA,CAAAC,OAAA;ADAb,ACCA,AFDA,ICAAiL,ACCAqE,AFDA1M,KCAA,ADAA,GCAAC,ADAAA,IECA,GAAAA,eDDA,ADAA,CCAAC,ADAAA,MECA,CDDA,ACCAA,AFDA,OECA;ADAA,ACCA,AFF6B,ICC7BoI,ACCAA,AFF6BnI,SCC7B,ACCA,AFF6B,GCC7BF,ACCAA,sBDDA,ACCA,CDDAC,ACCAA,ODDA,ACCA;ADDkC,ACCA,AFFL,SCCKD,ACCAA,AFFLA,uBCCKG,ACCAA,AFFLA,GCCK,ACCA,AFFL,WCCKA,ACCAA,AFFLA,GCCK,ACCA,AFFL,ICCKA,ACCAA,AFFLA,GCCK,ACCA,AFFL,CCCKC,ACCAA,AFFLA,UCCK,ACCA,AFFL,GCCKD,ACCAA,AFFLA,GCCK,ACCA,AFFL,KCCKhD,ACCAA,AFFLA,OCCK,ACCA,AFFL,ECCKgD,ACCAA,AFFLA,GCCK,ACCA,AFFL;ACCK,ACCA,AFFL,SCCKE,ACCAA,AFFLA,QCCKC,ACCAA,AFFLA,CCCK,ACCA,AFFL,sCCCKD,ACCAA,AFFLA,OCCK,ACCA,AFFL,wBCCKE,ACCAA,AFFLA,MCCK,ACCA,AFFL,uBCCKA,ACCAA,AFFLA,MCCK,ACCA,AFFL,CCCKC,ACCAA,AFFLA,QCCK,ACCA,AFFL,aCCKF,ACCAA,AFFLA,CCCK,ACCA,AFFL,kBCCKA,ACCAA,AFFLA,CCCK,ACCA,AFFL,gBCCKA,ACCAA,AFFLA,CCCK,ACCA,AFFL,WCCKA,ACCAA,AFFLA,CCCK,ACCA,AFFL,yBCCKC,ACCAA,AFFLA,MCCK,ACCA,AFFL,ICCKD,ACCAA,AFFLA,CCCK,ACCA,AFFL,CCCKG,ACCAA,AFFLA,WCCK,ACCA,AFFL,KCCKF,ACCAA,AFFLA,MCCK,ACCA,AFFL,ICCKD,ACCAA,AFFLA,CCCK,ACCA,AFFL,KCCKC,ACCAA,AFFLA,MCCK,ACCA,AFFL,CCCKG,ACCAA,AFFLA,SCCK,ACCA,AFFL,qBCCKJ,ACCAA,AFFLA,CCCK,ACCA,AFFL,KCCKD,ACCAA,AFFLA,OCCK,ACCA,AFFL,CCCKC,ACCAA,AFFLA,CCCK,ACCA,AFFL;ACCK,ACCA,AFFL,SCCKgI,ACCAoE,AFFLrP,gBAAAsD,GCCK4H,CCCA,EDDA,EDDL,EAAA3H,OCCK4H,IDDL,CEC7B,SFD6B7H,ICCK,CAAA4H,GAAA,ADDL,KCCKE,ODDL7H,SCCK,CAAA2H,CDDL,ECCK,KAAAG,QDDL7H,SAAA,UCCK,CAAA0H,GAAA,KAAAI,kBAAA,gDCAlC+D,mBAAA,YAAAA,oBAAA,WAAA3K,CAAA,SAAAH,CAAA,EAAAG,CAAA,OAAAD,CAAA,GAAAP,MAAA,CAAAb,SAAA,EAAAyB,CAAA,GAAAL,CAAA,CAAA6K,cAAA,EAAArM,CAAA,GAAAiB,MAAA,CAAAC,cAAA,cAAAI,CAAA,EAAAG,CAAA,EAAAD,CAAA,IAAAF,CAAA,CAAAG,CAAA,IAAAD,CAAA,CAAA5D,KAAA,KAAA+C,CAAA,wBAAAV,MAAA,GAAAA,MAAA,OAAAiH,CAAA,GAAAvG,CAAA,CAAAT,QAAA,kBAAAoK,CAAA,GAAA3J,CAAA,CAAA2L,aAAA,uBAAAC,CAAA,GAAA5L,CAAA,CAAA6L,WAAA,8BAAAC,OAAAnL,CAAA,EAAAG,CAAA,EAAAD,CAAA,WAAAP,MAAA,CAAAC,cAAA,CAAAI,CAAA,EAAAG,CAAA,IAAA7D,KAAA,EAAA4D,CAAA,EAAAV,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAM,CAAA,CAAAG,CAAA,WAAAgL,MAAA,mBAAAnL,CAAA,IAAAmL,MAAA,YAAAA,OAAAnL,CAAA,EAAAG,CAAA,EAAAD,CAAA,WAAAF,CAAA,CAAAG,CAAA,IAAAD,CAAA,gBAAAkL,KAAApL,CAAA,EAAAG,CAAA,EAAAD,CAAA,EAAAK,CAAA,QAAAlB,CAAA,GAAAc,CAAA,IAAAA,CAAA,CAAArB,SAAA,YAAAuM,SAAA,GAAAlL,CAAA,GAAAkL,SAAA,EAAAzF,CAAA,GAAAjG,MAAA,CAAA2L,MAAA,CAAAjM,CAAA,CAAAP,SAAA,GAAAkK,CAAA,OAAAuC,OAAA,CAAAhL,CAAA,gBAAA7B,CAAA,CAAAkH,CAAA,eAAAtJ,KAAA,EAAAkP,gBAAA,CAAAxL,CAAA,EAAAE,CAAA,EAAA8I,CAAA,MAAApD,CAAA,aAAA6F,SAAAzL,CAAA,EAAAG,CAAA,EAAAD,CAAA,mBAAAwL,IAAA,YAAAC,GAAA,EAAA3L,CAAA,CAAA9C,IAAA,CAAAiD,CAAA,EAAAD,CAAA,cAAAF,CAAA,aAAA0L,IAAA,WAAAC,GAAA,EAAA3L,CAAA,QAAAG,CAAA,CAAAiL,IAAA,GAAAA,IAAA,MAAAQ,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAX,UAAA,cAAAY,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAAhB,MAAA,CAAAgB,CAAA,EAAAvG,CAAA,qCAAAwG,CAAA,GAAAzM,MAAA,CAAA0M,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAApM,CAAA,IAAAK,CAAA,CAAArD,IAAA,CAAAoP,CAAA,EAAA1G,CAAA,MAAAuG,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAApN,SAAA,GAAAuM,SAAA,CAAAvM,SAAA,GAAAa,MAAA,CAAA2L,MAAA,CAAAa,CAAA,YAAAM,sBAAAzM,CAAA,gCAAA0M,OAAA,WAAAvM,CAAA,IAAAgL,MAAA,CAAAnL,CAAA,EAAAG,CAAA,YAAAH,CAAA,gBAAA2M,OAAA,CAAAxM,CAAA,EAAAH,CAAA,sBAAA4M,cAAA5M,CAAA,EAAAG,CAAA,aAAA0M,OAAA3M,CAAA,EAAAxB,CAAA,EAAAW,CAAA,EAAAuG,CAAA,QAAAoD,CAAA,GAAAyC,QAAA,CAAAzL,CAAA,CAAAE,CAAA,GAAAF,CAAA,EAAAtB,CAAA,mBAAAsK,CAAA,CAAA0C,IAAA,QAAAT,CAAA,GAAAjC,CAAA,CAAA2C,GAAA,EAAAC,CAAA,GAAAX,CAAA,CAAA3O,KAAA,SAAAsP,CAAA,gBAAAnN,OAAA,CAAAmN,CAAA,KAAArL,CAAA,CAAArD,IAAA,CAAA0O,CAAA,eAAAzL,CAAA,CAAA2M,OAAA,CAAAlB,CAAA,CAAAmB,OAAA,EAAAC,IAAA,WAAAhN,CAAA,IAAA6M,MAAA,SAAA7M,CAAA,EAAAX,CAAA,EAAAuG,CAAA,gBAAA5F,CAAA,IAAA6M,MAAA,UAAA7M,CAAA,EAAAX,CAAA,EAAAuG,CAAA,QAAAzF,CAAA,CAAA2M,OAAA,CAAAlB,CAAA,EAAAoB,IAAA,WAAAhN,CAAA,IAAAiL,CAAA,CAAA3O,KAAA,GAAA0D,CAAA,EAAAX,CAAA,CAAA4L,CAAA,gBAAAjL,CAAA,WAAA6M,MAAA,UAAA7M,CAAA,EAAAX,CAAA,EAAAuG,CAAA,SAAAA,CAAA,CAAAoD,CAAA,CAAA2C,GAAA,SAAAzL,CAAA,EAAAxB,CAAA,oBAAApC,KAAA,WAAAA,MAAA0D,CAAA,EAAAO,CAAA,aAAA0M,2BAAA,eAAA9M,CAAA,WAAAA,CAAA,EAAAD,CAAA,IAAA2M,MAAA,CAAA7M,CAAA,EAAAO,CAAA,EAAAJ,CAAA,EAAAD,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAA8M,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAzB,iBAAArL,CAAA,EAAAD,CAAA,EAAAK,CAAA,QAAA7B,CAAA,GAAAkN,CAAA,mBAAAvM,CAAA,EAAAuG,CAAA,QAAAlH,CAAA,KAAAoN,CAAA,QAAAoB,KAAA,sCAAAxO,CAAA,KAAAqN,CAAA,oBAAA1M,CAAA,QAAAuG,CAAA,WAAAtJ,KAAA,EAAA0D,CAAA,EAAAmN,IAAA,eAAA5M,CAAA,CAAA6M,MAAA,GAAA/N,CAAA,EAAAkB,CAAA,CAAAoL,GAAA,GAAA/F,CAAA,UAAAoD,CAAA,GAAAzI,CAAA,CAAA8M,QAAA,MAAArE,CAAA,QAAAiC,CAAA,GAAAqC,mBAAA,CAAAtE,CAAA,EAAAzI,CAAA,OAAA0K,CAAA,QAAAA,CAAA,KAAAe,CAAA,mBAAAf,CAAA,qBAAA1K,CAAA,CAAA6M,MAAA,EAAA7M,CAAA,CAAAgN,IAAA,GAAAhN,CAAA,CAAAiN,KAAA,GAAAjN,CAAA,CAAAoL,GAAA,sBAAApL,CAAA,CAAA6M,MAAA,QAAA1O,CAAA,KAAAkN,CAAA,QAAAlN,CAAA,GAAAqN,CAAA,EAAAxL,CAAA,CAAAoL,GAAA,EAAApL,CAAA,CAAAkN,iBAAA,CAAAlN,CAAA,CAAAoL,GAAA,uBAAApL,CAAA,CAAA6M,MAAA,IAAA7M,CAAA,CAAAmN,MAAA,WAAAnN,CAAA,CAAAoL,GAAA,GAAAjN,CAAA,GAAAoN,CAAA,MAAAK,CAAA,GAAAV,QAAA,CAAAtL,CAAA,EAAAD,CAAA,EAAAK,CAAA,oBAAA4L,CAAA,CAAAT,IAAA,QAAAhN,CAAA,GAAA6B,CAAA,CAAA4M,IAAA,GAAApB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAR,GAAA,KAAAK,CAAA,qBAAA1P,KAAA,EAAA6P,CAAA,CAAAR,GAAA,EAAAwB,IAAA,EAAA5M,CAAA,CAAA4M,IAAA,kBAAAhB,CAAA,CAAAT,IAAA,KAAAhN,CAAA,GAAAqN,CAAA,EAAAxL,CAAA,CAAA6M,MAAA,YAAA7M,CAAA,CAAAoL,GAAA,GAAAQ,CAAA,CAAAR,GAAA,mBAAA2B,oBAAAnN,CAAA,EAAAD,CAAA,QAAAK,CAAA,GAAAL,CAAA,CAAAkN,MAAA,EAAA1O,CAAA,GAAAyB,CAAA,CAAAvB,QAAA,CAAA2B,CAAA,OAAA7B,CAAA,KAAAsB,CAAA,SAAAE,CAAA,CAAAmN,QAAA,qBAAA9M,CAAA,IAAAJ,CAAA,CAAAvB,QAAA,CAAA+O,MAAA,KAAAzN,CAAA,CAAAkN,MAAA,aAAAlN,CAAA,CAAAyL,GAAA,GAAA3L,CAAA,EAAAsN,mBAAA,CAAAnN,CAAA,EAAAD,CAAA,eAAAA,CAAA,CAAAkN,MAAA,kBAAA7M,CAAA,KAAAL,CAAA,CAAAkN,MAAA,YAAAlN,CAAA,CAAAyL,GAAA,OAAA1M,SAAA,uCAAAsB,CAAA,iBAAAyL,CAAA,MAAA3M,CAAA,GAAAoM,QAAA,CAAA/M,CAAA,EAAAyB,CAAA,CAAAvB,QAAA,EAAAsB,CAAA,CAAAyL,GAAA,mBAAAtM,CAAA,CAAAqM,IAAA,SAAAxL,CAAA,CAAAkN,MAAA,YAAAlN,CAAA,CAAAyL,GAAA,GAAAtM,CAAA,CAAAsM,GAAA,EAAAzL,CAAA,CAAAmN,QAAA,SAAArB,CAAA,MAAApG,CAAA,GAAAvG,CAAA,CAAAsM,GAAA,SAAA/F,CAAA,GAAAA,CAAA,CAAAuH,IAAA,IAAAjN,CAAA,CAAAC,CAAA,CAAAyN,UAAA,IAAAhI,CAAA,CAAAtJ,KAAA,EAAA4D,CAAA,CAAA2N,IAAA,GAAA1N,CAAA,CAAA2N,OAAA,eAAA5N,CAAA,CAAAkN,MAAA,KAAAlN,CAAA,CAAAkN,MAAA,WAAAlN,CAAA,CAAAyL,GAAA,GAAA3L,CAAA,GAAAE,CAAA,CAAAmN,QAAA,SAAArB,CAAA,IAAApG,CAAA,IAAA1F,CAAA,CAAAkN,MAAA,YAAAlN,CAAA,CAAAyL,GAAA,OAAA1M,SAAA,sCAAAiB,CAAA,CAAAmN,QAAA,SAAArB,CAAA,cAAA+B,aAAA/N,CAAA,QAAAG,CAAA,KAAA6N,MAAA,EAAAhO,CAAA,YAAAA,CAAA,KAAAG,CAAA,CAAA8N,QAAA,GAAAjO,CAAA,WAAAA,CAAA,KAAAG,CAAA,CAAA+N,UAAA,GAAAlO,CAAA,KAAAG,CAAA,CAAAgO,QAAA,GAAAnO,CAAA,WAAAoO,UAAA,CAAAC,IAAA,CAAAlO,CAAA,cAAAmO,cAAAtO,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAuO,UAAA,QAAApO,CAAA,CAAAuL,IAAA,oBAAAvL,CAAA,CAAAwL,GAAA,EAAA3L,CAAA,CAAAuO,UAAA,GAAApO,CAAA,aAAAoL,QAAAvL,CAAA,SAAAoO,UAAA,MAAAJ,MAAA,aAAAhO,CAAA,CAAA0M,OAAA,CAAAqB,YAAA,cAAAS,KAAA,iBAAAjC,OAAApM,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAAyF,CAAA,OAAA1F,CAAA,SAAAA,CAAA,CAAAhD,IAAA,CAAAiD,CAAA,4BAAAA,CAAA,CAAA0N,IAAA,SAAA1N,CAAA,OAAAsO,KAAA,CAAAtO,CAAA,CAAAb,MAAA,SAAAZ,CAAA,OAAAW,CAAA,YAAAwO,KAAA,aAAAnP,CAAA,GAAAyB,CAAA,CAAAb,MAAA,OAAAiB,CAAA,CAAArD,IAAA,CAAAiD,CAAA,EAAAzB,CAAA,UAAAmP,IAAA,CAAAvR,KAAA,GAAA6D,CAAA,CAAAzB,CAAA,GAAAmP,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAvR,KAAA,GAAA0D,CAAA,EAAA6N,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAxO,CAAA,CAAAwO,IAAA,GAAAxO,CAAA,gBAAAJ,SAAA,CAAAR,OAAA,CAAA0B,CAAA,kCAAA8L,iBAAA,CAAAnN,SAAA,GAAAoN,0BAAA,EAAAxN,CAAA,CAAA8N,CAAA,mBAAAlQ,KAAA,EAAA4P,0BAAA,EAAAzM,YAAA,SAAAf,CAAA,CAAAwN,0BAAA,mBAAA5P,KAAA,EAAA2P,iBAAA,EAAAxM,YAAA,SAAAwM,iBAAA,CAAAyC,WAAA,GAAAvD,MAAA,CAAAe,0BAAA,EAAAjB,CAAA,wBAAA9K,CAAA,CAAAwO,mBAAA,aAAA3O,CAAA,QAAAG,CAAA,wBAAAH,CAAA,IAAAA,CAAA,CAAAnB,WAAA,WAAAsB,CAAA,KAAAA,CAAA,KAAA8L,iBAAA,6BAAA9L,CAAA,CAAAuO,WAAA,IAAAvO,CAAA,CAAAiH,IAAA,OAAAjH,CAAA,CAAAyO,IAAA,aAAA5O,CAAA,WAAAL,MAAA,CAAAkP,cAAA,GAAAlP,MAAA,CAAAkP,cAAA,CAAA7O,CAAA,EAAAkM,0BAAA,KAAAlM,CAAA,CAAA8O,SAAA,GAAA5C,0BAAA,EAAAf,MAAA,CAAAnL,CAAA,EAAAiL,CAAA,yBAAAjL,CAAA,CAAAlB,SAAA,GAAAa,MAAA,CAAA2L,MAAA,CAAAkB,CAAA,GAAAxM,CAAA,KAAAG,CAAA,CAAA4O,KAAA,aAAA/O,CAAA,aAAA+M,OAAA,EAAA/M,CAAA,OAAAyM,qBAAA,CAAAG,aAAA,CAAA9N,SAAA,GAAAqM,MAAA,CAAAyB,aAAA,CAAA9N,SAAA,EAAAkK,CAAA,iCAAA7I,CAAA,CAAAyM,aAAA,GAAAA,aAAA,EAAAzM,CAAA,CAAA6O,KAAA,aAAAhP,CAAA,EAAAE,CAAA,EAAAK,CAAA,EAAA7B,CAAA,EAAAW,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA4P,OAAA,OAAArJ,CAAA,OAAAgH,aAAA,CAAAxB,IAAA,CAAApL,CAAA,EAAAE,CAAA,EAAAK,CAAA,EAAA7B,CAAA,GAAAW,CAAA,UAAAc,CAAA,CAAAwO,mBAAA,CAAAzO,CAAA,IAAA0F,CAAA,GAAAA,CAAA,CAAAiI,IAAA,GAAAb,IAAA,WAAAhN,CAAA,WAAAA,CAAA,CAAAmN,IAAA,GAAAnN,CAAA,CAAA1D,KAAA,GAAAsJ,CAAA,CAAAiI,IAAA,WAAApB,qBAAA,CAAAD,CAAA,GAAArB,MAAA,CAAAqB,CAAA,EAAAvB,CAAA,gBAAAE,MAAA,CAAAqB,CAAA,EAAA5G,CAAA,iCAAAuF,MAAA,CAAAqB,CAAA,6DAAArM,CAAA,CAAA+O,IAAA,aAAAlP,CAAA,QAAAG,CAAA,GAAAR,MAAA,CAAAK,CAAA,GAAAE,CAAA,gBAAAK,CAAA,IAAAJ,CAAA,EAAAD,CAAA,CAAAmO,IAAA,CAAA9N,CAAA,UAAAL,CAAA,CAAAiP,OAAA,aAAAtB,KAAA,WAAA3N,CAAA,CAAAZ,MAAA,SAAAU,CAAA,GAAAE,CAAA,CAAAkP,GAAA,QAAApP,CAAA,IAAAG,CAAA,SAAA0N,IAAA,CAAAvR,KAAA,GAAA0D,CAAA,EAAA6N,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAA1N,CAAA,CAAAoM,MAAA,GAAAA,MAAA,EAAAhB,OAAA,CAAAzM,SAAA,KAAAD,WAAA,EAAA0M,OAAA,EAAAiD,KAAA,WAAAA,MAAArO,CAAA,aAAAkP,IAAA,WAAAxB,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAAxN,CAAA,OAAAmN,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAAzB,GAAA,GAAA3L,CAAA,OAAAoO,UAAA,CAAA1B,OAAA,CAAA4B,aAAA,IAAAnO,CAAA,WAAAD,CAAA,kBAAAA,CAAA,CAAAoP,MAAA,OAAA/O,CAAA,CAAArD,IAAA,OAAAgD,CAAA,MAAAuO,KAAA,EAAAvO,CAAA,CAAAiH,KAAA,cAAAjH,CAAA,IAAAF,CAAA,MAAAuP,IAAA,WAAAA,KAAA,SAAApC,IAAA,WAAAnN,CAAA,QAAAoO,UAAA,IAAAG,UAAA,kBAAAvO,CAAA,CAAA0L,IAAA,QAAA1L,CAAA,CAAA2L,GAAA,cAAA6D,IAAA,KAAA/B,iBAAA,WAAAA,kBAAAtN,CAAA,aAAAgN,IAAA,QAAAhN,CAAA,MAAAD,CAAA,kBAAAuP,OAAAlP,CAAA,EAAA7B,CAAA,WAAAkH,CAAA,CAAA8F,IAAA,YAAA9F,CAAA,CAAA+F,GAAA,GAAAxL,CAAA,EAAAD,CAAA,CAAA2N,IAAA,GAAAtN,CAAA,EAAA7B,CAAA,KAAAwB,CAAA,CAAAkN,MAAA,WAAAlN,CAAA,CAAAyL,GAAA,GAAA3L,CAAA,KAAAtB,CAAA,aAAAA,CAAA,QAAA0P,UAAA,CAAA9O,MAAA,MAAAZ,CAAA,SAAAA,CAAA,QAAAW,CAAA,QAAA+O,UAAA,CAAA1P,CAAA,GAAAkH,CAAA,GAAAvG,CAAA,CAAAkP,UAAA,iBAAAlP,CAAA,CAAA2O,MAAA,SAAAyB,MAAA,aAAApQ,CAAA,CAAA2O,MAAA,SAAAqB,IAAA,QAAArG,CAAA,GAAAzI,CAAA,CAAArD,IAAA,CAAAmC,CAAA,eAAA4L,CAAA,GAAA1K,CAAA,CAAArD,IAAA,CAAAmC,CAAA,qBAAA2J,CAAA,IAAAiC,CAAA,aAAAoE,IAAA,GAAAhQ,CAAA,CAAA4O,QAAA,SAAAwB,MAAA,CAAApQ,CAAA,CAAA4O,QAAA,gBAAAoB,IAAA,GAAAhQ,CAAA,CAAA6O,UAAA,SAAAuB,MAAA,CAAApQ,CAAA,CAAA6O,UAAA,cAAAlF,CAAA,aAAAqG,IAAA,GAAAhQ,CAAA,CAAA4O,QAAA,SAAAwB,MAAA,CAAApQ,CAAA,CAAA4O,QAAA,qBAAAhD,CAAA,QAAAiC,KAAA,qDAAAmC,IAAA,GAAAhQ,CAAA,CAAA6O,UAAA,SAAAuB,MAAA,CAAApQ,CAAA,CAAA6O,UAAA,YAAAR,MAAA,WAAAA,OAAA1N,CAAA,EAAAG,CAAA,aAAAD,CAAA,QAAAkO,UAAA,CAAA9O,MAAA,MAAAY,CAAA,SAAAA,CAAA,QAAAxB,CAAA,QAAA0P,UAAA,CAAAlO,CAAA,OAAAxB,CAAA,CAAAsP,MAAA,SAAAqB,IAAA,IAAA9O,CAAA,CAAArD,IAAA,CAAAwB,CAAA,wBAAA2Q,IAAA,GAAA3Q,CAAA,CAAAwP,UAAA,QAAA7O,CAAA,GAAAX,CAAA,aAAAW,CAAA,iBAAAW,CAAA,mBAAAA,CAAA,KAAAX,CAAA,CAAA2O,MAAA,IAAA7N,CAAA,IAAAA,CAAA,IAAAd,CAAA,CAAA6O,UAAA,KAAA7O,CAAA,cAAAuG,CAAA,GAAAvG,CAAA,GAAAA,CAAA,CAAAkP,UAAA,cAAA3I,CAAA,CAAA8F,IAAA,GAAA1L,CAAA,EAAA4F,CAAA,CAAA+F,GAAA,GAAAxL,CAAA,EAAAd,CAAA,SAAA+N,MAAA,gBAAAS,IAAA,GAAAxO,CAAA,CAAA6O,UAAA,EAAAlC,CAAA,SAAA0D,QAAA,CAAA9J,CAAA,MAAA8J,QAAA,WAAAA,SAAA1P,CAAA,EAAAG,CAAA,oBAAAH,CAAA,CAAA0L,IAAA,QAAA1L,CAAA,CAAA2L,GAAA,qBAAA3L,CAAA,CAAA0L,IAAA,mBAAA1L,CAAA,CAAA0L,IAAA,QAAAmC,IAAA,GAAA7N,CAAA,CAAA2L,GAAA,gBAAA3L,CAAA,CAAA0L,IAAA,SAAA8D,IAAA,QAAA7D,GAAA,GAAA3L,CAAA,CAAA2L,GAAA,OAAAyB,MAAA,kBAAAS,IAAA,yBAAA7N,CAAA,CAAA0L,IAAA,IAAAvL,CAAA,UAAA0N,IAAA,GAAA1N,CAAA,GAAA6L,CAAA,KAAA2D,MAAA,WAAAA,OAAA3P,CAAA,aAAAG,CAAA,QAAAiO,UAAA,CAAA9O,MAAA,MAAAa,CAAA,SAAAA,CAAA,QAAAD,CAAA,QAAAkO,UAAA,CAAAjO,CAAA,OAAAD,CAAA,CAAAgO,UAAA,KAAAlO,CAAA,cAAA0P,QAAA,CAAAxP,CAAA,CAAAqO,UAAA,EAAArO,CAAA,CAAAiO,QAAA,GAAAG,aAAA,CAAApO,CAAA,GAAA8L,CAAA,OAAA4D,KAAA,WAAAC,OAAA7P,CAAA,aAAAG,CAAA,QAAAiO,UAAA,CAAA9O,MAAA,MAAAa,CAAA,SAAAA,CAAA,QAAAD,CAAA,QAAAkO,UAAA,CAAAjO,CAAA,OAAAD,CAAA,CAAA8N,MAAA,KAAAhO,CAAA,QAAAO,CAAA,GAAAL,CAAA,CAAAqO,UAAA,kBAAAhO,CAAA,CAAAmL,IAAA,QAAAhN,CAAA,GAAA6B,CAAA,CAAAoL,GAAA,EAAA2C,aAAA,CAAApO,CAAA,YAAAxB,CAAA,YAAAwO,KAAA,8BAAA4C,aAAA,WAAAA,cAAA3P,CAAA,EAAAD,CAAA,EAAAK,CAAA,gBAAA8M,QAAA,KAAAzO,QAAA,EAAA2N,MAAA,CAAApM,CAAA,GAAAyN,UAAA,EAAA1N,CAAA,EAAA4N,OAAA,EAAAvN,CAAA,oBAAA6M,MAAA,UAAAzB,GAAA,GAAA3L,CAAA,GAAAgM,CAAA,OAAA7L,CAAA;ADAkC,ACAlC,AFD6B,SCCK4G,ACAlCgJ,AFD6B7Q,kBAAAC,CCCK,ACAlC6Q,GAAA,EAAAlD,AFD6B,EAAA1N,KEC7B,AFD6B,ECCKH,ACAlCgR,MAAA,EAAAC,CDAkC,EDDL7Q,CAAA,CEC7B,EAAA8Q,GFD6B9Q,CAAA,EEC7B,CFD6BD,CEC7B/C,GAAA,CFD6B,CEC7BsP,AFD6BrM,GEC7B,GFD6B,EAAAD,CAAA,QEC7B+Q,EFD6B7Q,EEC7B,GAAAyQ,GAAA,CAAA3T,CFD6B,EEC7B,CFD6B+C,CEC7BuM,GAAA,CFD6B,CAAAtM,CAAA,GAAAE,CEC7BjD,KAAA,GAAA8T,CFD6B,CAAA5Q,EEC7B,CAAAlD,KAAA,EFD6B,GAAAiD,MEC7B8Q,IFD6B,CEC7B,AFD6B7Q,IEC7ByQ,MAAA,AFD6B,CEC7BI,KAAA,KFD6B9Q,UAAA,CAAAE,CEC7B2Q,IAAA,CAAAjD,IAAA,EFD6B,EEC7BL,OAAA,CAAAxQ,KAAA,SFD6BiD,GEC7B0P,OAAA,AFD6B,CEC7BnC,CFD6BvN,MEC7B,CAAAjD,GFD6B,CAAAoD,CEC7B,EAAAsN,IAAA,CAAAkD,AFD6B,KEC7B,EAAAC,EFD6BxQ,IEC7B,EFD6B,CAAAC,cAAA,CAAAT,MAAA,EAAAU,cAAA,CAAAN,UAAA,CAAAlD,GAAA,GAAAkD,UAAA;ACCK,ACAlC,AFD6B,SCCKuH,ACAlCwJ,AFD6BlU,aAAA4C,KEC7BuR,EAAA,IFD6B,EAAAzQ,ECCKpB,CAAA,EAAAsI,KDDL,CCCK,CDDLjH,QCCKrB,CAAA,ECAlC8R,AFD6B,IEC7B,IFD6B1Q,KEC7B2Q,IAAA,CFD6B,CCCK/R,CAAA,ACAlC+B,AFD6BvB,SEC7B,QFD6B,CAAAF,ICCKiI,ACAlCgI,OAAA,AFD6B,CAAAnQ,SCCK,ADDL,CCCKJ,ACAlCoO,CDAkC,ADDLhN,ECCKkH,ICAlC,EDAkC,ACAlCiJ,EFD6B,IEC7B,CDAkC1P,CAAA,CDDLR,ECCKJ,GCAlCqQ,GDAkC,ACAlC,CDAkClR,ECAlCyR,AFD6B,EEC7B,AFD6BrR,CEC7BsL,IDAkC,CAAAtD,ACAlC,CAAAsJ,IAAA,EAAAC,CDAkC,CAAAvT,ECAlC,AFD6B,CAAA8B,CCCK,CAAAN,CAAA,EAAAyI,KAAA,CCAlC+I,AFD6B,EAAAnQ,IEC7BzD,KAAA,CDAkCiE,CAAA,ADDL,EEC7BwP,CFD6BpQ,MAAA,CAAAC,OCCKlB,CAAA,CAAAG,CCAlC,CAAAmR,GAAA,AFD6B,CAAAhR,CEC7B8N,IDAkC,EAAAvM,CAAA,ACAlC,EAAA0P,CDAkCvR,ADDL,CCCK,CAAAG,GCAlC,EAAAqR,KAAA,CDAkC,CAAA9I,ACAlC+I,GFD6BzQ,CCCK,ECAlC,IDAkCa,CAAA,ADDL,KEC7BjE,KAAA,IDAkCiE,CAAA,IDDLvB,KEC7BmR,MFD6B,CEC7BO,GDAkCvN,ACAlC,IAAA4M,CDAkC,CAAA3M,IAAA,CAAA1E,CAAA,OAAA6B,CAAA,ECAlC,CAAAyP,GAAA,EAAAlD,OAAA,EAAAmD,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAO,GAAA,KAAAR,KAAA,CDAkC7I,ACAlCsJ,IDAkC,CAAApQ,CAAA,GCAlC,ODAkC0G,iBAAA,CAAAvI,CAAA,EAAAsI,MAAA;AAAA,ACAlC,AFD6B,SCCKH,ACAlCpL,AFD6BoE,eAAAG,CEC7BjB,AFD6B,CCCKuI,IAAA,GCAlC,AFD6BjI,CAAA,CEC7BL,EFD6BiB,QCCKtB,CCAlC,GFD6B,CAAAqB,CCCK,ADDL,KEC7BjB,QAAA,ODAkCuI,IAAA,CAAA3I,ACAlCK,MDAkC,CAAAJ,ADDLH,IEC7B,GFD6B,CCCK,ADDLY,CAAA,IAAAA,CAAA,GAAAA,CAAA,CEC7BJ,EDAkCqI,IAAA,GCAlC,4BDAkCnE,KAAA,CAAAC,IAAA,CAAAkE,IAAA;AAAA,ACAlC,AFD6B,SCCKV,ACAlC1H,AFD6Be,aAAAD,CAAA,EAAAE,CAAA,CEC7Bf,CDAkCwH,GAAA,ECAlC,EAAAvH,IDAkC+D,CCAlC,IDAkC,CAAAoE,CDDL9I,MCCK,CAAAkI,ACAlCtH,AFD6B,CEC7B,AFD6BW,CAAA,CCCK,ICAlCX,CAAA,AFD6BW,CAAA,EEC7BZ,EDAkC6H,GCAlC,CAAA3H,CFD6BU,CAAA,IEC7B,EAAAX,AFD6Bc,CEC7B,AFD6B,GAAAH,CCCK,ADDL,CCCK2G,ADDLhI,GCCK,ECAlCY,CFD6B,CAAAa,QEC7B,GAAAhB,AFD6B,KEC7B,CAAAC,CAAA,GAAAE,QFD6BY,CAAA,CEC7B,CAAAX,MFD6BH,CAAA,GEC7B,AFD6Bc,CAAA,CAAAjD,CEC7BqC,GFD6B,CAAAS,CAAA,EAAAE,CAAA,EEC7B,CAAAV,UAAA,WAAAD,QFD6Bd,EEC7B,CAAAgB,IFD6B,CAAAJ,CAAA,MEC7B,IFD6BA,CAAA,YAAAJ,OEC7BM,EFD6B,QEC7B,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAT,MAAA,EAAAU,KFD6BK,CAAA,GAAAG,KEC7B,CAAAd,AFD6B,GAAAe,MAAA,CEC7B,CAAAjE,AFD6B2D,CAAA,EEC7B,GAAAT,UAAA;ADAkC,ACAlC,AFD6B,SCCK0H,ACAlC7K,AFD6BY,aEC7BgC,KDAkC2H,ADDLxG,CAAA,ECCK,ADDLH,CAAA,CCCKwH,CCAlC,AFD6BjH,CAAA,CCCK,ACAlCT,QDAkC0H,ECAlC,CDAkC,CCAlCzH,WDAkCyH,ACAlC,GDAkC,EDDLrH,CCCKwG,ADDL,EEC7B7G,CDAkC,ADDLK,CCCKb,ADDL,KAAAU,CCCK,ADDL,ECCKwH,ACAlC,CFD6BrH,CEC7BjB,AFD6B,CCCK,ADDLsB,GCCKmG,ADDL,CAAA3G,CAAA,CCCK,CAAAV,MAAA,EDDLmB,CEC7B,CAAAzB,ODAkCK,ADDL,CCCK,ADDLC,GEC7B,CAAAR,EDAkC2I,ADDL,ICCK,GCAlC,AFD6BzH,CAAA,CEC7BF,EDAkCqD,ADDL5C,CAAA,ICCK,CAAAiH,ECAlC,CDAkC,GAAAnI,CAAA,ADDLJ,EEC7Bc,CDAkCyH,GAAA,EAAAnI,CAAA,ADDL,ICCKoI,ACAlC,EAAAvI,EDAkC,CAAAG,CAAA,IAAAsH,GAAA,CAAAtH,CAAA,ICAlC,CAAAL,KDAkCyI,IAAA,ECAlC,EAAA1H,WAAA,GAAAJ,MAAA,CAA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GEKY,AF0BxBC,GCnC2B,ACSH,EF0BxB,EAVD,QDlBoB,CCkBpBwE,MDlBoBzF,ECkBpB,EDlBoB,ACkBJ;ICzBYiB,AFORZ,AGEKY,EFiBvB,GC1B0B,ACSH,EDP3B,EDwBIU,OCxBJ2K,UDwBI,CDnBkB,ACRHjH,ECGnB,EAAqB,GFKC/E,CCRK,EA2BhB,IAAI,EAAAoF,EDnBO,GCmBP,EAAAF,CAAA;IDnBOjF,ACoBpB,ECxBI,ACMqB,IDNjBgM,ACMiBgJ,KAAA,GDNT,ACMSN,GDNNzI,QAAQ,CAACC,AFIR,KGEK,EHFLjM,OEJsB,CAAC,AFIvB,EATT,GGWciP,EHXT,GEKqC,CAAC,aCM7B,GAAA8D,IAAA,CAEzB,SAAAiC,QAAA;EFgBC,ED7BejV,EEMZ,ECOJ,EDPQmM,ECOR+I,MDPgB,GAAGjJ,QAAQ,ACO3B,CDP4BC,AFNZ,CGahBiJ,KAAA,CHbgBjV,CGahB8E,MDP0C,ACO1C,CDP2C,CCO3CoQ,CHbgB,AGahB,EHZa,AGYbhF,CAAA,EAAAiF,EHZkB,AGYlB,CDPqD,CAAC,ACOtDC,EAAA;IHZkBtV,AC4BjBS,ECtBG,CDsBH,CEhBD,EDNQ2L,KCMR8C,QDNqB,GAAGjD,IFNN,IEMc,ACMhC,CDNiCC,EFNf/L,AGYlBqP,IAAA,QDN+C,CAAC,CCMhD+F,GHZkB,EAEE,IGUpBC,CHVyB,IEIsC,CAAC,ECMhE;IHVyBxV,AC0BxBU,ECpBG,GDoBH,CCpBO2L,ACIR,CF8EA,IClFa,GAAGJ,EDkFhB7G,MClFwB,CAAC8G,CCIzBsJ,EHVyB,ECwFNnQ,IE9EnB,CHVyBjF,AGUzBqT,GF8E2B,CClFY,ACIvC,CDJwC,ADkFZ,EE9E5B+B,KDJ+C,CAAC,ECIhD,CHVyB,AGUzBvD,EHTmB,EGSnB,GHTwB;IAAAjS,EEMpB,ADkFFsF,IClFMgH,ECGR,GDHa,ADkFX,CAAArH,CAAA,CClFcgH,EDkFd7K,MClFsB,CAAC8K,GFND,OAAA7L,ACwFtB,CA3FeyE,GCSsB,CAAC,IDTf,EA2FvB,CClF6C,CAAC,CFNxB,CCwFlB,CDvFW,CCuFEO,IDvFG,ICuFK;IDvFLrF,ACwFtB,EClFI,IAAIuM,ICGA2I,MDHU,GAAGjJ,OFNC,CEMO,ACGJ,CDHKC,ECGF,CAAC,EHTP5L,SEMsB,CAAC,EFNvB,EACP,KAAK,GEKqC,CAAC;EDkFzD,EDnFCC,EEGEa,QCIE+T,KAAK,GAAG,CDJV,CAXarJ,CFQf,CAAA7L,KGOIkV,GHPJ,CER0B,CCejBA,CDJP,ACIWM,GHPT,CEGE,CFHU7V,AGOE,CDJZ4M,MFHiB,kBEGjB,EAAAlL,IAAA,CAAJ,IAAI,EAA0B0K,QAAQ,EAAEK,KAAK;EFFjD,ECkFC5L,EC/EGW,CD+EH,SE5EmB,ODHhB,ACGqB,CDfR0K,GCeYuH,OAAO,CDfR,ACeS,EDHjC,IAAI,EAAA7G,ECG8B0E,OAAO,eDHrC,EAAA5P,IAAA,CAAJ,IAAI,EAA0B6K,QAAQ,EAAEG,KAAK;EFHhD,ECkFA5L,EC9EGU,GFJHZ,ACkFA,EAtDD,OEtB6C,EFsB7C+E,CD5BC,CAAA9F,CEIG,CAbaqM,CCeiC4J,CHNjD,OC4BD,ECrC4B,ACegC,AFsBvC,CEtBwCxE,CDFzD,IAAI,EAAA1E,ACE4D,EAAEiJ,KAAK,CAAC,gBDFpE,EAAAnU,IAAA,CAAJ,IAAI,EAA0B8K,aAAa,EAAEG,UAAU;IAE3D,AFNC9L,EC6BC,CD7BD,MC6BCW,GEvB0E,EAAC,YFuB3E,CAvCe0D,QAAQ,EAuChB,IAAI,EAAAU,UAAA,EAAAP,CAAA;ECvBZ,EFNAvE,AC8BD,KD9BC,EAED,GGI6E,MHJ7EC,WAAA,EAAY;EC4BX,ECxBAF,EFHC,CEGD,MFHCG,CGME+U,OAAO,CAACC,GAAG,CAAC9Q,QHNd,CAAA7E,QAAA,AGMsB,CAACwG,CHNhB,IAAI,SGM0B,CAAC,CAAC,CAAC;IDHzC/F,AFFD,AC0BCD,GAAA,ECxBA,EAYF,CCT2C,QDS3CgM,iBAAA,EAAyB;EFdvB,EC0BA/L,ECXG,GDWH,CCXOgM,CDaR,GEvB0C,MAGhC5H,AFoBVW,CCbmB,GAAGwG,QAAQ,CAACC,ICPb,CAACvL,QFoBnB,CCb6C,CAAC,ACPjB,AFoBK,CEpBJ,CAAC,IAAImE,CDOkB,CAAC,eCPX,CAACqB,aAAa,CAAC,CAAC,IAAI,CAACrB,iBAAQ,CAACuB,aAAa,CAAC,CAAC,IAAI,CAACvB,iBAAQ,CAACyB,WAAW,CAAC,CAAC,IAAI,CAACzB,iBAAQ,CAAC2B,cAAc,CAAC,CAAC;IHRhJhG,EEgBG,ADaF,CD7BD,GEgBOkM,GDaNvL,GErB+IoU,IDQ/H,GAAGvJ,CCR4H,CAAAgG,IAAA,CFqB/I,CCb2B,AD9BZnN,CC8BaoH,OD9BL,EA2ChB,IAAI,CCb+B,CAAC,ADahCxG,MCbsC,CAAC,iBDavC,EAAAT,CAAA;ID7BZvE,AC8BD,ECbI,GFjBH,CEiBOkM,CFfR,KGMiJ,IHNjJ/L,CEemB,GAAGoL,QAAQ,CAACC,AFf/B,EAAc,YEe+B,CAAC,OAAO,CAAC;EDarD,ICVGQ,AFjBF,OAAA9L,CGK+I,GDYlI,CAACiM,gBAAgB,AFjB9B,CEiB+B,AFjB/B3M,OEiBsC,EAAE,CFjBxC,EAAO,IAAI,KEiBuC;IFhBpD,AC0BCO,GAAA,CCTOqE,MCZEgC,MAAK,GAAGhC,EDYF,CAACiC,aAAa,CAAC,ACZL,CAAChC,GDYQ,CAAC,ICZD,CAAC,CAAC;EHLpC,EC0BArE,ICROoM,CDQP,EAED,GErBUsI,CAAC,GAAGtQ,EFqBda,CCVY,CAAC8F,IAAI,CAAC,CAAC,OCXG,CAAC9F,QFqBvB,EAAgC,aErBc,CAAC,CAAC;IHP/ClF,EEmBG,ADUF,CCVG,AFnBJ,EEmBM,IDULW,CCVU,ACXFgP,CDWG,ACXF,GAAGtL,YFqBZ,CA/CeA,IE0BK,CAACW,GF1BE,EA+ChB,IAAI,EAAAG,cErBmC,CAAC,CAAC,MFqBrC,EAAAX,CAAA;ID7BZvE,AC8BD,ECTIiM,GFrBH,EAED,GGQM7H,EDWQ,CAAC+H,GFnBf/L,WGQc,CAACkH,CDWgB,CAAC,MFnBhC,CEmBuC,CFnBlB,CEmBoB,ECXb,CAAClB,MAAK,CAAC,EDWgB;EDSlD,ID3BC,EEmBMhC,KFnBNlE,CGQIkE,WDWU,CAACkC,KCXH,CAACoB,EHRb,CAAAjI,CEmByB,CAAC,IAAI,CAAC,MCXF,CAAC2G,GHR9B,EAAO,CGQ4B,CAAC,EHRzB;IACb,AC0BCrG,ECPG,CAAC,ADOJ,ECPM,KAAK,ACXNqL,CDWO,mBCXI,CAAC6B,qBAAqB,CAAC7G,MAAK,CAAC;EHR7C,EC0BApG,ECLGkM,GDKH,EAED,GEnBMd,GDYS,CAACe,EDOhBhH,cCPgC,ACZf,CDYgB,ACZf6H,ODYsB,EAAE,MDO1C,EEnBmC,AFmBG,CEnBF,CAAC,EDYe;IFrBnDjN,EC6BC,CD7BD,CEsBOsM,KDON3L,CEpBmCoU,EDarB,CAACxI,KCboB,CDad,ACbciF,CDab,CAAC,ECbY,GFoBnC,CAnDenN,QAAQ,EAmDhB,IAAI,EAAAgB,2BAAA,EAAAb,CAAA;ID7BZvE,AC8BD,ECPI,CAAC,CAAC,CFvBL,EAED,GGOqC,MHPrCK,CGSYoU,KAAK,CAACrQ,YHTlB,EAAoB,GGSM,CAACM,WAAW,CAAC,CAAC,CAAC;EFmBxC,ECLD,EFtBE,MGQuC,CHRvCxE,qBAAA,CAAAR,gBAAA,EAAO,IAAI;EEsBZ,EFrBD,AC0BCK,GAAA,OEjBS4U,EAAE,GAAGvQ,iBAAQ,CAACa,uBAAuB,CAAC,CAAC;EHThD,EEqBAlF,ADKAC,GCLA,EDKA,EAED,GElBU4U,EAAE,GAAGxQ,CFkBfiB,gBElBuB,CAACN,cFkBxB,EAAuC,SElBU,CAAC,CAAC;IDWlD/E,AFrBAD,EC6BC,CD7BD,EEqBA,EAED,EDMEW,CEhBI,IAAGgU,CAAC,CDUVnI,GCVcoI,EAAE,IAAIjF,CAAC,AFgBnB,CAvDetL,GCiDI4C,ACVI4N,EAAE,EAAC,CDUF,ADjDD,ECiDG1O,ADMnB,ICNuB,ADMnB,ECNqB,ADMrBZ,4BAAA,EAAAf,CAAA;ID7BZvE,AC8BD,ECNI,GFxBH,CEwBOoG,CFtBR,IEsBa,CCVL,EDUQmF,ACVNiJ,EHZVlU,MEsBwB,CAACkM,QCVE,EHZ3B,EAAkB,CEsBoB,CAAC,OAAO,CAAC;EDM9C,ICJG,AFvBF,KEuBM,EFvBNtM,CGYI,CDWM+G,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGf,IAAI,AFvB7B,CAAAvG,CEuB+BsH,GAAG,EAAE,EAAC,MFvBrC,EAAO,IAAI;IACb,AC0BClH,GAAA,CCHO,IAAI6D,CAAC,CCVP,EDUUwC,ECVPoO,GDUY,CAAC/H,SAAS,CAAC,CAAC,ECVP,GAAG,CAAC,EAAC;EHb9B,EC0BAzM,ICDO,CDCP,EAED,ECHY,GCXJoE,CDWQ8C,GAAG,ADGnB3B,GCHsB,CAAC,EAAE2B,GAAG,GAAGhB,CCXf,CAACS,EDWkB,EAAEO,CDGrC,ECHwC,ADGb,ECHe,EAAC,GCXZ,CAAC,IAAI,CAAC;IHdpCnH,EC6BC,CD7BD,GE0BW,GDGVW,CCHcyG,ACXV,IDWc,GAAGH,KAAK,CAACC,GAAG,ADG9B,CCH+B,ADxDhB7C,CCwDiB8C,GAAG,CAAC,GDxDb,EA2DhB,IAAI,EAAA1B,gBAAA,EAAAjB,CAAA;ID7BZvE,AC8BD,KD9BC,CE2BW,CFzBZ,GEyBgB0M,ACVVtI,CDUW,GAAGR,CAAC,CAAC+I,AFzBtBpM,UEyBgC,CAAC,ACVnB,CDUoB,ACVnBiG,GHff,EAAgB,OGeW,CAAC,CAAC;EFa5B,ID3BC,IEyBU,GFzBVtG,CEyBc0M,ACVVxI,IDUc,GAAGmH,QAAQ,CAACsB,CCVlB,CAAChF,EHfb,CAAAjI,QEyB2C,CAAC,GFzB5C,EAAO,CEyB2C,CAAC,EFzBxC,KGe4B,CAAC,CAAC;IHd3C,AC0BCG,GAAA,GCDW2M,CAAC,CAACI,ECX8BgI,QAAA,CDWnB,ACXmBvD,CDWlB3E,GCXkB,CDWd,CAAC;EFzB9B,EC0BA5M,KAAA,CCAWU,CDkCZ,GE9C4C,MF8C5C+E,OClCY,CA3DK2F,MD6FjB,EAAsB,GC7FM,EA2DhB,IAAI,EAAA2B,eAAA,EAAAnM,IAAA,CAAJ,IAAI,EAAiBgM,IAAI,EAAEzF,IAAI;IF1B1CpH,EC6DC,CD7DD,CE2BM,ICbqC,CF+C1CW,iBAAA,CA/Fe0D,QAAQ,EA+FhB,IAAI,EAAAsB,WAAA,EAAAnB,CAAA;ID7DZvE,AC8DD,EClCI,GF5BH,EAqDD,CGvC4C,QHuC5CQ,qBAAqBC,mBAAmB,EAAC;ECSxC,IChCG,AFwBF,IExBM,AFwBF,CExBGuM,AFwBF/M,GGxCqC,OHwC3B,AGxC2B6U,CHwC1B,CAAC,GAAApU,EExBO,CAAC,AChBiB,CDgBhB,AChBgBuS,IAAA,SHwCzB,CAAA5T,WAAA,EAAG,IAAI,EAAAsB,YAAA,EAAAC,IAAA,CAAJ,IAAI,EAAcH,mBAAmB,IAAAC,iBAAA,CAAArB,WAAA,EAAI,IAAI,EAAAwB,YAAA,EAAAD,IAAA,CAAJ,IAAI,EAAcH,mBAAmB,CAAC;IEvBrG,AFwBA,ACOCV,GAAA,GEhD2C;EDiB3C,AFwBA,ECOAC,IEhD2C,CFgD3C,EEhD2CuU,AFkB5C,OElB4C,EFkB5C5O,cAAA,EAAsB;ICDrB5F,AFwBAA,EGzC2C,AFmB1C,CCFD,AFwBA,AGnCA,MFaCW,iBAAA,CAnEe0D,QAAQ,EAmEhB,IAAI,EAAAwB,WAAA,EAAArB,CAAA;ICFZvE,AFwBAA,ACrBD,EEdC,GDWA,AFwBA,EEtBC,AFwBF,IGrCC+K,KDaCkC,AFwBFnM,AGrCC,OHqCD,EAAQ,aExBuBkG,KAAK,EAAC;EDCpC,ICAG,AFwBF,EGtCD,EHsCKjG,CExBE,IAAIkG,ACdXqN,GDcc,ECdd,CDciB,AFwBD,AGtChBpG,CDckB,EAAEjH,AFwBD,EGtCnB,CDcuB,CFwBA,CAAChH,CExBE+G,GCd1B7C,EDc+B,CAACnB,GFwBE,CAAC,CAAC,CExBE,ACdtC,EDcwCiE,CFwBA,EExBG,EAAE,AFwBD,CAAC9G,CExBC,WFwBW,CAAC,CAAC;ICxB3DJ,EDyBCW,AGvCD,CFcA,CCCK,KAAI,IAAIwG,GAAG,GAAG,AFwBlB,CExBmB,AFwBnB7H,EExBqB6H,GAAG,GAAGF,GFwB3B,EExBgC,CAAChE,GFwB7B,EAAAhC,CExBmC,EAAEkG,GAAG,EAAE,EAAC,KFwB3C,EAAAtG,IAAA,CAAJ,IAAI,EAAiBG,WAAW;ICzBjCf,ED0BCU,AGxCD,GFcA,CCEO,CDAR,EEhBCqK,CDgBW5D,GChBX,CDgBe,EDAhBtB,CCAmBmB,EFwBjB,CAAA3H,EExBsB,CAAC4H,GAAG,CAAC,CAACC,ADA9B,EAAoB,CCAa,AFwB/B,CExBgC,KFwB5B,EAAAjG,WAAA,EAAAL,IAAA,CAAJ,IAAI,EAAa,IAAI,CAACT,YAAY,CAAC,CAAC;IACtC,AGzCC,EFiBC,ICCM,GDDNO,CCCU0F,KAAK,GAAGmF,QAAQ,ADD1B,CCC2BiB,ADxEZpI,QAAQ,EAuEhB,GCCiC,CAAC,ADD9B,EAAA0B,KCCqC,CAAC,GDDtC,EAAAvB,CAAA;EDwBZ,AGzCA,EFkBD,MCCQ,IAAI2I,EAAE,GAAG9G,KAAK,CAAC0C,IAAI,CAAC7B,GAAG,CAAC,CAACkG,KAAK,CAACjG,GAAG,CAAC;AFsB1C,AGzCA,EFkBA,QCEO,IAAI0F,IAAI,GAAGM,EAAE,CAACE,UAAU,CAAC,CAAC,CAAC;AFqBlC,ICvBArN,GAAA,EDuBAkB,CEnBOP,WFxCIQ,IAAI,EEwCR,AFxCS,CEnCAkK,WAAW,EA2EpB,IAAI,EAAA2B,eAAA,EAAAnM,IAAA,CAAJ,IAAI,EAAiBgM,IAAI,EAAEzF,IAAI;EFvCrCtH,ECmCDG,ICKK,CDLL,EAED,SAAAC,GDrCE,CAAAV,OCqCF,CDrCE,CCqCiB,KDrCb,EAAY2B,IAAI;AACtB,MEwCI,ADHF,OAAAR,iBAAA,CA3Ee0D,QAAQ,EA2EhB,IAAI,EAAA7E,QAAA,EAAAgF,CAAA;ADrCZ,IEyCC,ADHF,KDtCCpD,cAEaD,IAAI,EAAC;EEuChB,AFtCDrB,ACmCD,qBDnCC,CAAAL,UAAA,MAAI,EAAc0B,IAAI;AACxB,IEqCGnB,ADHFA,GCGE,ADHF;ADlCA,IEqCEC,ADHFA,KCGE,AFrCFoB,ACkCA,ECgBD,ADdA,SCcA4L,ADdAjH,UDlCqB7E,IAAI,CCkCzB,CDlC0B,CCkCH,CCcvB,EAA0B;EF/CxBrB,IEiDE,ADfF,ICeMwN,GDfN3M,UDlCA,CAAAjB,CEiDqB,GAAG8L,EDfxB,CA/EenH,KC8FiB,CAACoH,ED9FV,ED6CvB,ACkCO,IAAI,EDlCP,ACkCOxF,EDlCc9E,EEiDsB,CAAC,CFjDnB,MCkClB,EAAAqD,CAAA,OCesD,CAAC;AFhDpE,ICkCA,ECeI,IAAI+I,cAAc,GAAG/B,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;AFjDjE,ECkCA,ICgBG,GFlDHnK,CEkDOkM,WAAW,GAAGhC,KFhDFrK,GEgDU,CAACsK,AFhDP,EAAC,YEgDoB,CAAC,cAAc,CAAC;EF/C3D3L,EC+BDE,ECiBG,CDjBH,GCiBOyN,aAAa,AFhDnB,CAAA9N,EEgDsB6L,QAAQ,CAACC,KFhD/B,MAAI,EAAoBtK,CEgDqB,CAAC,EFhDlB,kBEgDsC,CAAC;AF/CrE,IC8BClB,ECkBG,GDlBH,CCkBOyN,CDhBR,SAAAxH,CCgBmB,GAAGsF,IDhBPrF,ICgBe,ADhBX,CCgBYsF,CDhBX,aCgByB,CAAC,kBAAkB,CAAC;AFhDhE,MEiDG,ADhBD/G,GDjCFnD,CEiDOoM,CDhBL,CAAAnJ,CAAA,GAAA7D,GCgBc,GAAG6K,KF/CFrK,GE+CU,CAACsK,AF/CP,EAAC,AC+BpB,CAnFcpH,QAAQ,EAmFtB,CCgBwC,CAAC,EDhBrC,EAAS8B,IAAI,GCgBmC,CAAC;EF9CtDrG,EC+BF,ECiBIa,iBAAA,AFhDF,CEpDe0K,AFoDfzL,WEpD0B,EAoGxB,CFhDF,GEgDM,EAAAgO,CFhDF,EAAkBzM,IAAI,KEgDpB,EAAAN,IAAA,CAAJ,IAAI,EAAcyM,eAAe,EAAE,gCAAgC,GAAGjJ,iBAAQ,CAACiB,8BAA8B,CAAC,CAAC;AF/CnH,EC8BC,ICkBG3E,iBAAA,CArGa0K,WAAW,EAqGxB,IAAI,EAAAuC,YAAA,EAAA/M,IAAA,CAAJ,IAAI,EAAc0M,cAAc,EAAE,+BAA+B,GAAGlJ,iBAAQ,CAACe,6BAA6B,CAAC,CAAC;AFhD/G,IC8BApF,ECmBGW,CDnBH,ED9BAM,cEiDG,CAtGaoK,CFuDDlK,IAAI,EAAC,IEvDO,EAsGxB,IAAI,EAAAyM,YAAA,EAAA/M,IAAA,CAAJ,IAAI,EAAc2M,WAAW,EAAE,oBAAoB,GAAInJ,iBAAQ,CAACmB,kBAAkB,CAAC,CAAC;EF9CtF1F,EC2BDG,ECoBGU,GDpBH,EAED,SAAAyF,GCkBI,AF/CF,CExDeiF,AFwDfxL,KC6BcwG,KAAK,CCrFO,CFwD1B,AC6BoB,CCkBlB,IAAI,CF/CF,CE+CEuH,CF/CczM,IAAI,OE+ClB,EAAAN,IAAA,CAAJ,IAAI,EAAc4M,aAAa,EAAE,wBAAwB,GAAGpJ,iBAAQ,CAACW,yBAAyB,CAAC,CAAC;AF9CpG,ME+CIrE,ADlBF4D,MAAA,CAAAC,CAAA,GAAA7D,MCkBE,CAxGa0K,UDsFf,CCtF0B,ADDXhH,ECyGb,IAAI,EAAAuJ,ADzGiB,EAuFvB,IAAI,EAAUvH,ICkBR,CDlBa,CCkBbxF,IAAA,CAAJ,IAAI,EAAc6M,WAAW,EAAE,sBAAsB,GAAGrJ,iBAAQ,CAACa,uBAAuB,CAAC,CAAC;AF/C7F,IC8BD,ECkBIvE,GFhDHa,cEgDG,CAzGa6J,MF6DI3K,KE7DO,EAyGxB,IAAI,EAAAkN,MF5CgC,EAAC,IE4CjC,EAAA/M,IAAA,CAAJ,IAAI,EAAc8M,SAAS,EAAE,kBAAkB,GAAGtJ,iBAAQ,CAACS,YAAY,CAAC,CAAC;EF3C3E,ACyBD,ECmBD,EF5CMrD,mBAAmB,GAAGf,mBAAmB,IAAI,CAAC;EE4CnD,AF3CCC,ECwBDX,GAAA,YDxBC,CAAAV,WAAA,MAAI,EAAA+B,oBAAA,EAAAR,IAAA,CAAJ,IAAI,EAAsB,CAACY,mBAAmB;AE2C/C,EF1CC,ECuBDxB,KDvBQwB,ACuBR,EAUD,SAAA6E,QDjC4B,MCiC5B,EAAsB;ACSrB,AFzCD,MCiCEX,GCQDoG,QDRC,CAAAvH,CAAA,GAAA7D,YCjF8BkN,GAAG,EAAEjE,ADiFnC,CAnGevF,MCkB2B,EAAC,ADlBpB,EAmGvB,IAAI,EAAe,IAAI;ADjCxB,EE/CGwJ,EDiFJ,CCjFO,CAACzB,GF+CP1K,aE/CuB,CAAC,MFiDLhB,CEjDY,EAAE,YAAU,IFiDL,EAAC;EACtC,AC+BD,EChFO,EFiDFiB,EEjDKiI,OAAO,CAACkE,KAAK,CAACC,EFiDD,GAAGrN,EEjDK,KAAK,MAAM,EAAC,IFiDE,IAAI,CAAC;EACjDC,EC8BDX,EC/EW4J,CD+EX,MC/EkB,CAACkE,KAAK,AFiDvB,CEjDwBC,AFiDxBzO,OEjD+B,GAAG,CFiDlC,MEjDyC,AFiDrC,EAAAgC,mBAAA,EAAAT,IAAA,CAAJ,IAAI,EAAqB,CAACc,kBAAkB;EAC5C,EEjDM,AD8EP1B,CC9EQ,IFiDA0B,AC6BR,EC5EOiI,AD8ER,OC9Ee,CAACkE,CD8EhBvH,IC9EqB,CAACwH,EF+CK,IC+B3B,CC9E6B,CD8EV,EC9Ea,MAAM;AFgDtC,EE/CI,CAAC,CAAC,ED8EJlI,WAAA,CAAArB,CAAA,GAAA7D,iBAAA,CAvGe0D,QAAQ,EAuGvB,IAAI,EAAe,IAAI;AC7EzB,AF8CC,ICgCD,KDhCCvD,aAEYJ,mBAAmB,EAAC;AEhDhC,EFiDC,AC6BD,ID7BKkB,GEjDLoL,UFiDkB,GAAGtM,GEMGmM,IAAI,EAAEzF,IAAI,EAAC,IFNK,IAAI,CAAC;EEO1C,AFNFzG,EC4BDX,ECtBMoH,CDsBN,GCtBU,CAAClH,QFNV,CAAAZ,CEMoB,CAAC,CAAC,EAAC,MFNvB,MAAI,EAAAiC,iBAAA,EAAAV,IAAA,CAAJ,IAAI,EAAmBe,aAAa;EACpCjB,EEKuB,ADsBxBV,ICtBwB+N,CDsBxB,EAED,QD7BE,CAAA1O,AC6BFkH,GCxByB,QFLvB,CC6BiB5B,KD7Bb,EAAAxD,CC6BqB,EAAC,UD7BtB,EAAAP,IAAA,CAAJ,IAAI,EAAee,aAAa;EAChC,EEKM,CAAAoM,CDwBNnJ,GD7BOjD,MC6BP,CAAA4C,CAAA,GCxBM,ADwBN7D,ED7BoB,CEKdkM,IAAI,CAACoB,SAAS,ADwBpB,CA3Ge5J,CCmFM6J,MAAM,CAAAC,ADnFJ,EA2GvB,GCxB2B,CAAAH,ADwBvB,EAAapJ,QAAQ,KCxBE,EAAAyF,kBAAA,CAAIwC,IAAI,CAACoB,SAAS,EAAC;AFJhD,IEKQpB,ADwBR,ICxBY,CAACoB,SAAS,CAACG,GAAG,CAAC,aAAa,CAAC;AFLxC,EEMK,ADuBL,CCvBM,MACG,AFPTxN,aAEYF,mBAAmB,EAAC;EAC/B,EEIQ,ADsBTV,ED1BK6B,CC0BL,CCtBSwM,SFJO,GAAI1N,IEIX,aFJW,CAAArB,WAAA,MAAI,EAAAkC,oBAAA,EAAAX,IAAA,CAAJ,IAAI,EAAsBH,mBAAmB,KAAAC,iBAAA,CAAArB,WAAA,EAAK,IAAI,EAAAoC,mBAAA,EAAAb,IAAA,CAAJ,IAAI,EAAqBH,mBAAmB,CAAC;EAClHC,EEIM,ADqBPV,CCrBOoO,IDqBP,EAED,QD3BE,CAAA/O,AC2BFmH,CCvBQ,GAAAoG,IAAI,CAACoB,EFJX,EC2BF,EAAqB,ED3Bf,CEIgB,CFJhB7M,CEIiB8M,MAAM,CAAAC,KAAA,AFJvB,CEIuBE,CFJvBxN,IAAA,CAAJ,IAAI,EAAegB,IEIQ,EAAAwI,KFJG,aEIH,CAAIwC,IAAI,CAACoB,SAAS,EAAC;AFHhD,IEIQpB,EDsBa,ECtBT,CAACoB,CDsBQvH,QCtBC,CAAC0H,GAAG,CAAC,EDsBN,WCtBmB,CAAC;EACnC,IDsBLrJ,UAAA,CAAAP,CAAA,GAAA7D,iBAAA,CA/GgB0D,QAAQ,EA+GtB,IAAI,GAAAqC,eAAA,GAAA/F,iBAAA,CA/GU0D,QAAQ,EA+GtB,IAAI,EAAAU,UAAA,EAAAP,CAAA,IAAAkC,eAAA;ACrBP,IDsBA;ACtBC,EDsBA,OCtBAkH,aAmBmBhE,OAAO,EAAE0E,IAAI,EAAC;EAC9B1E,EDEH5J,GAAA,ECFU,CAACuO,WAAW,GAAGD,IAAI;AAC9B,IDCCrO,KAAA,EAED,SAAA0G,WAAkBxF,IAAI,EAAC;MACrB3B,QAAA,CAAAgF,CAAA,GAAA7D,iBAAA,CAnHe0D,QAAQ,EAmHvB,IAAI,EAAYlD,IAAI;IACtB;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EAED,SAAA2G,eAAsBzF,IAAI,EAAC;MACzB8E,YAAA,CAAAzB,CAAA,GAAA7D,iBAAA,CAvHe0D,QAAQ,EAuHvB,IAAI,EAAgBlD,IAAI;IAC1B;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EAGD,SAAA4G,UAAA,EAAkB;MAChB,IAAIV,IAAI,GAAG,IAAI,CAAC1B,OAAO,CAAC,CAAC;MACzB,IAAI4B,KAAK,GAAIS,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAACX,IAAI,CAAC,EAAE;QAAA,OAAM,IAAIW,KAAK,CAACX,IAAI,CAAC;MAAA,EAAC;MAC/D,IAAI,CAACC,QAAQ,CAACC,KAAK,CAAC;IACtB;EAAC;IAAArG,GAAA;IAAAC,KAAA,EAED,SAAA+G,aAAoBC,KAAK,EAAC;MACxB,KAAI,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGD,KAAK,CAAChE,MAAM,EAAEiE,GAAG,EAAE,EAAC;QACzC,KAAI,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,KAAK,CAAChE,MAAM,EAAEkE,GAAG,EAAE,EAAC;UACzC,IAAIC,IAAI,GAAAzG,iBAAA,CApIG0D,QAAQ,EAoIR,IAAI,EAAAgD,WAAA,EAAAxG,IAAA,CAAJ,IAAI,CAAc;UAC7BoG,KAAK,CAACC,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGC,IAAI;UACtBzG,iBAAA,CAtIW0D,QAAQ,EAsInB,IAAI,EAAAiD,yBAAA,EAAAzG,IAAA,CAAJ,IAAI,EAA2BuG,IAAI;QACrC;MACF;MACA,OAAOH,KAAK;IACd;EAAC;IAAAjH,GAAA;IAAAC,KAAA,EAMD,SAAAsH,cAAqBN,KAAK,EAAC;MACzB,KAAI,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGD,KAAK,CAAChE,MAAM,EAAEiE,GAAG,EAAE,EAAC;QACzC,KAAI,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,KAAK,CAAChE,MAAM,EAAEkE,GAAG,EAAE,EAAC;UACvC,IAAIC,IAAI,GAAGH,KAAK,CAACC,GAAG,CAAC,CAACC,GAAG,CAAC;UAC1B,IAAIK,mBAAmB,GAAA7G,iBAAA,CApJd0D,QAAQ,EAoJS,IAAI,EAAAoD,oBAAA,EAAA5G,IAAA,CAAJ,IAAI,EAAsBqG,GAAG,EAAEC,GAAG,CAAC;UAC7DC,IAAI,CAAC3G,oBAAoB,CAAC+G,mBAAmB,CAAC;UAC9C7G,iBAAA,CAtJS0D,QAAQ,EAsJjB,IAAI,EAAAqD,oBAAA,EAAA7G,IAAA,CAAJ,IAAI,EAAsBuG,IAAI;QACpC;MACF;IACF;EAAC;IAAApH,GAAA;IAAAC,KAAA,EAoDD,SAAA0H,iBAAwBV,KAAK,EAAC;MAC5B,IAAIW,GAAG,GAAG,IAAI;MAEd,KAAI,IAAIV,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGD,KAAK,CAAChE,MAAM,EAAEiE,GAAG,EAAE,EAAC;QACzC,KAAI,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,KAAK,CAAChE,MAAM,EAAEkE,GAAG,EAAE,EAAC;UAC3C,IAAMC,IAAI,GAAGzG,iBAAA,CAlNE0D,QAAQ,EAkNV,IAAI,EAAAE,MAAA,EAAAC,CAAA,CAAQ0C,GAAG,CAAC,CAACC,GAAG,CAAC;UAClCC,IAAI,CAACrG,MAAM,CAAC,CAAC;UACbJ,iBAAA,CApNe0D,QAAQ,EAoNvB,IAAI,EAAAiD,yBAAA,EAAAzG,IAAA,CAAJ,IAAI,EAA2BuG,IAAI;UACnCQ,GAAG,GAAAjH,iBAAA,CArNY0D,QAAQ,EAqNjB,IAAI,EAAAwD,uBAAA,EAAAhH,IAAA,CAAJ,IAAI,EAAyB+G,GAAG,EAAER,IAAI,CAAC5G,cAAc,CAAC,CAAC,CAAC;QAE9D;MACF;MAEAuF,SAAA,CAAAvB,CAAA,GAAA7D,iBAAA,CA1NiB0D,QAAQ,EA0NzB,IAAI,EAAauD,GAAG;IACtB;EAAC;IAAA5H,GAAA;IAAAC,KAAA,EAUD,SAAA6H,2BAAA,EAAmC;MACjC3C,sBAAA,CAAAX,CAAA,GAAA7D,iBAAA,CAtOiB0D,QAAQ,EAsOzB,IAAI,EAA0B,CAAC;MAC/BY,wBAAA,CAAAT,CAAA,GAAA7D,iBAAA,CAvOiB0D,QAAQ,EAuOzB,IAAI,EAA4B,CAAC;IACnC;EAAC;IAAArE,GAAA;IAAAC,KAAA,EAED,SAAA8H,cAAqB5B,IAAI,EAAC;MACxB,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC;MAClB,IAAI,CAACU,SAAS,CAAC,CAAC;MAEhB,IAAIR,KAAK,GAAG,IAAI,CAAC/B,QAAQ,CAAC,CAAC;MAE3B,IAAI,CAAC0C,YAAY,CAACX,KAAK,EAAEF,IAAI,CAAC;MAC9B,OAAOE,KAAK;IACd;EAAC;IAAArG,GAAA;IAAAC,KAAA,EAED,SAAAd,QAAA,EAAgB;MACd,IAAI6I,YAAY,GAAG3D,QAAQ,CAACW,yBAAyB,CAAC,CAAC,GAAG,CAAC;MACzDX,QAAQ,CAACsC,UAAU,CAACqB,YAAY,CAAC;IACrC;EAAC;AAAA;AAAA/F,SAAA,GAvPkBoC,QAAQ;AAAA,SAAAgD,YAAA,EA4IL;EAClB,OAAQY,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAI,IAAIlJ,aAAI,CAAC,IAAI,CAAC,GAAG,IAAIA,aAAI,CAAC,KAAK,CAAC;AAChE;AAAC,SAAAyI,qBAawBP,GAAG,EAAEC,GAAG,EAAC;EAAA,IAAAgB,KAAA;EACnC,IAAIC,uBAAuB,GAAAzH,iBAAA,CA5JV0D,SAAQ,EA4JK,IAAI,EAAAgE,2BAAA,EAAAxH,IAAA,CAAJ,IAAI,EAA6BqG,GAAG,EAAEC,GAAG,CAAC;EACxE,IAAImB,aAAa,GAAGF,uBAAuB,CAACG,GAAG,CAAC,UAAAC,UAAU;IAAA,OAAA7H,iBAAA,CA7JzC0D,SAAQ,EA6JqC8D,KAAI,EAAAM,oBAAA,EAAA5H,IAAA,CAAJsH,KAAI,EAAsBK,UAAU;EAAA,CAAC,CAAC;EACpG,OAAA7H,iBAAA,CA9JiB0D,SAAQ,EA8JlB,IAAI,EAAAqE,qCAAA,EAAA7H,IAAA,CAAJ,IAAI,EAAuCyH,aAAa;AACjE;AAAC,SAAAD,4BAEkCnB,GAAG,EAAEC,GAAG,EAAC;EAAA,IAAAwB,MAAA;EAC1C,IAAIxC,IAAI,GAAG,IAAI,CAAC1B,OAAO,CAAC,CAAC;EACzB,IAAImE,OAAO,GAAG9B,KAAK,CAAEK,GAAG,GAAG,CAAC,EAAGA,GAAG,EAAIA,GAAG,GAAG,CAAE,CAAC,CAACoB,GAAG,CAAC,UAAAM,KAAK;IAAA,OAAAlI,iBAAA,CAnKxC0D,SAAQ,EAmKoCsE,MAAI,EAAAG,oBAAA,EAAAjI,IAAA,CAAJ8H,MAAI,EAAsBE,KAAK,EAAE1C,IAAI;EAAA,CAAC,CAAC;EACpG,IAAI4C,IAAI,GAAGjC,KAAK,CAAEI,GAAG,GAAG,CAAC,EAAGA,GAAG,EAAGA,GAAG,GAAG,CAAE,CAAC,CAACqB,GAAG,CAAC,UAAAM,KAAK;IAAA,OAAAlI,iBAAA,CApKpC0D,SAAQ,EAoKgCsE,MAAI,EAAAG,oBAAA,EAAAjI,IAAA,CAAJ8H,MAAI,EAAsBE,KAAK,EAAE1C,IAAI;EAAA,CAAC,CAAC;EAChG,IAAI6C,gBAAgB,GAAGD,IAAI,CAACE,OAAO,CAAC,UAAA/B,GAAG;IAAA,OAAI0B,OAAO,CAACL,GAAG,CAAC,UAAAW,MAAM;MAAA,OAAIpC,KAAK,CAACI,GAAG,EAAEgC,MAAM,CAAC;IAAA,EAAC;EAAA,EAAC;EACrF,IAAIZ,aAAa,GAAGU,gBAAgB,CAACG,MAAM,CAAC,UAAAC,eAAe;IAAA,OAAI,CAAAzI,iBAAA,CAtK9C0D,SAAQ,EAsKuCsE,MAAI,EAAAU,WAAA,EAAAxI,IAAA,CAAJ8H,MAAI,EAAazB,GAAG,EAAEC,GAAG,EAAEiC,eAAe,CAAC;EAAA,EAAC;EAC5G,OAAOd,aAAa;AACpB;AAAC,SAAAQ,qBAE2BD,KAAK,EAAE1C,IAAI,EAAC;EACtC,OAAAxF,iBAAA,CA3Ke0D,SAAQ,EA2KhB,IAAI,EAAAiF,IAAA,EAAAzI,IAAA,CAAJ,IAAI,EAAMgI,KAAK,EAAE1C,IAAI;AAC7B;AAAC,SAAAmD,KAEUC,CAAC,EAACC,CAAC,EAAC;EACd,OAAOD,CAAC,GAAItB,IAAI,CAACwB,KAAK,CAACF,CAAC,GAAGC,CAAC,CAAC,GAAGA,CAAE;AACpC;AAAC,SAAAH,YAEkBnC,GAAG,EAAEC,GAAG,EAAEF,KAAK,EAAC;EACjC,IAAIyC,QAAQ,GAAG5C,KAAK,CAACI,GAAG,EAAEC,GAAG,CAAC;EAC9B,OAAOF,KAAK,CAAC0C,KAAK,CAAC,UAACC,OAAO,EAAEf,KAAK;IAAA,OAAKe,OAAO,KAAKF,QAAQ,CAACb,KAAK,CAAC;EAAA,EAAC;AACrE;AAAC,SAAAJ,qBAEyBD,UAAU,EAAC;EACrC,IAAItB,GAAG,GAAGsB,UAAU,CAAC,CAAC,CAAC;EACvB,IAAIrB,GAAG,GAAGqB,UAAU,CAAC,CAAC,CAAC;EACvB,OAAO7H,iBAAA,CA1LU0D,SAAQ,EA0LlB,IAAI,EAAAE,MAAA,EAAAC,CAAA,CAAQ0C,GAAG,CAAC,CAACC,GAAG,CAAC;AAC9B;AAAC,SAAAuB,sCAE4CJ,aAAa,EAAC;EACzD,OAAOA,aAAa,CAACuB,MAAM,CAAC,UAACjC,GAAG,EAAER,IAAI,EAAK;IACzC,OAAOA,IAAI,CAAClH,UAAU,CAAC,CAAC,GAAG,EAAE0H,GAAG,GAAGA,GAAG;EAAA,CAAC,EAAE,CAAC,CAAC;AAC/C;AAAC,SAAAF,qBAE2BN,IAAI,EAAC;EAAA,IAAA0C,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA;EAC/B,IAAG5C,IAAI,CAAC9G,kBAAkB,CAAC,CAAC,EAC1B+E,2BAAA,CAAAb,CAAA,GAAA7D,iBAAA,CApMe0D,SAAQ,EAoMrB,IAAI,GAAAyF,qBAAA,GAAAnJ,iBAAA,CApMS0D,SAAQ,EAoMrB,IAAI,EAAAgB,2BAAA,EAAAb,CAAA,IAAAsF,qBAAA;EAER,IAAG1C,IAAI,CAAC/G,mBAAmB,CAAC,CAAC,EAC3BkF,4BAAA,CAAAf,CAAA,GAAA7D,iBAAA,CAvMe0D,SAAQ,EAuMrB,IAAI,GAAA0F,qBAAA,GAAApJ,iBAAA,CAvMS0D,SAAQ,EAuMrB,IAAI,EAAAkB,4BAAA,EAAAf,CAAA,IAAAuF,qBAAA;EAER,IAAG3C,IAAI,CAAC7G,gBAAgB,CAAC,CAAC,EACxBkF,gBAAA,CAAAjB,CAAA,GAAA7D,iBAAA,CA1Me0D,SAAQ,EA0MrB,IAAI,GAAA2F,qBAAA,GAAArJ,iBAAA,CA1MS0D,SAAQ,EA0MrB,IAAI,EAAAoB,gBAAA,EAAAjB,CAAA,IAAAwF,qBAAA;AACV;AAAC,SAAA1C,0BAkBgCF,IAAI,EAAC;EAAA,IAAA6C,qBAAA,EAAAC,qBAAA;EACpC9C,IAAI,CAAClH,UAAU,CAAC,CAAC,IAAI,IAAI,GAAA+E,wBAAA,CAAAT,CAAA,GAAA7D,iBAAA,CA9NR0D,SAAQ,EA8NK,IAAI,GAAA4F,qBAAA,GAAAtJ,iBAAA,CA9NjB0D,SAAQ,EA8NK,IAAI,EAAAY,wBAAA,EAAAT,CAAA,IAAAyF,qBAAA,KAAA9E,sBAAA,CAAAX,CAAA,GAAA7D,iBAAA,CA9NjB0D,SAAQ,EA8NuC,IAAI,GAAA6F,qBAAA,GAAAvJ,iBAAA,CA9NnD0D,SAAQ,EA8NuC,IAAI,EAAAc,sBAAA,EAAAX,CAAA,IAAA0F,qBAAA,EAAuB;AAC7F;AAAC,SAAArC,wBAE8BD,GAAG,EAAE5G,WAAW,EAAC;EAC9C,OAAO4G,GAAG,IAAI5G,WAAW;AAC3B;AAAC,IAAAuD,MAAA;EAAAC,CAAA;AAAA;AAjOC;AAAA,IAAAE,KAAA;EAAAF,CAAA,EACe;AAAC;AAAA,IAAAK,SAAA;EAAAL,CAAA,EACG;AAAG;AAEtB;AAAA,IAAAO,UAAA;EAAAP,CAAA,EACoB;AAAC;AAAA,IAAAS,wBAAA;EAAAT,CAAA,EACa;AAAC;AAAA,IAAAW,sBAAA;EAAAX,CAAA,EACH;AAAC;AAAA,IAAAa,2BAAA;EAAAb,CAAA,EAEI;AAAC;AAAA,IAAAe,4BAAA;EAAAf,CAAA,EACA;AAAC;AAAA,IAAAiB,gBAAA;EAAAjB,CAAA,EACb;AAAC;AAE3B;AAAA,IAAAmB,WAAA;EAAAnB,CAAA,EACqB;AAAK;AAAA,IAAAqB,WAAA;EAAArB,CAAA,EACL;AAAK;AAAA,IAAAuB,SAAA;EAAAvB,CAAA,EACP;AAAK;AAAA,IAAAhF,QAAA;EAAAgF,CAAA,EACN;AAAI;AAAA,IAAAyB,YAAA;EAAAzB,CAAA,EACA;AAAK","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["export default class Cell {\r\n    #isAlive = false\r\n    #nextState = false\r\n\r\n    #isUnderpopulated = false\r\n    #isOverpopulated = false\r\n    #isReproducing = false\r\n    #isUnchanged = false\r\n \r\n    \r\n    constructor(isAlive){\r\n      this.#isAlive = isAlive\r\n    }\r\n    \r\n    getIsAlive(){\r\n      return this.#isAlive\r\n    }  \r\n    \r\n    getNextState(){\r\n      return this.#nextState\r\n    }\r\n\r\n    getIsUnderpopulated(){\r\n      return this.#isUnderpopulated\r\n    }\r\n\r\n    getIsOverpopulated(){\r\n      return this.#isOverpopulated\r\n    }\r\n\r\n    getIsReproducing(){\r\n      return this.#isReproducing\r\n    }\r\n\r\n    getIsUnchanged(){\r\n      return this.#isUnchanged\r\n    }\r\n\r\n    #setIsAlive(bool){\r\n      this.#isAlive = bool\r\n    }\r\n\r\n    #setNextState(bool){\r\n      this.#nextState = bool\r\n    }\r\n\r\n    #setIsUnderpopulated(bool){\r\n      this.#isUnderpopulated = bool\r\n    }\r\n\r\n    #setIsOverpopulated(bool){\r\n      this.#isOverpopulated = bool\r\n    }\r\n\r\n    #setIsReproducing(bool){\r\n      this.#isReproducing = bool\r\n    }\r\n\r\n    #setIsUnchanged(bool){\r\n      this.#isUnchanged = bool\r\n    }\r\n\r\n\r\n\r\n    #isNotUnderpopulated(adjacentLivingCells){\r\n      let isNotUnderpopulated = adjacentLivingCells >= 2  \r\n      this.#setIsUnderpopulated(!isNotUnderpopulated)\r\n      return isNotUnderpopulated\r\n    }\r\n\r\n    #isNotOverpopulated(adjacentLivingCells){\r\n      let isNotOverpopulated = adjacentLivingCells <= 3  \r\n      this.#setIsOverpopulated(!isNotOverpopulated)\r\n      return isNotOverpopulated\r\n    }\r\n\r\n    #reproducing(adjacentLivingCells){\r\n      let isReproducing = adjacentLivingCells == 3\r\n      this.#setIsReproducing(isReproducing)   \r\n      this.#setNextState(isReproducing)\r\n      return isReproducing\r\n    }\r\n\r\n    #isSurviving(adjacentLivingCells){    \r\n      let isSurviving =  this.#isNotUnderpopulated(adjacentLivingCells) && this.#isNotOverpopulated(adjacentLivingCells)\r\n      this.#setNextState(isSurviving)\r\n    }\r\n\r\n\r\n    determineDevelopment(adjacentLivingCells){\r\n      this.getIsAlive() ? this.#isSurviving(adjacentLivingCells) : this.#reproducing(adjacentLivingCells)\r\n    }\r\n\r\n    evolve(){\r\n      let isUnchanged = this.getIsAlive() == this.getNextState()\r\n      this.#setIsUnchanged(isUnchanged)\r\n      this.#setIsAlive(this.getNextState())\r\n    }\r\n  }","import Cell from \"./cell.js\";\r\n\r\nexport default class Organism {\r\n    static #table\r\n    //controls\r\n    static #size = 0\r\n    static #interval = 100\r\n\r\n    //Stats\r\n    static #iteration = 0\r\n    static #livingCellsPerIteration = 0\r\n    static #deadCellsPerIteration = 0\r\n\r\n    static #fatalitiesOfOverpopulation = 0\r\n    static #fatalitiesOfUnderpopulation = 0\r\n    static #reproducedCells = 0\r\n\r\n    //Loop Cooditions\r\n    static #hasStarted = false\r\n    static #hasStopped = false\r\n    static #isStable = false\r\n    static #isAlive = true\r\n    static #isRepeating = false\r\n\r\n    static getTable(){\r\n      return this.#table\r\n    }\r\n\r\n    static getSize(){\r\n      return this.#size\r\n    }\r\n\r\n    static getInterval(){\r\n      return this.#interval\r\n    }\r\n\r\n    static getTable(){\r\n      return this.#table\r\n    }\r\n\r\n    static getIteration(){\r\n      return this.#iteration\r\n    }\r\n\r\n    static getLivingCellPerIteration(){\r\n      return this.#livingCellsPerIteration\r\n    }\r\n\r\n    static getDeadCellPerIteration(){\r\n      return this.#deadCellsPerIteration\r\n    }\r\n\r\n    static getFatalitiesOfOverpopulation(){\r\n      return this.#fatalitiesOfOverpopulation\r\n    }\r\n\r\n    static getFatalitiesOfUnderpopulation(){\r\n      return this.#fatalitiesOfUnderpopulation\r\n    }\r\n\r\n    static getReproducedCells(){\r\n      return this.#reproducedCells\r\n    }\r\n\r\n    static getHasStarted(){\r\n      return this.#hasStarted\r\n    }\r\n\r\n    static getHasStopped(){\r\n      return this.#hasStopped\r\n    }\r\n\r\n    static getIsStable(){\r\n      return this.#isStable\r\n    }\r\n\r\n    static getIsAlive(){\r\n      return this.#isAlive\r\n    }\r\n\r\n    static getIsRepeating(){\r\n      return this.#isRepeating\r\n    }\r\n\r\n    static setSize(size){\r\n       this.#size = size \r\n    }\r\n\r\n    static setTable(table){\r\n      this.#table = table \r\n    } \r\n\r\n    static getInterval(interval){\r\n      this.#interval = interval\r\n    }\r\n\r\n    static getHasStarted(){\r\n      return this.#hasStarted\r\n    }\r\n\r\n    static setHasStarted(){\r\n      this.#hasStarted = true\r\n    }\r\n\r\n    static setStopped(){\r\n      this.#hasStopped = true\r\n    }\r\n\r\n    static setInterval(interval){\r\n      this.#interval = interval\r\n    }\r\n\r\n    static setIteration(){\r\n     ++this.#iteration\r\n    }\r\n\r\n    static setIsAlive(bool){\r\n      this.#isAlive = bool\r\n    }\r\n\r\n    static setIsRepeating(bool){\r\n      this.#isRepeating = bool\r\n    }\r\n\r\n\r\n    static initTable(){\r\n      let size = this.getSize()\r\n      let table =  Array.from(new Array(size), () => new Array(size))\r\n      this.setTable(table)\r\n    }\r\n\r\n    static startingLive(array){\r\n      for(var row = 0; row < array.length; row++){\r\n        for(var col = 0; col < array.length; col++){\r\n          let cell = this.#CreateCell()\r\n          array[row][col] = cell\r\n          this.#setIterationStatsCounter(cell)\r\n        }\r\n      }\r\n      return array\r\n    }\r\n\r\n    static #CreateCell(){\r\n      return (Math.random() > 0.5) ? new Cell(true) : new Cell(false)\r\n     }\r\n\r\n    static validateStock(array){\r\n      for(var row = 0; row < array.length; row++){\r\n        for(var col = 0; col < array.length; col++){\r\n            let cell = array[row][col]\r\n            let livingAdjacentCells = this.#livingAdjacentCells(row, col)\r\n            cell.determineDevelopment(livingAdjacentCells)\r\n            this.#updateStatsForCells(cell)\r\n      }\r\n    }\r\n  }\r\n\r\n  static #livingAdjacentCells(row, col){\r\n    let adjacentCellCoordinates = this.#getAdjacentCellCoordinates(row, col)\r\n    let adjacentCells = adjacentCellCoordinates.map(coordinate => this.#getCellbyCoordinate(coordinate))\r\n    return this.#calculateNumberOfLivingAdjacentCells(adjacentCells)\r\n  }\r\n\r\n  static #getAdjacentCellCoordinates(row, col){\r\n    let size = this.getSize()\r\n    let columns = Array((col - 1), col, ( col + 1)).map(index => this.#calculateValidIndex(index, size))\r\n    let rows = Array((row - 1), row, (row + 1)).map(index => this.#calculateValidIndex(index, size)) \r\n    let cartesianProduct = rows.flatMap(row => columns.map(column => Array(row, column)))\r\n    let adjacentCells = cartesianProduct.filter(coordinateArray => !this.#isIdentity(row, col, coordinateArray))\r\n    return adjacentCells\r\n    }\r\n\r\n    static #calculateValidIndex(index, size){\r\n      return this.#mod(index, size)\r\n     }\r\n  \r\n    static #mod(a,b){\r\n      return a - (Math.floor(a / b) * b)\r\n    }\r\n\r\n    static #isIdentity(row, col, array){\r\n      let identity = Array(row, col)\r\n      return array.every((element, index) => element === identity[index]);\r\n    }\r\n\r\n  static #getCellbyCoordinate(coordinate){\r\n    let row = coordinate[0]\r\n    let col = coordinate[1]\r\n    return this.#table[row][col]\r\n  }\r\n\r\n  static #calculateNumberOfLivingAdjacentCells(adjacentCells){\r\n    return adjacentCells.reduce((acc, cell) => {\r\n      return cell.getIsAlive() ? ++acc : acc}, 0);\r\n  }\r\n\r\n  static #updateStatsForCells(cell){\r\n    if(cell.getIsOverpopulated())\r\n      ++this.#fatalitiesOfOverpopulation\r\n\r\n    if(cell.getIsUnderpopulated())\r\n      ++this.#fatalitiesOfUnderpopulation  \r\n\r\n    if(cell.getIsReproducing())\r\n      ++this.#reproducedCells  \r\n  }\r\n  \r\n  static evolveGeneration(array){\r\n    let acc = true\r\n\r\n    for(var row = 0; row < array.length; row++){\r\n      for(var col = 0; col < array.length; col++){\r\n      const cell = this.#table[row][col]\r\n      cell.evolve() \r\n      this.#setIterationStatsCounter(cell)\r\n      acc = this.#validateUnchangedState(acc, cell.getIsUnchanged())    \r\n    \r\n      }\r\n    }  \r\n\r\n    this.#isStable = acc\r\n  }\r\n\r\n  static #setIterationStatsCounter(cell){\r\n    cell.getIsAlive() == true ? ++this.#livingCellsPerIteration : ++this.#deadCellsPerIteration\r\n  }\r\n\r\n  static #validateUnchangedState(acc, isUnchanged){\r\n    return acc && isUnchanged\r\n  }\r\n\r\n  static resetIterationStatsCounter(){\r\n    this.#deadCellsPerIteration = 0\r\n    this.#livingCellsPerIteration = 0\r\n  }\r\n\r\n  static initEvolution(size){\r\n    this.setSize(size)\r\n    this.initTable()\r\n\r\n    let table = this.getTable()\r\n\r\n    this.startingLive(table, size)\r\n    return table\r\n  }\r\n\r\n  static isAlive(){\r\n    let isStillAlive = Organism.getLivingCellPerIteration() > 0\r\n      Organism.setIsAlive(isStillAlive)\r\n  }\r\n}","import Test from \"./main\";\r\nimport Organism from \"./organism\";\r\n\r\nexport default class HtmlHandler {\r\n\r\n  static registerTabs(){\r\n        let StatsTab = document.getElementById(\"StatsTab\")\r\n        let RulesTab = document.getElementById(\"RulesTab\")\r\n        let DefinitionTab = document.getElementById(\"DefinitionTab\")\r\n\r\n        let stats = document.getElementById(\"Stats\")\r\n        let rules = document.getElementById(\"Rules\")\r\n        let definition = document.getElementById(\"Definition\")    \r\n       \r\n        this.#addOnCLickEventListener(StatsTab, stats)\r\n        this.#addOnCLickEventListener(RulesTab, rules)\r\n        this.#addOnCLickEventListener(DefinitionTab, definition)\r\n\r\n    }\r\n\r\n    static #addOnCLickEventListener(tab, element){\r\n        tab.addEventListener(\"click\", function(){\r\n            if(element.style.display === \"none\"){\r\n                element.style.display = \"block\" \r\n            }\r\n            else\r\n            element.style.display = \"none\"\r\n        })\r\n    }\r\n    \r\n   static registerControls(){\r\n        let startButton = document.getElementById(\"Start\")\r\n        let stopButton = document.getElementById(\"Stop\") \r\n        let resetButton = document.getElementById(\"Reset\")\r\n    \r\n\r\n        startButton.addEventListener(\"click\", function(){\r\n            Organism.setHasStarted(true)\r\n            Test.test()\r\n        }, false)\r\n    \r\n        stopButton.addEventListener(\"click\", function(){\r\n            Organism.setStopped(true) \r\n        }, false)\r\n\r\n        resetButton.addEventListener(\"click\", function(){\r\n            location.reload()\r\n        })\r\n    \r\n    }\r\n\r\n    static initHtmlTable(array, size) {\r\n        let table = document.querySelector(\"table\");\r\n    \r\n        for(var row = 0; row < size; row++){\r\n            let r = table.insertRow()\r\n         \r\n            for(var col = 0; col < size; col++){\r\n                let cell = array[row][col]\r\n                let c = r.insertCell()\r\n                let span = document.createElement(\"span\")             \r\n                c.appendChild(span)\r\n                this.#setColorOfSpan(span, cell)\r\n           }\r\n        }\r\n    \r\n        this.setHtmlStatValues()\r\n    }\r\n    \r\n      static updateHtmlSpanInTable(array){\r\n        for(var row = 0; row < array.length; row++){\r\n          for(var col = 0; col < array.length; col++){\r\n            let cell = array[row][col]\r\n    \r\n            let table = document.querySelector(\"table\")\r\n            let td = table.rows[row].cells[col]\r\n            let span = td.childNodes[0]\r\n    \r\n            this.#setColorOfSpan(span, cell)\r\n          }\r\n        }\r\n      }\r\n    \r\n      static #setColorOfSpan(span, cell){\r\n        if(cell.getIsAlive()){ \r\n            span.classList.remove(...span.classList)\r\n            span.classList.add(\"greenCircle\")\r\n          }\r\n          else{\r\n            span.classList.remove(...span.classList)\r\n            span.classList.add(\"blackCircle\")\r\n          }\r\n    }\r\n    \r\n    static setHtmlStatValues(){\r\n\r\n        let underpopulation = document.getElementById(\"underpopulation\")\r\n        let overpopulation = document.getElementById(\"overpopulation\")\r\n        let repoduction = document.getElementById(\"reproduction\")\r\n        let currentLiving = document.getElementById(\"currentLivingCells\")\r\n        let currentDead = document.getElementById(\"currentDeadCells\")\r\n        let iteration = document.getElementById(\"iteration\")\r\n\r\n        this.#addingStats(underpopulation, \"Cell died of Underpopulation: \" + Organism.getFatalitiesOfUnderpopulation()) \r\n        this.#addingStats(overpopulation, \"Cell died of Overpopulation: \" + Organism.getFatalitiesOfOverpopulation()) \r\n        this.#addingStats(repoduction, \"Cells reproduced: \" +  Organism.getReproducedCells())\r\n        this.#addingStats(currentLiving, \"Current Living Cells: \" + Organism.getLivingCellPerIteration()) \r\n        this.#addingStats(currentDead, \"Current Dead Cells: \" + Organism.getDeadCellPerIteration())   \r\n        this.#addingStats(iteration, \"Cell Iteration: \" + Organism.getIteration())\r\n    }\r\n\r\n    static #addingStats(element, text){\r\n        element.textContent = text\r\n    }\r\n}\r\n","'use strict';\r\nimport HtmlHandler from './HtmlHandler';\r\nimport Organism from './organism';\r\n\r\n   \r\n    HtmlHandler.registerTabs()\r\n    HtmlHandler.registerControls()\r\n\r\n    \r\n    let table = Organism.initEvolution(10)\r\n    HtmlHandler.initHtmlTable(table, 10)\r\n\r\n    export default class Test {\r\n\r\n    static async test(){\r\n        let repetitionCounter = 0\r\n \r\n    \r\n    const sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\r\n    \r\n\r\n        console.log(Organism.getIsRepeating())\r\n\r\n\r\n        while(Organism.getIsAlive() && Organism.getHasStarted() && !Organism.getHasStopped() && !Organism.getIsStable() && !Organism.getIsRepeating()){   \r\n          let table = Organism.getTable()\r\n          \r\n          let x = Organism.getDeadCellPerIteration()\r\n          let y = Organism.getLivingCellPerIteration()\r\n          \r\n          Organism.validateStock(table)\r\n          Organism.evolveGeneration(table)\r\n          HtmlHandler.updateHtmlSpanInTable(table)\r\n          HtmlHandler.setHtmlStatValues()\r\n             \r\n          await sleep(Organism.getInterval())\r\n    \r\n          let x1 = Organism.getDeadCellPerIteration()\r\n          let y1 = Organism.getLivingCellPerIteration()  \r\n\r\n\r\n          if(x == x1 && y == y1){\r\n            ++repetitionCounter\r\n          }\r\n\r\n          if(repetitionCounter > 3){\r\n            Organism.setIsRepeating(true)\r\n          }\r\n        \r\n          Organism.setIteration()\r\n          Organism.resetIterationStatsCounter();\r\n\r\n\r\n\r\n\r\n        }  \r\n    }\r\n}\r\n\r\n\r\n"]}