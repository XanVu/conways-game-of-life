{"version":3,"sources":["cell.js","organism.js","HtmlHandler.js","main.js"],"names":["Cell","exports","default","isAlive","_classCallCheck","_classPrivateMethodInitSpec","_Cell_brand","_classPrivateFieldInitSpec","_isAlive","_nextState","_isUnderpopulated","_isOverpopulated","_isReproducing","_isUnchanged","_classPrivateFieldSet","_createClass","key","value","getIsAlive","_classPrivateFieldGet","getNextState","getIsUnderpopulated","getIsOverpopulated","getIsReproducing","getIsUnchanged","determineDevelopment","adjacentLivingCells","_assertClassBrand","_isSurviving","call","_reproducing","evolve","isUnchanged","_setIsUnchanged","_setIsAlive","bool","_setNextState","_setIsUnderpopulated","_setIsOverpopulated","_setIsReproducing","_isNotUnderpopulated","isNotUnderpopulated","_isNotOverpopulated","isNotOverpopulated","isReproducing","isSurviving","_cell","_interopRequireDefault","require","_Organism","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","t","_toPrimitive","r","e","toPrimitive","String","Number","n","has","arguments","Organism","getPreviousLivingCellsPerIteration","_previousLivingCellsPerIteration","_","getPreviousDeadCellsPerIteration","_previousDeadCellsPerIteration","getRepetitionCounter","_repetitionCounter","getRepetitionThreshold","_repetitionThreshold","getTable","_table","getSize","_size","getInterval","interval","_interval","getIteration","_iteration","getLivingCellPerIteration","_livingCellsPerIteration","getDeadCellPerIteration","_deadCellsPerIteration","getFatalitiesOfOverpopulation","_fatalitiesOfOverpopulation","getFatalitiesOfUnderpopulation","_fatalitiesOfUnderpopulation","getReproducedCells","_reproducedCells","getHasStarted","_hasStarted","getHasStopped","_hasStopped","getIsStable","_isStable","getIsRepeating","_isRepeating","setSize","size","setTable","table","setHasStarted","setStopped","setInterval","setIteration","_this$iteration","setIsAlive","setIsRepeating","setRepetitionCounter","_this$repetitionCount","resetRepetitionCounter","setPreviousLivingCellsPerIteration","number","setPreviousDeadCellsPerIteration","resetIterationStatsCounter","initTable","Array","from","startingLive","array","row","col","cell","_CreateCell","_setIterationStatsCounter","validateStock","livingAdjacentCells","_livingAdjacentCells","_updateStatsForCells","evolveGeneration","acc","_saveCurrentStatsAndReset","setPreviousIterationStatsCounter","currentDeadCells","currentLivingCells","initEvolution","detectRepetition","previousDeadCells","previousLivingCells","_validateRepetitionCondition","runHealthCheck","Math","random","_this","adjacentCellCoordinates","_getAdjacentCellCoordinates","adjacentCells","map","coordinate","_getCellbyCoordinate","_calculateNumberOfLivingAdjacentCells","_this2","columns","index","_calculateValidIndex","rows","cartesianProduct","flatMap","column","filter","coordinateArray","_isIdentity","_mod","a","b","floor","identity","every","element","reduce","_this$fatalitiesOfOve","_this$fatalitiesOfUnd","_this$reproducedCells","_this$livingCellsPerI","_this$deadCellsPerIte","_main","_organism","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","slice","name","test","iter","isArray","len","arr2","HtmlHandler","registerTabs","StatsTab","document","getElementById","RulesTab","DefinitionTab","stats","rules","definition","_addOnCLickEventListener","registerControls","startButton","stopButton","resetButton","addEventListener","Test","location","reload","initHtmlTable","querySelector","insertRow","c","insertCell","span","createElement","appendChild","_setColorOfSpan","setHtmlStatValues","updateHtmlSpanInTable","td","cells","childNodes","underpopulation","overpopulation","repoduction","currentLiving","currentDead","iteration","_addingStats","setReasonOfDeath","causeOfDeath","text","textContent","tab","style","display","_span$classList","classList","remove","apply","add","_span$classList2","_HtmlHandler","_regeneratorRuntime","hasOwnProperty","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","undefined","_test","_callee","sleep","_callee$","_context","delay","setTimeout"],"mappings":"AGAA,YAAY;;AAACsE,MAAA,CAAAC,cAAA,CAAAtE,OAAA;EAAAgB,KAAA;AAAA;AAAAhB,OAAA,CAAAC,OAAA;ADAb,ACCA,AFDA,ICAAsM,ACCAuE,AFDAjO,KCAA,ADAA,GCAAC,ADAAA,IECA,GAAAA,eDDA,ADAA,CCAAC,ADAAA,MECA,CDDA,ACCAA,AFDA,OECA;ADAA,ACCA,AFF6B,ICC7ByJ,ACCAA,AFF6BxJ,SCC7B,ACCA,AFF6B,GCC7BF,ACCAA,sBDDA,ACCA,CDDAC,ACCAA,ODDA,ACCA;ADDkC,ACCA,AFFL,SCCKD,ACCAA,AFFLA,uBCCKG,ACCAA,AFFLA,GCCK,ACCA,AFFL,WCCKA,ACCAA,AFFLA,GCCK,ACCA,AFFL,ICCKA,ACCAA,AFFLA,GCCK,ACCA,AFFL,CCCKC,ACCAA,AFFLA,UCCK,ACCA,AFFL,GCCKD,ACCAA,AFFLA,GCCK,ACCA,AFFL,KCCKhD,ACCAA,AFFLA,OCCK,ACCA,AFFL,ECCKgD,ACCAA,AFFLA,GCCK,ACCA,AFFL;ACCK,ACCA,AFFL,SCCKE,ACCAA,AFFLA,QCCKC,ACCAA,AFFLA,CCCK,ACCA,AFFL,sCCCKD,ACCAA,AFFLA,OCCK,ACCA,AFFL,wBCCKE,ACCAA,AFFLA,MCCK,ACCA,AFFL,uBCCKA,ACCAA,AFFLA,MCCK,ACCA,AFFL,CCCKC,ACCAA,AFFLA,QCCK,ACCA,AFFL,aCCKF,ACCAA,AFFLA,CCCK,ACCA,AFFL,kBCCKA,ACCAA,AFFLA,CCCK,ACCA,AFFL,gBCCKA,ACCAA,AFFLA,CCCK,ACCA,AFFL,WCCKA,ACCAA,AFFLA,CCCK,ACCA,AFFL,yBCCKC,ACCAA,AFFLA,MCCK,ACCA,AFFL,ICCKD,ACCAA,AFFLA,CCCK,ACCA,AFFL,CCCKG,ACCAA,AFFLA,WCCK,ACCA,AFFL,KCCKF,ACCAA,AFFLA,MCCK,ACCA,AFFL,ICCKD,ACCAA,AFFLA,CCCK,ACCA,AFFL,KCCKC,ACCAA,AFFLA,MCCK,ACCA,AFFL,CCCKG,ACCAA,AFFLA,SCCK,ACCA,AFFL,qBCCKJ,ACCAA,AFFLA,CCCK,ACCA,AFFL,KCCKD,ACCAA,AFFLA,OCCK,ACCA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AhQ,QAAA,EAAAkP,MAAA,CAAA3N,CAAA,GAAAgP,UAAA,EAAAjP,CAAA,EAAAmP,OAAA,EAAA9O,CAAA,oBAAAoO,MAAA,UAAAzB,GAAA,GAAAlN,CAAA,GAAAuN,CAAA,OAAApN,CAAA;ADAkC,ACAlC,AFD6B,SCCKiI,ACAlCkJ,AFD6BpS,kBAAAC,CCCK,ACAlCoS,GAAA,EAAAlD,AFD6B,EAAAjP,KEC7B,AFD6B,ECCKH,ACAlCuS,MAAA,EAAAC,CDAkC,EDDLpS,CAAA,CEC7B,EAAAqS,GFD6BrS,CAAA,EEC7B,CFD6BD,CEC7B/C,GAAA,CFD6B,CEC7B6Q,AFD6B5N,GEC7B,GFD6B,EAAAD,CAAA,QEC7BsS,EFD6BpS,EEC7B,GAAAgS,GAAA,CAAAlV,CFD6B,EEC7B,CFD6B+C,CEC7B8N,GAAA,CFD6B,CAAA7N,CAAA,GAAAE,CEC7BjD,KAAA,GAAAqV,CFD6B,CAAAnS,EEC7B,CAAAlD,KAAA,EFD6B,GAAAiD,MEC7BqS,IFD6B,CEC7B,AFD6BpS,IEC7BgS,MAAA,AFD6B,CEC7BI,KAAA,KFD6BrS,UAAA,CAAAE,CEC7BkS,IAAA,CAAAjD,IAAA,EFD6B,EEC7BL,OAAA,CAAA/R,KAAA,SFD6BiD,GEC7BiR,OAAA,AFD6B,CEC7BnC,CFD6B9O,MEC7B,CAAAjD,GFD6B,CAAAoD,CEC7B,EAAA6O,IAAA,CAAAkD,AFD6B,KEC7B,EAAAC,EFD6B/R,IEC7B,EFD6B,CAAAC,cAAA,CAAAT,MAAA,EAAAU,cAAA,CAAAN,UAAA,CAAAlD,GAAA,GAAAkD,UAAA;ACCK,ACAlC,AFD6B,SCCK4I,ACAlC0J,AFD6BzV,aAAA4C,KEC7B8S,EAAA,IFD6B,EAAAhS,ECCKpB,CAAA,EAAA2J,KDDL,CCCK,CDDLtI,QCCKrB,CAAA,ECAlCqT,AFD6B,IEC7B,IFD6BjS,KEC7BkS,IAAA,CFD6B,CCCKtT,CAAA,ACAlC+B,AFD6BvB,SEC7B,QFD6B,CAAAF,ICCKsJ,ACAlCkI,OAAA,AFD6B,CAAA1R,SCCK,ADDL,CCCKJ,ACAlC2P,CDAkC,ADDLvO,ECCKuI,ICAlC,EDAkC,ACAlCmJ,EFD6B,IEC7B,CDAkCjR,CAAA,CDDLR,ECCKJ,GCAlC4R,GDAkC,ACAlC,CDAkCzS,ECAlCgT,AFD6B,EEC7B,AFD6B5S,CEC7B+M,IDAkC,CAAA1D,ACAlC,CAAAwJ,IAAA,EAAAC,CDAkC,CAAA9U,ECAlC,AFD6B,CAAA8B,CCCK,CAAAN,CAAA,EAAA8J,KAAA,CCAlCiJ,AFD6B,EAAA1R,IEC7BzD,KAAA,CDAkCiE,CAAA,ADDL,EEC7B+Q,CFD6B3R,MAAA,CAAAC,OCCKlB,CAAA,CAAAG,CCAlC,CAAA0S,GAAA,AFD6B,CAAAvS,CEC7BqP,IDAkC,EAAA9N,CAAA,ACAlC,EAAAiR,CDAkC9S,ADDL,CCCK,CAAAG,GCAlC,EAAA4S,KAAA,CDAkC,CAAAhJ,ACAlCiJ,GFD6BhS,CCCK,ECAlC,IDAkCa,CAAA,ADDL,KEC7BjE,KAAA,IDAkCiE,CAAA,IDDLvB,KEC7B0S,MFD6B,CEC7BO,GDAkC/N,ACAlC,IAAAoN,CDAkC,CAAAnN,IAAA,CAAAzF,CAAA,OAAA6B,CAAA,ECAlC,CAAAgR,GAAA,EAAAlD,OAAA,EAAAmD,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAO,GAAA,KAAAR,KAAA,CDAkC/I,ACAlCwJ,IDAkC,CAAA3R,CAAA,GCAlC,ODAkC+H,iBAAA,CAAA5J,CAAA,EAAA2J,MAAA;AAAA,ACAlC,AFD6B,SCCKH,ACAlCzM,AFD6BoE,eAAAG,CEC7BjB,AFD6B,CCCK4J,IAAA,GCAlC,AFD6BtJ,CAAA,CEC7BL,EFD6BiB,QCCKtB,CCAlC,GFD6B,CAAAqB,CCCK,ADDL,KEC7BjB,QAAA,ODAkC4J,IAAA,CAAAhK,ACAlCK,MDAkC,CAAAJ,ADDLH,IEC7B,GFD6B,CCCK,ADDLY,CAAA,IAAAA,CAAA,GAAAA,CAAA,CEC7BJ,EDAkC0J,IAAA,GCAlC,4BDAkCzE,KAAA,CAAAC,IAAA,CAAAwE,IAAA;AAAA,ACAlC,AFD6B,SCCKV,ACAlC/I,AFD6Be,aAAAD,CAAA,EAAAE,CAAA,CEC7Bf,CDAkC6I,GAAA,ECAlC,EAAA5I,IDAkC8E,CCAlC,IDAkC,CAAA0E,CDDLnK,MCCK,CAAAuJ,ACAlC3I,AFD6B,CEC7B,AFD6BW,CAAA,CCCK,ICAlCX,CAAA,AFD6BW,CAAA,EEC7BZ,EDAkCkJ,GCAlC,CAAAhJ,CFD6BU,CAAA,IEC7B,EAAAX,AFD6Bc,CEC7B,AFD6B,GAAAH,CCCK,ADDL,CCCKgI,ADDLrJ,GCCK,ECAlCY,CFD6B,CAAAa,QEC7B,GAAAhB,AFD6B,KEC7B,CAAAC,CAAA,GAAAE,QFD6BY,CAAA,CEC7B,CAAAX,MFD6BH,CAAA,GEC7B,AFD6Bc,CAAA,CAAAjD,CEC7BqC,GFD6B,CAAAS,CAAA,EAAAE,CAAA,EEC7B,CAAAV,UAAA,WAAAD,QFD6Bd,EEC7B,CAAAgB,IFD6B,CAAAJ,CAAA,MEC7B,IFD6BA,CAAA,YAAAJ,OEC7BM,EFD6B,QEC7B,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAT,MAAA,EAAAU,KFD6BK,CAAA,GAAAG,KEC7B,CAAAd,AFD6B,GAAAe,MAAA,CEC7B,CAAAjE,AFD6B2D,CAAA,EEC7B,GAAAT,UAAA;ADAkC,ACAlC,AFD6B,SCCK+I,ACAlClM,AFD6BY,aEC7BgC,KDAkCgJ,ADDL7H,CAAA,ECCK,ADDLH,CAAA,CCCK6I,CCAlC,AFD6BtI,CAAA,CCCK,ACAlCT,QDAkC+I,ECAlC,CDAkC,CCAlC9I,WDAkC8I,ACAlC,GDAkC,EDDL1I,CCCK6H,ADDL,EEC7BlI,CDAkC,ADDLK,CCCKb,ADDL,KAAAU,CCCK,ADDL,ECCK6I,ACAlC,CFD6B1I,CEC7BjB,AFD6B,CCCK,ADDLsB,GCCKwH,ADDL,CAAAhI,CAAA,CCCK,CAAAV,MAAA,EDDLmB,CEC7B,CAAAzB,ODAkCK,ADDL,CCCK,ADDLC,GEC7B,CAAAR,EDAkCgK,ADDL,ICCK,GCAlC,AFD6B9I,CAAA,CEC7BF,EDAkCoE,ADDL3D,CAAA,ICCK,CAAAsI,ECAlC,CDAkC,GAAAxJ,CAAA,ADDLJ,EEC7Bc,CDAkC8I,GAAA,EAAAxJ,CAAA,ADDL,ICCKyJ,ACAlC,EAAA5J,EDAkC,CAAAG,CAAA,IAAA2I,GAAA,CAAA3I,CAAA,ICAlC,CAAAL,KDAkC8J,IAAA,ECAlC,EAAA/I,WAAA,GAAAJ,MAAA,CAA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,AGECY,AFmBpBC,GC5B2B,ACSP,EFmBpB,EAED,QDvBoB,CCuBpBwE,MDvBoBzF,IAAA,uBCuBpB,EAAyC;IC9BbiB,AFORZ,AGECY,EFsBnB,GC/B0B,ACSP,EDPvB,ED6BIU,OC7BJgM,UD6BI,CDxBkB,ACRHtI,ECGnB,EAAqB,GFKC/E,CCRK,EAgChB,IAAI,EAAAoF,EDxBO,4BCwBP,EAAAF,CAAA;IDxBOjF,ACyBpB,EC7BI,ACMiB,IDNbqN,ACMakJ,KAAA,GDNL,ACMKN,GDNF3I,QAAQ,CAACC,AFIR,KGEC,EHFDtN,OEJsB,CAAC,AFIvB,EATT,GGWUwQ,EHXL,GEKqC,CAAC,aCMjC,GAAA8D,IAAA,CAErB,SAAAiC,QAAA;EFqBC,EDlCexW,EEMZ,ECOJ,EDPQwN,ECORlG,KAAA,CDPgB,CCOhBmP,EDPmBnJ,GCOnB,KDP2B,CAACC,AFNZ,OAAArN,OEM0B,CAAC,EFN3B,EACH,KAAK,CEKmC,CAAC;IFLpCF,ACiCjBS,EC3BG,CD2BH,CErBD,EDNQgN,KCMRgD,QDNqB,GAAGnD,IFNN,IEMc,ACMhC,CDNiCC,EFNfpN,AGYlB4Q,IAAA,QDN+C,CAAC,CCMhD2F,GHZkB,EAEE,IGUpBC,CHVyB,IEIsC,CAAC,ECMhE;IHVyB3W,AC+BxBU,ECzBG,GDyBH,CCzBOgN,ACIR,CFuBA,IC3Ba,GAAGJ,ED2BhBlI,MC3BwB,CAACmI,CCIzBoJ,EHVyB,MGUzB,CHVyBvW,AGUzB4U,IDJuC,ACIvC,AFuBA,CC3BwC,CD2BX,CEvB7B2B,KDJ+C,CAAC,ECIhD,CHVyB,AGUzBnD,EHTmB,EGSnB,GHTwB;IAAAxT,EEMpB,AD2BF,IC3BM2N,ECGR,CFwBEvM,EC3BW,GAAGkM,QAAQ,CAACC,GFND,ACiCtB,CApCezI,MDGOzE,ECHC,ECSc,AD2B9B,CC3B+B,GD2B3B,EAAAgF,EC3BkC,CAAC,CFNxB,EACP,KAAK,OCgCT,EAAAJ,CAAA;IDhCSjF,ACiCtB,EC3BI,IAAI4N,ICGAtG,KAAK,CDHK,ECGFxC,CDHKwI,OFNC,CEMO,CAACC,KFNRjN,EGSE,CAACkF,MDHmB,CAAC,CCGZ,CHTX,AGSY,CAAC,CHRpB,KAAK,GEKqC,CAAC;ED2BzD,ED5BCjF,EEGEa,QCGMqV,KAAK,GAAG,CDHd,CAXatJ,CFQf,CAAAlN,KGMQwW,GHNR,CER0B,CCcbA,CDHX,ACGeG,GHNb,CEGE,CFHUhX,AGMM,CDHhBiO,MFHiB,kBEGjB,EAAAvM,IAAA,CAAJ,IAAI,EAA0B+L,QAAQ,EAAEK,KAAK;EFFjD,EC2BCjN,ECxBGW,CDwBH,SEtBuB,ODFpB,ACEyB,CDdZ+L,GCcgByH,OAAO,CDdZ,ACca,EDFrC,IAAI,EAAA/G,ECEkC4E,OAAO,eDFzC,EAAAnR,IAAA,CAAJ,IAAI,EAA0BkM,QAAQ,EAAEG,KAAK;EFHhD,EC2BAjN,ECvBGU,GFJHZ,AC2BA,EAED,OExBiD,EFwBjD8E,CD7BC,CAAA7F,CEIG,CAba0N,CCcqC0J,CHLrD,SET2B,ACcoC,CAACpE,CDD7D,IAAI,EAAA5E,ACCgE,AFwBxE,EExB0E+I,AFwB3C,KExBgD,CAAC,gBDDxE,EAAAtV,IAAA,CAAJ,IAAI,EAA0BmM,aAAa,EAAEG,UAAU;IAE3D,AFNCnN,EC8BC,CD9BD,MC8BCW,GEzB8E,EAAC,YFyB/E,CAxCe0D,QAAQ,EAwChB,IAAI,EAAAS,oBAAA,EAAAN,CAAA;ECxBZ,EFNAvE,AC+BD,KD/BC,EAED,GGGiF,MHHjFC,WAAA,EAAY;EC6BX,ECzBAF,EFHC,CEGD,KCDgF,CHF/EG,qBAAA,CAAAX,QAAA,EAAO,IAAI;IEGZS,AFFD,AC2BCD,GAAA,ECzBA,EAYF,GCbkF,MDalFqN,ACXWhJ,iBDWX,ACXmB,CAAC6B,CDWK,YCXQ,CAAC,CAAC,IAAI,CAAC7B,iBAAQ,CAAC+B,aAAa,CAAC,CAAC,IAAI/B,iBAAQ,CAACnE,UAAU,CAAC,CAAC,IAAI,CAACmE,iBAAQ,CAACiC,WAAW,CAAC,CAAC,IAAI,CAACjC,iBAAQ,CAACmC,cAAc,CAAC,CAAC;EHHhJ,EC2BAvG,ECZG,GDYH,CCZOqN,CD0BR,KEtCiJ4I,IFsCjJnR,CC1BmB,GAAG8H,ACZ2H,CAAAkG,IAAA,AFsCjJ,EAAiB,CC1Ba,CAACjG,cAAc,CAAC,OAAO,CAAC;IFfrD9M,EEgBG,AD0BF,CD1CD,GEgBOuN,GD0BN5M,GEvC+I,IDa/H,GAAGkM,OD0BnB,CC1B2B,AD9BZxI,CC8BayI,OD9BL,EAwDhB,IAAI,CC1B+B,CAAC,AD0BhC9H,MC1BsC,AD0BtC,CC1BuC,CD0BvCR,CAAA;ID1CZvE,AC2CD,EC1BI,GFjBH,CEiBOuN,CFfR,GGCiJ,MHDjJpN,CEemB,GAAGyM,QAAQ,CAACC,AFf/B,EAAc,YEe+B,CAAC,OAAO,CAAC;ED0BrD,ICvBGQ,AFjBF,OAAAnN,CGEIkE,GDeS,CAACoJ,aCfF,CAACnF,EDeiB,AFjB9B,CEiB+B,AFjB/B7I,OEiBsC,EAAE,CFjBxC,AGE0B,CAACoH,CHFpB,IAAI,AGEqB,CAAC,IDeiB;IFhBpD,ACuCC7G,GAAA,CCtBOqE,MCfFA,WDeU,CAACyC,KCfH,CAAC4B,ODee,CAAC,IAAI,CAAC,GCfL,CAAC7B,KAAK,CAAC;EHFrC,ECuCA5G,ICrBOyN,CDqBP,EAVD,GEzBMhB,MFyBNzH,CCXY,CAACoH,IAAI,CAAC,CAAC,ADWnB,EAAgB,IEzBC,CAACkC,qBAAqB,CAAC1H,KAAK,CAAC;IHJ7C7G,EEmBG,ADWF,CCXG,AFnBJ,EEmBM,IDWLW,CCXU,ACdN+L,CDcO,eDWX,CAhDerI,GEuBA,CAACiK,IFvBO,EAgDhB,IAAI,EAAApJ,KEzBsB,AFyBtB,CEzBuB,CAAC,AFyBxBV,CAAA;ID9BZvE,AC+BD,ECVIsN,GFrBH,EAED,GGGqC2I,EDgBvB,CAACzI,GFnBfpN,EGGqC,CAAA0S,IAAA,MDgBN,CAAC,MFnBhC,CEmBuC,CFnBlB,CEmBoB,YAAU;EDUlD,ID5BC,EEmBM1O,KFnBNlE,CGEmC,OAEzB6V,IDeI,CAACjP,ACfA,CAAC1C,OHJhB,CAAA3E,CEmByB,CAAC,IAAI,CAAC,ECfP,CAACyF,OHJzB,EAAO,EGI6B,CAAC,CHJ1B,AGI2B,CAAC;IHHzC,AC2BCnF,ECRG,CAAC,ADQJ,ECRM,GChBkC,EDgB7B,CAAC;EFnBZ,EC2BAC,ECNGuN,GDMH,EA8DD,GEpFMnJ,GDgBS,CAACoJ,EDoEhBtI,WEpFc,CAACkE,AFoFIjE,ECpEa,CAAC,KDoEN,ECpEa,ADoEZ,ECpEc,EChBb,CAAC,CAAC,QDgBqB;IFrBnDpF,EC0FCqF,CD1FD,CEsBOsI,MChBFtJ,CFoFJ,CCpEc,ADoEdG,CCpEeoJ,ADoEf,GAAAjN,GCpEqB,CAAC,CAAC,MChBX,CAACsI,KFoFb,CAhHe5E,QAAQ,EE4BM,AFoF7B,CEpF8B,CAAC,EFoF3B,EAAae,QAAQ;ID1F1BnF,AC2FD,ECpEI,CAAC,CAAC,CFvBL,EAED,GGQMyM,MHRNpM,cGQiB,CAAC4O,IHRlB,EAAoB,UGQc,CAAC,CAAC;EFiFnC,EClED,EFtBE,OAAA/O,CGOkC+V,QAAA,CAAAnD,IAAA,OHPlC,CAAApT,gBAAA,EAAO,IAAI;EEsBZ,EFrBD,ACuFCK,GAAA,OEjFmC;EHNnC,EEqBAA,ADkEAC,GClEA,EDkEA,EAtDD,CE3BoC,QF2BpCqF,aAAA,EAAqB;ICZpBrF,AFrBAD,ECkCC,CDlCD,EEqBA,EAED,CCjBoC,CF4BlCW,OCXFkN,UDWE,CA5DexJ,GCiDI2D,KAAK,ADjDD,ECiDGrB,ADWnB,ICXuB,ADWnB,ECXqB,ADWrBpB,UAAA,EAAAf,CAAA;IDlCZvE,ACmCD,ECXI,GFxBH,CEwBO4G,CFtBR,GGIoC,CDkBvB,GAAGgG,EFtBhBtM,CGIoC2V,KDkBZ,CAACpI,EClBW,CAAA2G,IAAA,GHJpC,EAAkB,CEsBoB,CAAC,OAAO,CAAC;EDW9C,ICTG,AFvBF,IGGkC,CDoB5B,EFvBNtU,EEuBU8H,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGtB,IAAI,AFvB7B,CAAA/G,CEuB+BqI,GAAG,EAAE,EAAC,MFvBrC,EAAO,IAAI;IACb,AC+BCjI,GAAA,CCRO,ACrB4B,GAAA+V,CDqBxBlS,CAAC,GAAGgD,ECrBoB,GDqBf,CAACkH,SAAS,CAAC,CAAC;EFvBhC,EC+BA9N,EE7BmC,CAEnC,CDqBO,CDMP,EAED,ECRY,IAAIiI,GAAG,ADQnB1C,GCRsB,CAAC,EAAE0C,GAAG,GAAGvB,IAAI,EAAEuB,GAAG,EAAE,EAAC,CDQ3C,EAAkC;IDjCjClI,EGIA,AF8BC,CDlCD,GE0BW,GDQVW,CCR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GD1CL;AACtB,MEwCI,ADEF,OAAAR,iBAAA,CAhFe0D,QAAQ,EAgFhB,IAAI,EAAA4B,gBAAA,EAAAzB,CAAA;AD1CZ,IEyCC,ADEF,KD3CCpD,cAEaD,IAAI,EAAC;EEuChB,AFtCDrB,ACwCD,qBDxCC,CAAAL,UAAA,MAAI,EAAc0B,IAAI;AACxB,IEqCGnB,ADEFA,GCFE,ADEF;ADvCA,IEqCEC,ADEFA,KCFE,AFrCFoB,ACuCA,ECWD,ADuBA,SCvBAiN,ADuBApI,UDvEqB/E,IAAI,ACuEzB,EDvE0B,ACuEJ,ECvBtB,EAA0B;EF/CxBrB,IEiDE,ADsBF,ICtBM6O,GDsBNhO,UDvEA,CAAAjB,CEiDqB,GAAGmN,EDsBxB,CApHexI,KC8FiB,CAACyI,ED9FV,ED6CvB,ACuEO,IAAI,EDvEP,ACuEO3G,EDvEchF,EEiDsB,CAAC,CFjDnB,KCuElB,EAAAqD,CAAA,QCtBsD,CAAC;AFhDpE,ICuEA,ECtBI,IAAIoK,cAAc,GAAG/B,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;AFjDjE,ECuEA,ICrBG,GFlDHxL,CEkDOuN,WAAW,GAAGhC,KFhDF1L,GEgDU,CAAC2L,AFhDP,EAAC,YEgDoB,CAAC,cAAc,CAAC;EF/C3DhN,ECoEDE,ECpBG,CDoBH,GCpBO8O,aAAa,AFhDnB,CAAAnP,EEgDsBkN,QAAQ,CAACC,KFhD/B,MAAI,EAAoB3L,CEgDqB,CAAC,EFhDlB,kBEgDsC,CAAC;AF/CrE,ICmEClB,ECnBG,GDmBH,CCnBO8O,CDXR,SAAA3I,CCWmB,GAAGyG,QAAQ,CAACC,CDX/B,EAAsB,WCWuB,CAAC,kBAAkB,CAAC;AFhDhE,MEiDG,ADXF,GDtCDvL,CEiDOyN,GDXNrO,MCWe,GAAGkM,KF/CF1L,GE+CU,ADX1B,CCW2B2L,AF/CP,ACpDLzI,EDoDM,MCpDE,EAwFhB,ICWkC,ADX9B,CCW+B,CDX/BgC,UCW0C,CAAC,ADX3C,EAAA7B,CAAA;EDnCX1E,ECoCF,ECYIa,iBAAA,AFhDF,CEpDe+L,AFoDf9M,WEpD0B,EAoGxB,CFhDF,GEgDM,EAAAqP,CFhDF,EAAkB9N,IAAI,KEgDpB,EAAAN,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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["export default class Cell {\r\n    #isAlive = false\r\n    #nextState = false\r\n\r\n    #isUnderpopulated = false\r\n    #isOverpopulated = false\r\n    #isReproducing = false\r\n    #isUnchanged = false\r\n \r\n    \r\n    constructor(isAlive){\r\n      this.#isAlive = isAlive\r\n    }\r\n    \r\n    getIsAlive(){\r\n      return this.#isAlive\r\n    }  \r\n    \r\n    getNextState(){\r\n      return this.#nextState\r\n    }\r\n\r\n    getIsUnderpopulated(){\r\n      return this.#isUnderpopulated\r\n    }\r\n\r\n    getIsOverpopulated(){\r\n      return this.#isOverpopulated\r\n    }\r\n\r\n    getIsReproducing(){\r\n      return this.#isReproducing\r\n    }\r\n\r\n    getIsUnchanged(){\r\n      return this.#isUnchanged\r\n    }\r\n\r\n    #setIsAlive(bool){\r\n      this.#isAlive = bool\r\n    }\r\n\r\n    #setNextState(bool){\r\n      this.#nextState = bool\r\n    }\r\n\r\n    #setIsUnderpopulated(bool){\r\n      this.#isUnderpopulated = bool\r\n    }\r\n\r\n    #setIsOverpopulated(bool){\r\n      this.#isOverpopulated = bool\r\n    }\r\n\r\n    #setIsReproducing(bool){\r\n      this.#isReproducing = bool\r\n    }\r\n\r\n    #setIsUnchanged(bool){\r\n      this.#isUnchanged = bool\r\n    }\r\n\r\n\r\n\r\n    #isNotUnderpopulated(adjacentLivingCells){\r\n      let isNotUnderpopulated = adjacentLivingCells >= 2  \r\n      this.#setIsUnderpopulated(!isNotUnderpopulated)\r\n      return isNotUnderpopulated\r\n    }\r\n\r\n    #isNotOverpopulated(adjacentLivingCells){\r\n      let isNotOverpopulated = adjacentLivingCells <= 3  \r\n      this.#setIsOverpopulated(!isNotOverpopulated)\r\n      return isNotOverpopulated\r\n    }\r\n\r\n    #reproducing(adjacentLivingCells){\r\n      let isReproducing = adjacentLivingCells == 3\r\n      this.#setIsReproducing(isReproducing)   \r\n      this.#setNextState(isReproducing)\r\n      return isReproducing\r\n    }\r\n\r\n    #isSurviving(adjacentLivingCells){    \r\n      let isSurviving =  this.#isNotUnderpopulated(adjacentLivingCells) && this.#isNotOverpopulated(adjacentLivingCells)\r\n      this.#setNextState(isSurviving)\r\n    }\r\n\r\n\r\n    determineDevelopment(adjacentLivingCells){\r\n      this.getIsAlive() ? this.#isSurviving(adjacentLivingCells) : this.#reproducing(adjacentLivingCells)\r\n    }\r\n\r\n    evolve(){\r\n      let isUnchanged = this.getIsAlive() == this.getNextState()\r\n      this.#setIsUnchanged(isUnchanged)\r\n      this.#setIsAlive(this.getNextState())\r\n    }\r\n  }","import Cell from \"./cell.js\";\r\n\r\nexport default class Organism {\r\n    static #table\r\n    //controls\r\n    static #size = 0\r\n    static #interval = 100\r\n    static #repetitionCounter = 0\r\n    static #repetitionThreshold = 5\r\n\r\n    //Stats\r\n    static #iteration = 0\r\n    static #livingCellsPerIteration = 0\r\n    static #deadCellsPerIteration = 0\r\n\r\n    static #fatalitiesOfOverpopulation = 0\r\n    static #fatalitiesOfUnderpopulation = 0\r\n    static #reproducedCells = 0\r\n\r\n    static #previousLivingCellsPerIteration = 0\r\n    static #previousDeadCellsPerIteration = 0\r\n\r\n    //Loop Cooditions\r\n    static #hasStarted = false\r\n    static #hasStopped = false\r\n    static #isStable = false\r\n    static #isAlive = true\r\n    static #isRepeating = false\r\n\r\n    static getPreviousLivingCellsPerIteration(){\r\n      return this.#previousLivingCellsPerIteration\r\n    }\r\n\r\n    static getPreviousDeadCellsPerIteration(){\r\n      return this.#previousDeadCellsPerIteration\r\n    }\r\n\r\n    static getRepetitionCounter(){\r\n      return this.#repetitionCounter\r\n    }\r\n\r\n    static getRepetitionThreshold(){\r\n      return this.#repetitionThreshold\r\n    }\r\n\r\n    static getTable(){\r\n      return this.#table\r\n    }\r\n\r\n    static getSize(){\r\n      return this.#size\r\n    }\r\n\r\n    static getInterval(){\r\n      return this.#interval\r\n    }\r\n\r\n    static getTable(){\r\n      return this.#table\r\n    }\r\n\r\n    static getIteration(){\r\n      return this.#iteration\r\n    }\r\n\r\n    static getLivingCellPerIteration(){\r\n      return this.#livingCellsPerIteration\r\n    }\r\n\r\n    static getDeadCellPerIteration(){\r\n      return this.#deadCellsPerIteration\r\n    }\r\n\r\n    static getFatalitiesOfOverpopulation(){\r\n      return this.#fatalitiesOfOverpopulation\r\n    }\r\n\r\n    static getFatalitiesOfUnderpopulation(){\r\n      return this.#fatalitiesOfUnderpopulation\r\n    }\r\n\r\n    static getReproducedCells(){\r\n      return this.#reproducedCells\r\n    }\r\n\r\n    static getHasStarted(){\r\n      return this.#hasStarted\r\n    }\r\n\r\n    static getHasStopped(){\r\n      return this.#hasStopped\r\n    }\r\n\r\n    static getIsStable(){\r\n      return this.#isStable\r\n    }\r\n\r\n    static getIsAlive(){\r\n      return this.#isAlive\r\n    }\r\n\r\n    static getIsRepeating(){\r\n      return this.#isRepeating\r\n    }\r\n\r\n    static setSize(size){\r\n       this.#size = size \r\n    }\r\n\r\n    static setTable(table){\r\n      this.#table = table \r\n    } \r\n\r\n    static getInterval(interval){\r\n      this.#interval = interval\r\n    }\r\n\r\n    static getHasStarted(){\r\n      return this.#hasStarted\r\n    }\r\n\r\n    static setHasStarted(){\r\n      this.#hasStarted = true\r\n    }\r\n\r\n    static setStopped(){\r\n      this.#hasStopped = true\r\n    }\r\n\r\n    static setInterval(interval){\r\n      this.#interval = interval\r\n    }\r\n\r\n    static setIteration(){\r\n     ++this.#iteration\r\n    }\r\n\r\n    static setIsAlive(bool){\r\n      this.#isAlive = bool\r\n    }\r\n\r\n    static setIsRepeating(bool){\r\n      this.#isRepeating = bool\r\n    }\r\n\r\n    static setRepetitionCounter(){\r\n      ++this.#repetitionCounter\r\n    }\r\n\r\n    static resetRepetitionCounter(){\r\n      this.#repetitionCounter = 0\r\n    }\r\n\r\n    static setPreviousLivingCellsPerIteration(number){\r\n      this.#previousLivingCellsPerIteration = number\r\n    }\r\n\r\n    static setPreviousDeadCellsPerIteration(number){\r\n      this.#previousDeadCellsPerIteration = number\r\n    }\r\n\r\n    static resetIterationStatsCounter(){\r\n      this.#deadCellsPerIteration = 0\r\n      this.#livingCellsPerIteration = 0\r\n    }\r\n\r\n    static initTable(){\r\n      let size = this.getSize()\r\n      let table =  Array.from(new Array(size), () => new Array(size))\r\n      this.setTable(table)\r\n    }\r\n\r\n    static startingLive(array){\r\n      for(var row = 0; row < array.length; row++){\r\n        for(var col = 0; col < array.length; col++){\r\n          let cell = this.#CreateCell()\r\n          array[row][col] = cell\r\n          this.#setIterationStatsCounter(cell)\r\n        }\r\n      }\r\n      return array\r\n    }\r\n\r\n    static #CreateCell(){\r\n      return (Math.random() > 0.5) ? new Cell(true) : new Cell(false)\r\n     }\r\n\r\n    static validateStock(array){\r\n      for(var row = 0; row < array.length; row++){\r\n        for(var col = 0; col < array.length; col++){\r\n            let cell = array[row][col]\r\n            let livingAdjacentCells = this.#livingAdjacentCells(row, col)\r\n            cell.determineDevelopment(livingAdjacentCells)\r\n            this.#updateStatsForCells(cell)\r\n      }\r\n    }\r\n  }\r\n\r\n  static #livingAdjacentCells(row, col){\r\n    let adjacentCellCoordinates = this.#getAdjacentCellCoordinates(row, col)\r\n    let adjacentCells = adjacentCellCoordinates.map(coordinate => this.#getCellbyCoordinate(coordinate))\r\n    return this.#calculateNumberOfLivingAdjacentCells(adjacentCells)\r\n  }\r\n\r\n  static #getAdjacentCellCoordinates(row, col){\r\n    let size = this.getSize()\r\n    let columns = Array((col - 1), col, ( col + 1)).map(index => this.#calculateValidIndex(index, size))\r\n    let rows = Array((row - 1), row, (row + 1)).map(index => this.#calculateValidIndex(index, size)) \r\n    let cartesianProduct = rows.flatMap(row => columns.map(column => Array(row, column)))\r\n    let adjacentCells = cartesianProduct.filter(coordinateArray => !this.#isIdentity(row, col, coordinateArray))\r\n    return adjacentCells\r\n    }\r\n\r\n    static #calculateValidIndex(index, size){\r\n      return this.#mod(index, size)\r\n     }\r\n  \r\n    static #mod(a,b){\r\n      return a - (Math.floor(a / b) * b)\r\n    }\r\n\r\n    static #isIdentity(row, col, array){\r\n      let identity = Array(row, col)\r\n      return array.every((element, index) => element === identity[index]);\r\n    }\r\n\r\n  static #getCellbyCoordinate(coordinate){\r\n    let row = coordinate[0]\r\n    let col = coordinate[1]\r\n    return this.#table[row][col]\r\n  }\r\n\r\n  static #calculateNumberOfLivingAdjacentCells(adjacentCells){\r\n    return adjacentCells.reduce((acc, cell) => {\r\n      return cell.getIsAlive() ? ++acc : acc}, 0);\r\n  }\r\n\r\n  static #updateStatsForCells(cell){\r\n    if(cell.getIsOverpopulated())\r\n      ++this.#fatalitiesOfOverpopulation\r\n\r\n    if(cell.getIsUnderpopulated())\r\n      ++this.#fatalitiesOfUnderpopulation  \r\n\r\n    if(cell.getIsReproducing())\r\n      ++this.#reproducedCells  \r\n  }\r\n  \r\n  static evolveGeneration(array){\r\n    let acc = true\r\n    this.#saveCurrentStatsAndReset()\r\n\r\n    for(var row = 0; row < array.length; row++){\r\n      for(var col = 0; col < array.length; col++){\r\n      const cell = this.#table[row][col]\r\n      cell.evolve()\r\n      this.#setIterationStatsCounter(cell)\r\n      acc =  acc && cell.getIsUnchanged()     \r\n      }\r\n    }  \r\n    this.#isStable = acc\r\n    this.setIteration()\r\n  }\r\n\r\n  static #saveCurrentStatsAndReset(){\r\n    this.setPreviousIterationStatsCounter()\r\n    this.resetIterationStatsCounter()\r\n  }\r\n\r\n  static #setIterationStatsCounter(cell){\r\n    cell.getIsAlive() == true ? ++this.#livingCellsPerIteration : ++this.#deadCellsPerIteration\r\n  }\r\n\r\n  static setPreviousIterationStatsCounter(){\r\n    let currentDeadCells = this.getDeadCellPerIteration()\r\n    let currentLivingCells = this.getLivingCellPerIteration()\r\n\r\n    this.setPreviousLivingCellsPerIteration(currentLivingCells)\r\n    this.setPreviousDeadCellsPerIteration(currentDeadCells)\r\n  }\r\n\r\n\r\n  static initEvolution(size){\r\n      this.setSize(size)\r\n      this.initTable()\r\n\r\n      let table = this.getTable()\r\n      return this.startingLive(table)\r\n  }\r\n\r\n static detectRepetition(){\r\n  let previousDeadCells = this.getPreviousDeadCellsPerIteration()\r\n  let previousLivingCells = this.getPreviousLivingCellsPerIteration()\r\n\r\n  let currentDeadCells = this.getDeadCellPerIteration()\r\n  let currentLivingCells = this.getLivingCellPerIteration()\r\n\r\n  previousDeadCells == currentDeadCells && previousLivingCells == currentLivingCells ? this.setRepetitionCounter() : this.resetRepetitionCounter()\r\n\r\n  this.#validateRepetitionCondition()\r\n }\r\n\r\n static #validateRepetitionCondition(){\r\n  if(this.getRepetitionCounter() == this.getRepetitionThreshold()){  \r\n    this.setIsRepeating(true)\r\n  }\r\n }\r\n\r\n static runHealthCheck(){\r\n  if(Organism.getLivingCellPerIteration() == 0){\r\n    Organism.setIsAlive(false)\r\n  }\r\n }\r\n\r\n}","import Test from \"./main\";\r\nimport Organism from \"./organism\";\r\n\r\nexport default class HtmlHandler {\r\n\r\n  static registerTabs(){\r\n        let StatsTab = document.getElementById(\"StatsTab\")\r\n        let RulesTab = document.getElementById(\"RulesTab\")\r\n        let DefinitionTab = document.getElementById(\"DefinitionTab\")\r\n\r\n        let stats = document.getElementById(\"Stats\")\r\n        let rules = document.getElementById(\"Rules\")\r\n        let definition = document.getElementById(\"Definition\")    \r\n       \r\n        this.#addOnCLickEventListener(StatsTab, stats)\r\n        this.#addOnCLickEventListener(RulesTab, rules)\r\n        this.#addOnCLickEventListener(DefinitionTab, definition)\r\n\r\n    }\r\n\r\n    static #addOnCLickEventListener(tab, element){\r\n        tab.addEventListener(\"click\", function(){\r\n            if(element.style.display === \"none\"){\r\n                element.style.display = \"block\" \r\n            }\r\n            else\r\n            element.style.display = \"none\"\r\n        })\r\n    }\r\n    \r\n   static registerControls(){\r\n        let startButton = document.getElementById(\"Start\")\r\n        let stopButton = document.getElementById(\"Stop\") \r\n        let resetButton = document.getElementById(\"Reset\")\r\n    \r\n\r\n        startButton.addEventListener(\"click\", function(){\r\n            Organism.setHasStarted(true)\r\n            Test.test()\r\n        }, false)\r\n    \r\n        stopButton.addEventListener(\"click\", function(){\r\n            Organism.setStopped(true) \r\n        }, false)\r\n\r\n        resetButton.addEventListener(\"click\", function(){\r\n            location.reload()\r\n        })\r\n    \r\n    }\r\n\r\n    static initHtmlTable(array, size) {\r\n        let table = document.querySelector(\"table\");\r\n    \r\n        for(var row = 0; row < size; row++){\r\n            let r = table.insertRow()\r\n         \r\n            for(var col = 0; col < size; col++){\r\n                let cell = array[row][col]\r\n                let c = r.insertCell()\r\n                let span = document.createElement(\"span\")             \r\n                c.appendChild(span)\r\n                this.#setColorOfSpan(span, cell)\r\n           }\r\n        }\r\n    \r\n        this.setHtmlStatValues()\r\n    }\r\n    \r\n      static updateHtmlSpanInTable(array){\r\n        for(var row = 0; row < array.length; row++){\r\n          for(var col = 0; col < array.length; col++){\r\n            let cell = array[row][col]\r\n    \r\n            let table = document.querySelector(\"table\")\r\n            let td = table.rows[row].cells[col]\r\n            let span = td.childNodes[0]\r\n    \r\n            this.#setColorOfSpan(span, cell)\r\n          }\r\n        }\r\n      }\r\n    \r\n      static #setColorOfSpan(span, cell){\r\n        if(cell.getIsAlive()){ \r\n            span.classList.remove(...span.classList)\r\n            span.classList.add(\"greenCircle\")\r\n          }\r\n          else{\r\n            span.classList.remove(...span.classList)\r\n            span.classList.add(\"blackCircle\")\r\n          }\r\n    }\r\n    \r\n    static setHtmlStatValues(){\r\n\r\n        let underpopulation = document.getElementById(\"underpopulation\")\r\n        let overpopulation = document.getElementById(\"overpopulation\")\r\n        let repoduction = document.getElementById(\"reproduction\")\r\n        let currentLiving = document.getElementById(\"currentLivingCells\")\r\n        let currentDead = document.getElementById(\"currentDeadCells\")\r\n        let iteration = document.getElementById(\"iteration\")\r\n\r\n        this.#addingStats(underpopulation, \"Cell died of Underpopulation: \" + Organism.getFatalitiesOfUnderpopulation()) \r\n        this.#addingStats(overpopulation, \"Cell died of Overpopulation: \" + Organism.getFatalitiesOfOverpopulation()) \r\n        this.#addingStats(repoduction, \"Cells reproduced: \" +  Organism.getReproducedCells())\r\n        this.#addingStats(currentLiving, \"Current Living Cells: \" + Organism.getLivingCellPerIteration()) \r\n        this.#addingStats(currentDead, \"Current Dead Cells: \" + Organism.getDeadCellPerIteration())   \r\n        this.#addingStats(iteration, \"Cell Iteration: \" + Organism.getIteration())\r\n    }\r\n\r\n    static #addingStats(element, text){\r\n        element.textContent = text\r\n    }\r\n\r\n    static setReasonOfDeath(){\r\n      let causeOfDeath = document.getElementById(\"status\")\r\n\r\n      let text = \"Status: alive\"\r\n\r\n      if(!Organism.getIsAlive())\r\n        text = \"Status: died\"\r\n      \r\n      if(Organism.getIsStable())\r\n        text = \"Status: reached stable configuration\"\r\n\r\n      if(Organism.getIsRepeating()){\r\n        text = \"Status: reached stable repeating pattern after repeating \" + Organism.getRepetitionCounter() + \" times\"\r\n      }\r\n\r\n      causeOfDeath.textContent = text\r\n    }\r\n}\r\n","'use strict';\r\nimport HtmlHandler from './HtmlHandler';\r\nimport Organism from './organism';\r\n\r\n\r\n    HtmlHandler.registerTabs()\r\n    HtmlHandler.registerControls()\r\n\r\n\r\n    let table = Organism.initEvolution(50)\r\n    HtmlHandler.initHtmlTable(table, 50)\r\n  \r\nexport default class Test {\r\n\r\n    static async test(){\r\n        let table = Organism.getTable()\r\n\r\n        const sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\r\n\r\n        while(Organism.getHasStarted() && !Organism.getHasStopped() && Organism.getIsAlive() && !Organism.getIsStable() && !Organism.getIsRepeating()){   \r\n                      \r\n          Organism.validateStock(table)\r\n          Organism.evolveGeneration(table)\r\n        \r\n          HtmlHandler.updateHtmlSpanInTable(table)\r\n          HtmlHandler.setHtmlStatValues()\r\n             \r\n          await sleep(Organism.getInterval())\r\n\r\n          Organism.runHealthCheck()\r\n          Organism.detectRepetition()\r\n\r\n\r\n\r\n          HtmlHandler.setReasonOfDeath()  \r\n        }  \r\n    }\r\n}\r\n\r\n"]}