{"version":3,"sources":["cell.js","organism.js","main.js"],"names":["Cell","exports","default","isAlive","_classCallCheck","_classPrivateMethodInitSpec","_Cell_brand","_classPrivateFieldInitSpec","_isAlive","_nextState","_isUnderpopulated","_isOverpopulated","_isReproducing","_isUnchanged","_classPrivateFieldSet","_createClass","key","value","getIsAlive","_classPrivateFieldGet","getNextState","getIsUnderpopulated","getIsOverpopulated","getIsReproducing","getIsUnchanged","determineDevelopment","adjacentLivingCells","_assertClassBrand","_isSurviving","call","_reproducing","evolve","isUnchanged","_setIsUnchanged","_setIsAlive","bool","_setNextState","_setIsUnderpopulated","_setIsOverpopulated","_setIsReproducing","_isNotUnderpopulated","isNotUnderpopulated","_isNotOverpopulated","isNotOverpopulated","isReproducing","isSurviving","_cell","_interopRequireDefault","require","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","minLen","_arrayLikeToArray","n","Object","toString","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","_regeneratorRuntime","e","t","r","hasOwnProperty","defineProperty","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","protoProps","staticProps","_toPrimitive","toPrimitive","String","Number","privateSet","_checkPrivateRedeclaration","add","privateMap","set","privateCollection","has","get","_livingCellsPerIteration","WeakMap","_deadCellsPerIteration","_CellsDiedOfOverpopulation","_CellsDiedOfUnderpopulation","_CellsRevivedByReproduction","_iteration","_org","_size","_interval","_hasStarted","_stopped","_stable","_Organism_brand","WeakSet","Organism","size","_startingLive","resetOrg","getHasStarted","setHasStarted","setStopped","setInterval","interval","_cycleOfLife","_callee","organismIsDead","sleep","_this$iteration","_this$iteration2","_callee$","_context","delay","setTimeout","_validateCurrentGeneneration","_evolveGeneration","_resetCurrentEvolutionCounter","_setHmtlIterationValue","cycleOfLife","_isEqualToIdentityCoordinates","row","col","array","identity","every","element","index","_getNeighbursCoordinates","_this","columns","_sanitizeArrayIndecies","rows","cartesianProduct","flatMap","map","column","cartesianProductWithoutIdentity","filter","coordinateArray","_getCellbyCoordinate","coordinate","_this2","Math","floor","_this3","table","document","querySelector","insertRow","cell","_GeneratingLife","_incrementStats","ce","insertCell","container","createElement","classList","appendChild","_setHtmlStatValues","_this$livingCellsPerI","_this$livingCellsPerI2","_this$deadCellsPerIte","_this$deadCellsPerIte2","_findNumberOfLivingNeighbursCells","_this4","neighburCellCoordinates","cellNeighburs","x","reduce","acc","random","_this$CellsDiedOfOver","_this$CellsDiedOfUnde","_this$CellsRevivedByR","livingNeighboursCells","unchanged","td","cells","span","childNodes","_span$classList","remove","_span$classList2","getElementById","innerHTML","_organism","or","tab1","tab2","tab3","startButton","addEventListener","stopButton","resetButton","stats","rules","settings","style","display"],"mappings":"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C,GFjCA,IEiCO,GFjCPpU,AEiCU,IFjCV,CCTxB0G,CAAA,CC0CyC,CD1CzCpB,CAAA,EAAAH,CAAA,WAAAuB,CAAA,CAAAgG,GAAA,CAAA/K,iBAAA,CAAA+E,CAAA,EAAApB,CAAA,GAAAH,CAAA,GAAAA,CAAA;AAAA,EC2CQ,CAAC,CFlCe9E,KEoChB2T,AD7CRrS,KC6Ca,CAACwS,KAAK,CAACC,MD7CpBnP,CC6C2B,AD7C3B,EAAAC,CDSwB,AEoCM,AD7C9B,EAAAhB,CAAA,GC6CoC,CFpCZ5D,WAAA,cCTxB2E,CAAA,GAAAA,CAAA,KAAAC,CAAA,GAAAD,CAAA,CAAA2H,GAAA,CAAA1H,CAAA,UAAAmG,SAAA,CAAAxG,MAAA,OAAAK,CAAA,GAAAhB,CAAA,YAAAH,SAAA;AC8CI,AD9CJ,CC8CK,EAAE,CFrCiBxD,ACTxBuM,IC8CY,CAAC,mBD9Cb,EDSwB,OAAAtM,QAAA,EATT,CCAfuM,IDAoB,GCApB;ACgDI2G,ADhDJ,IDAoBnT,AEgDZ,ADhDRyM,CCgDS6G,gBAAgB,CAAC,IDhD1B,GCgDiC,CFhDb,CEgDe,MFhDfpT,MEgDyB,GDhD7CsM,CDAoB,EACH,ICDjB,CDCsB;ACDtB,ECiDQ,EFhDcxM,ACDtB0M,ECiDWgH,KAAK,CAACE,KAAK,CAACC,OAAO,KFhDR,AEgDa,ADjDnC,MCiDyC,CFhDnB1T,CEgDoB,YDjD1CqM,IDCsB,EAEE,CCHxB,GDG4B;ACH5B,IDG4BxM,AE+ChB0T,ADlDZ/G,KCkDiB,CAACiH,KAAK,CAACC,OAAO,GAAG,IF/CN,CCH5B,ECkDyC,IF/CbzT,cCH5BoM,EDG4B,EACL,GCJvB,CDI2B;ACJ3B,ECmDQ,CAAC,CF/CkBxM,ACJ3B4M,KCqDQ8G,KAAK,CAACE,KAAK,CAACC,OAAO,EFjDA,CEiDG,ADrD9B,MDI2BxT,AEiDS,cFjDT,ACJ3BmM,EDKqB,IAAI,CCLzB;ACsDI,ADtDJ,CCsDK,EAAE,CFjDkBxM,ACLzB6M,ICsDY,CAAC,KDtDb,gBDKyB,ICLzBL,GDKyBlM,ICLzB,QDKyB,EACN,IAAI;AEkDnB8S,ADxDJ,IDUM7S,AE8CE,ADxDRuM,CCwDSwG,GDxDT,aCwDyB,CAAC,GF9CpB,CAAArT,ECVNuM,CCwDiC,EAAE,GF9C7B,CCVN,KDUU,EAAY5M,CE8CuB,MF9ChB;ACV7B,EDWI,AE8CI,EDzDRmN,ECyDW4G,GDzDX,KCyDmB,CAACC,KAAK,CAACC,OAAO,CDzDjCrH,ICyDsC,GDzDtC,GCyD4C,EAAC;ADzD7C,EDWK,EE+COmH,AD1DZ3G,KDWKxM,GE+Ce,CAACoT,AD1DrB,KC0D0B,CAACC,EF/CtB,CAAApU,IAAA,AE+C6B,GAAG,ID1DrC+M,GC0D4C,ID1D5C;AAAA,EC2DQ,CAAC,CFhDJ/L,ACXLwM,GDWK,EEkDG0G,MD7DR,EC6DgB,CAACC,KAAK,CAACC,OAAO,GAAG,CD7DjCrH,KC6DuC,ED7DvC;AC8DI,AD9DJ,CC8DK,EAAE,CFnDF9L,ACXLwM,IC8DY,CFnDP,AEmDQ,EFjDT,CCbJ,QDaIvM,WAAA,CCbJ6L,CDagB,MCbhB;AAAA,IAAAW,EDcM,KCdN,EDcMvM,kBCdN4L,GDcM,CAAAvM,GCdN,KDcM,EAAO,IAAI;ACdjB,IDeI,ACfJmN,eAAA,oBAAAC,OAAA;AAAA,EDeK,ECdgBC,QAAQ,GAAA5N,OAAA,CAAAC,OAAA;EAczB,EDACc,GAAA,ICAD6M,SAAYC,IAAI,EAAC;IDAhB7M,ACAgBb,KDAhB,EAED,QCFiB,CDEjBgB,MCFiByM,ODEjB,CCFiB,CDEH;ICFGxN,EDGf,OAAAc,kBCHe,GDGf,CAAAV,GCHekN,ODGf,EAAO,IAAI,ECHI;IDIjB,ACJiBpN,0BAAA,OAAAuM,wBAAA,EAbU,CAAC;EDiB3B,ECjB2BvM,0BAAA,OAAAyM,sBAAA,EACH,CAAC;IDgBzBhM,AChByBT,GDgBzB,uBChByB,OAAA0M,0BAAA,EACG,CAAC;IDe7BhM,ACf6BV,KDe7B,EAED,SAAAc,UCjB8B,OAAA6L,GDiB9B,EAAqB,sBCjBS,EACA,CAAC;IAAA3M,EDiB7B,OAAAY,iBCjB6B,IDiB7B,CAAAT,ECjB6ByM,eDiB7B,EAAO,IAAI,MCjBkB,EACD,CAAC;IDiB/B,ACjB+B5M,0BAAA,OAAA6M,UAAA,EAClB,CAAC;EDgBb,EChBa7M,0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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["export default class Cell {\r\n    #isAlive = false\r\n    #nextState = false\r\n\r\n    #isUnderpopulated = null\r\n    #isOverpopulated = null\r\n    #isReproducing = null\r\n    #isUnchanged = null\r\n \r\n    \r\n    constructor(isAlive){\r\n      this.#isAlive = isAlive\r\n    }\r\n    \r\n    getIsAlive(){\r\n      return this.#isAlive\r\n    }  \r\n    \r\n    getNextState(){\r\n      return this.#nextState\r\n    }\r\n\r\n    getIsUnderpopulated(){\r\n      return this.#isUnderpopulated\r\n    }\r\n\r\n    getIsOverpopulated(){\r\n      return this.#isOverpopulated\r\n    }\r\n\r\n    getIsReproducing(){\r\n      return this.#isReproducing\r\n    }\r\n\r\n    getIsUnchanged(){\r\n      return this.#isUnchanged\r\n    }\r\n\r\n    #setIsAlive(bool){\r\n      this.#isAlive = bool\r\n    }\r\n\r\n    #setNextState(bool){\r\n      this.#nextState = bool\r\n    }\r\n\r\n    #setIsUnderpopulated(bool){\r\n      this.#isUnderpopulated = bool\r\n    }\r\n\r\n    #setIsOverpopulated(bool){\r\n      this.#isOverpopulated = bool\r\n    }\r\n\r\n    #setIsReproducing(bool){\r\n      this.#isUnderpopulated = bool\r\n    }\r\n\r\n    #setIsUnchanged(bool){\r\n      this.#isUnchanged = bool\r\n    }\r\n\r\n\r\n\r\n    #isNotUnderpopulated(adjacentLivingCells){\r\n      let isNotUnderpopulated = adjacentLivingCells >= 2  \r\n      this.#setIsUnderpopulated(!isNotUnderpopulated)\r\n      return isNotUnderpopulated\r\n    }\r\n\r\n    #isNotOverpopulated(adjacentLivingCells){\r\n      let isNotOverpopulated = adjacentLivingCells <= 3  \r\n      this.#setIsOverpopulated(!isNotOverpopulated)\r\n      return isNotOverpopulated\r\n    }\r\n\r\n    #reproducing(adjacentLivingCells){\r\n      let isReproducing = adjacentLivingCells == 3\r\n      this.#setIsReproducing(isReproducing)\r\n      this.#setNextState(isReproducing)\r\n      return isReproducing\r\n    }\r\n\r\n    #isSurviving(adjacentLivingCells){    \r\n      let isSurviving =  this.#isNotUnderpopulated(adjacentLivingCells) && this.#isNotOverpopulated(adjacentLivingCells)\r\n      this.#setNextState(isSurviving)\r\n    }\r\n\r\n\r\n    determineDevelopment(adjacentLivingCells){\r\n      this.getIsAlive() ? this.#isSurviving(adjacentLivingCells) : this.#reproducing(adjacentLivingCells)\r\n    }\r\n\r\n    evolve(){\r\n      let isUnchanged = this.getIsAlive() == this.getNextState()\r\n      this.#setIsUnchanged(isUnchanged)\r\n      this.#setIsAlive(this.getNextState())\r\n    }\r\n  }","import Cell from \"./cell.js\";\r\n\r\nexport default class Organism {\r\n    #livingCellsPerIteration = 0\r\n    #deadCellsPerIteration = 0\r\n    #CellsDiedOfOverpopulation = 0\r\n    #CellsDiedOfUnderpopulation = 0\r\n    #CellsRevivedByReproduction = 0\r\n    #iteration = 0\r\n    #org\r\n    #size\r\n    #interval = 100\r\n    #hasStarted = false\r\n    #stopped = false\r\n    #stable = false\r\n\r\n    constructor(size){\r\n      this.#size = size\r\n      this.#org = this.#startingLive()\r\n    }\r\n\r\n    resetOrg(){\r\n    }\r\n\r\n    getHasStarted(){\r\n      return this.#hasStarted\r\n    }\r\n\r\n    setHasStarted(){\r\n      this.#hasStarted = true\r\n    }\r\n\r\n    setStopped(){\r\n      this.#stopped = true\r\n    }\r\n\r\n    setInterval(interval){\r\n      this.#interval = interval\r\n    }\r\n\r\n    #resetCurrentEvolutionCounter(){\r\n      this.#deadCellsPerIteration = 0\r\n      this.#livingCellsPerIteration = 0\r\n    }\r\n\r\n    #isEqualToIdentityCoordinates(row, col, array){\r\n      let identity = Array(row, col)\r\n      return array.every((element, index) => element === identity[index]);\r\n    }\r\n\r\n    #getNeighbursCoordinates(row, col){\r\n    let columns = this.#sanitizeArrayIndecies(Array((col - 1), col, ( col + 1)))\r\n    let rows = this.#sanitizeArrayIndecies(Array((row - 1), row, (row + 1)))\r\n    let cartesianProduct = rows.flatMap(row => columns.map(column => Array(row, column)))\r\n    let cartesianProductWithoutIdentity = cartesianProduct.filter(coordinateArray => !this.#isEqualToIdentityCoordinates(row, col, coordinateArray))\r\n    return cartesianProductWithoutIdentity\r\n  }\r\n\r\n  #getCellbyCoordinate(coordinate){\r\n    let row = coordinate[0]\r\n    let col = coordinate[1]\r\n    return this.#org[row][col]\r\n  }\r\n\r\n  #sanitizeArrayIndecies(array){\r\n    return array.map(value => value - (Math.floor(value / this.#size) * this.#size));\r\n  }\r\n\r\n  #startingLive(){\r\n    let array =  Array.from(new Array(this.#size), () => new Array(this.#size))\r\n      let table = document.querySelector(\"table\");\r\n\r\n      for(var row = 0; row < array.length; row++){\r\n\r\n        let r = table.insertRow()\r\n\r\n        for(var col = 0; col < array.length; col++){\r\n          let cell = this.#GeneratingLife()\r\n          this.#incrementStats(cell)\r\n          array[row][col] = cell\r\n          let ce = r.insertCell()\r\n\r\n          var container = document.createElement(\"span\")\r\n          \r\n          if(cell.getIsAlive())\r\n            container.classList.add(\"greenCircle\");\r\n          else\r\n          container.classList.add(\"blackCircle\")\r\n          \r\n      \r\n          ce.appendChild(container)\r\n        }\r\n      }\r\n      \r\n      \r\n      this.#setHtmlStatValues()\r\n      this.#setHmtlIterationValue();\r\n      return array\r\n    }\r\n\r\n    #incrementStats(cell){\r\n      cell.getIsAlive() == true ? this.#livingCellsPerIteration++ : this.#deadCellsPerIteration++\r\n    }\r\n\r\n    #findNumberOfLivingNeighbursCells(row, col){\r\n      let neighburCellCoordinates = this.#getNeighbursCoordinates(row, col)\r\n      let cellNeighburs = neighburCellCoordinates.map(x => this.#getCellbyCoordinate(x))\r\n      return cellNeighburs.reduce((acc, cell) => {\r\n              return cell.getIsAlive() ? ++acc : acc     \r\n      }, 0);\r\n    }\r\n\r\n    #GeneratingLife(){\r\n     return (Math.random() > 0.5) ? new Cell(true) : new Cell(false)\r\n    }\r\n\r\n    #validateCurrentGeneneration(){\r\n      for(var row = 0; row < this.#org.length; row++){\r\n        for(var col = 0; col < this.#org.length; col++){\r\n            let cell = this.#org[row][col]\r\n            let livingNeighboursCells = this.#findNumberOfLivingNeighbursCells(row, col)\r\n            cell.determineDevelopment(livingNeighboursCells)\r\n\r\n            let o = cell.getIsOverpopulated()\r\n            let u = cell.getIsUnderpopulated()\r\n            let r = cell.getIsReproducing()\r\n\r\n          \tif(o)\r\n              ++this.#CellsDiedOfOverpopulation \r\n              if(u)\r\n                ++this.#CellsDiedOfUnderpopulation\r\n                if(r)\r\n                  ++this.#CellsRevivedByReproduction\r\n      }\r\n    }\r\n  }\r\n  \r\n  #evolveGeneration(){\r\n    let unchanged = true\r\n\r\n    for(var row = 0; row < this.#org.length; row++){\r\n      for(var col = 0; col < this.#org.length; col++){\r\n      const cell = this.#org[row][col]\r\n      cell.evolve()\r\n      this.#incrementStats(cell)\r\n      \r\n      unchanged =  unchanged && cell.getIsUnchanged()\r\n\r\n      let table = document.querySelector(\"table\")\r\n      let td = table.rows[row].cells[col]\r\n\r\n      let span = td.childNodes[0]\r\n\r\n\r\n      if(cell.getIsAlive()){ \r\n        span.classList.remove(...span.classList)\r\n        span.classList.add(\"greenCircle\")\r\n      }\r\n      else{\r\n        span.classList.remove(...span.classList)\r\n        span.classList.add(\"blackCircle\")\r\n      }\r\n      }\r\n    }  \r\n\r\n    this.#stable = unchanged\r\n\r\n    this.#setHtmlStatValues();\r\n  \r\n  }\r\n\r\n  #setHtmlStatValues(){\r\n    document.getElementById(\"underpopulation\").innerHTML = \"Cell died of Underpopulation: \" + this.#CellsDiedOfUnderpopulation \r\n    document.getElementById(\"overpopulation\").innerHTML = \"Cell died of Overpopulation: \" + this.#CellsDiedOfOverpopulation\r\n    document.getElementById(\"reproduction\").innerHTML = \"Cells reproduced: \" +  this.#CellsRevivedByReproduction\r\n    document.getElementById(\"currentLivingCells\").innerHTML = \"Current Living Cells: \" + this.#livingCellsPerIteration \r\n    document.getElementById(\"currentDeadCells\").innerHTML = \"Current Dead Cells: \" + this.#deadCellsPerIteration \r\n\r\n  }\r\n\r\n  #setHmtlIterationValue(){\r\n    document.getElementById(\"iteration\").innerHTML = \"Cell Iteration: \" + this.#iteration\r\n  }\r\n\r\n\r\n\r\n\r\n  async cycleOfLife(){\r\n    var organismIsDead = false\r\n\r\n\r\n    const sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\r\n\r\n\r\n    while(!organismIsDead && this.#hasStarted && !this.#stopped && !this.#stable){   \r\n      this.#validateCurrentGeneneration()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      this.#evolveGeneration()\r\n\r\n      if(this.#livingCellsPerIteration == 0){\r\n        organismIsDead = true\r\n      }\r\n      \r\n    \r\n      await sleep(this.#interval)\r\n\r\n\r\n      this.#iteration++\r\n      this.#resetCurrentEvolutionCounter();\r\n      this.#setHmtlIterationValue();\r\n    }  \r\n  }\r\n}","'use strict';\nimport Organism from './organism';\n\nlet or = new Organism(10)\n    \n    let tab1 = document.getElementById(\"tab1\")\n    let tab2 = document.getElementById(\"tab2\")\n    let tab3 = document.getElementById(\"tab3\")\n\n  \n\n\n    let startButton = document.getElementById(\"start\")\n\n    startButton.addEventListener(\"click\", function(){\n            or.setHasStarted(true) \n            or.cycleOfLife() \n    }, false)\n\n\n    let stopButton = document.getElementById(\"stop\")\n\n    stopButton.addEventListener(\"click\", function(){\n            or.setStopped(true) \n    }, false)\n\n\n    let resetButton = document.getElementById(\"reset\")\n\n    resetButton.addEventListener(\"click\", function(){\n            or.resetOrg()\n            or.cycleOfLife() \n    }, false)\n\n\n    let stats = document.getElementById(\"Stats\")\n    let rules = document.getElementById(\"Rules\")\n    let settings = document.getElementById(\"Definition\")\n\n\n\n    tab1.addEventListener(\"click\", function(){\n        if(stats.style.display === \"none\"){\n            stats.style.display = \"block\" \n        }\n        else\n        stats.style.display = \"none\"\n    }, false)\n\n    tab2.addEventListener(\"click\", function(){\n        if(rules.style.display === \"none\"){\n            rules.style.display = \"block\" \n        }\n        else\n        rules.style.display = \"none\"\n    }, false)\n\n    tab3.addEventListener(\"click\", function(){\n        if(settings.style.display === \"none\"){\n            settings.style.display = \"block\" \n        }\n        else\n        settings.style.display = \"none\"\n    }, false)\n    \n\n\n\n\n"]}