{"version":3,"sources":["cell.js","organism.js","main.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Cell","exports","default","isAlive","_classCallCheck","_classPrivateMethodInitSpec","_Cell_brand","_classPrivateFieldInitSpec","_nextStatus","_isAlive","_isUnderpopulated","_isOverpopulated","_reproduce","_Unchanged","_classPrivateFieldSet","_createClass","key","value","getUnchanged","_classPrivateFieldGet","getIsUnderpopulated","getIsOverpopulated","getWillReproduce","getIsAlive","evolve","determineNextGenerationStatus","numberOfLivingNeigburs","status","_assertClassBrand","_isSurvivingOnToTheNextGen","call","_isAliveByReproduction","_setNextStatus","nextStatus","_isNotUnderpopulated","livingCells","isNotUnderpopulated","_isNotOverpopulated","isNotOverpopulated","_willReproduce","willReproduce","_cell","_interopRequireDefault","require","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","minLen","_arrayLikeToArray","n","Object","toString","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","_regeneratorRuntime","e","t","r","hasOwnProperty","defineProperty","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","protoProps","staticProps","_toPrimitive","toPrimitive","String","Number","privateSet","_checkPrivateRedeclaration","add","privateMap","set","privateCollection","has","get","_livingCellsPerIteration","WeakMap","_deadCellsPerIteration","_CellsDiedOfOverpopulation","_CellsDiedOfUnderpopulation","_CellsRevivedByReproduction","_iteration","_org","_size","_interval","_hasStarted","_stopped","_stable","_Organism_brand","WeakSet","Organism","size","_startingLive","resetOrg","getHasStarted","setHasStarted","setStopped","setInterval","interval","_cycleOfLife","_callee","organismIsDead","sleep","_this$iteration","_this$iteration2","_callee$","_context","delay","setTimeout","_validateCurrentGeneneration","_evolveGeneration","_resetCurrentEvolutionCounter","_setHmtlIterationValue","cycleOfLife","_isEqualToIdentityCoordinates","row","col","array","identity","every","element","index","_getNeighbursCoordinates","_this","columns","_sanitizeArrayIndecies","rows","cartesianProduct","flatMap","map","column","cartesianProductWithoutIdentity","filter","coordinateArray","_getCellbyCoordinate","coordinate","_this2","Math","floor","_this3","table","document","querySelector","insertRow","cell","_GeneratingLife","_incrementStats","ce","insertCell","container","createElement","classList","appendChild","_setHtmlStatValues","_this$livingCellsPerI","_this$livingCellsPerI2","_this$deadCellsPerIte","_this$deadCellsPerIte2","_findNumberOfLivingNeighbursCells","_this4","neighburCellCoordinates","cellNeighburs","x","reduce","acc","random","_this$CellsDiedOfOver","_this$CellsDiedOfUnde","_this$CellsRevivedByR","livingNeighboursCells","unchanged","td","cells","span","childNodes","_span$classList","remove","_span$classList2","getElementById","innerHTML","_organism","or","tab1","tab2","tab3","startButton","addEventListener","stopButton","resetButton","stats","rules","settings","style","display","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","stackTrace","innerText","getParents","modules","parents","k","dep","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["export default class Cell {\r\n    #nextStatus = false\r\n    #isAlive\r\n    #isUnderpopulated = null\r\n    #isOverpopulated = null\r\n    #reproduce = null\r\n    #Unchanged = false\r\n    \r\n    constructor(isAlive){\r\n      this.#isAlive = isAlive\r\n    }\r\n\r\n    getUnchanged(){\r\n      return this.#Unchanged\r\n    }\r\n\r\n    getIsUnderpopulated(){\r\n      return this.#isUnderpopulated\r\n    }\r\n\r\n    getIsOverpopulated(){\r\n      return this.#isOverpopulated\r\n    }\r\n\r\n    getWillReproduce(){\r\n      return this.#reproduce\r\n    }\r\n\r\n    getIsAlive(){\r\n      return this.#isAlive\r\n    }\r\n\r\n    #setNextStatus(nextStatus){\r\n      this.#nextStatus = nextStatus\r\n    }\r\n\r\n    evolve(){\r\n      this.#Unchanged = this.#isAlive == this.#nextStatus\r\n      this.#isAlive = this.#nextStatus\r\n    }\r\n\r\n    //Rules:\r\n\r\n    #isNotUnderpopulated(livingCells){\r\n      let isNotUnderpopulated = livingCells >= 2  \r\n      this.#isUnderpopulated = !isNotUnderpopulated\r\n      return isNotUnderpopulated\r\n    }\r\n\r\n    #isNotOverpopulated(livingCells){\r\n      let isNotOverpopulated = livingCells <= 3  \r\n      this.#isOverpopulated = !isNotOverpopulated\r\n      return isNotOverpopulated\r\n    }\r\n\r\n    #willReproduce(livingCells){\r\n      let willReproduce = livingCells == 3\r\n      this.#reproduce = willReproduce\r\n      return willReproduce\r\n    }\r\n\r\n  //Any live cell with two or three live neighbors lives on to the next generation.\r\n    #isSurvivingOnToTheNextGen(livingCells){    \r\n      let isAlive =  this.#isNotUnderpopulated(livingCells) && this.#isNotOverpopulated(livingCells)\r\n      this.#setNextStatus(isAlive)\r\n    }\r\n\r\n  //Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\r\n    #isAliveByReproduction(livingCells){\r\n      let isAlive = this.#willReproduce(livingCells)\r\n      this.#setNextStatus(isAlive)\r\n    }\r\n\r\n    determineNextGenerationStatus(numberOfLivingNeigburs){\r\n      let status = this.getIsAlive();  \r\n      status ? this.#isSurvivingOnToTheNextGen(numberOfLivingNeigburs) \r\n      : this.#isAliveByReproduction(numberOfLivingNeigburs)\r\n    }\r\n  }","import Cell from \"./cell.js\";\r\n\r\nexport default class Organism {\r\n    #livingCellsPerIteration = 0\r\n    #deadCellsPerIteration = 0\r\n    #CellsDiedOfOverpopulation = 0\r\n    #CellsDiedOfUnderpopulation = 0\r\n    #CellsRevivedByReproduction = 0\r\n    #iteration = 0\r\n    #org\r\n    #size\r\n    #interval = 100\r\n    #hasStarted = false\r\n    #stopped = false\r\n    #stable = false\r\n\r\n    constructor(size){\r\n      this.#size = size\r\n      this.#org = this.#startingLive()\r\n    }\r\n\r\n    resetOrg(){\r\n    }\r\n\r\n\r\n    getHasStarted(){\r\n      return this.#hasStarted\r\n    }\r\n\r\n    setHasStarted(){\r\n      this.#hasStarted = true\r\n    }\r\n\r\n    setStopped(){\r\n      this.#stopped = true\r\n    }\r\n\r\n    setInterval(interval){\r\n      this.#interval = interval\r\n    }\r\n\r\n    #resetCurrentEvolutionCounter(){\r\n      this.#deadCellsPerIteration = 0\r\n      this.#livingCellsPerIteration = 0\r\n    }\r\n\r\n    #isEqualToIdentityCoordinates(row, col, array){\r\n      let identity = Array(row, col)\r\n      return array.every((element, index) => element === identity[index]);\r\n    }\r\n\r\n    #getNeighbursCoordinates(row, col){\r\n    let columns = this.#sanitizeArrayIndecies(Array((col - 1), col, ( col + 1)))\r\n    let rows = this.#sanitizeArrayIndecies(Array((row - 1), row, (row + 1)))\r\n    let cartesianProduct = rows.flatMap(row => columns.map(column => Array(row, column)))\r\n    let cartesianProductWithoutIdentity = cartesianProduct.filter(coordinateArray => !this.#isEqualToIdentityCoordinates(row, col, coordinateArray))\r\n    return cartesianProductWithoutIdentity\r\n  }\r\n\r\n  #getCellbyCoordinate(coordinate){\r\n    let row = coordinate[0]\r\n    let col = coordinate[1]\r\n    return this.#org[row][col]\r\n  }\r\n\r\n  #sanitizeArrayIndecies(array){\r\n    return array.map(value => value - (Math.floor(value / this.#size) * this.#size));\r\n  }\r\n\r\n  #startingLive(){\r\n    let array =  Array.from(new Array(this.#size), () => new Array(this.#size))\r\n      let table = document.querySelector(\"table\");\r\n\r\n      for(var row = 0; row < array.length; row++){\r\n\r\n        let r = table.insertRow()\r\n\r\n        for(var col = 0; col < array.length; col++){\r\n          let cell = this.#GeneratingLife()\r\n          this.#incrementStats(cell)\r\n          array[row][col] = cell\r\n          let ce = r.insertCell()\r\n\r\n          var container = document.createElement(\"span\")\r\n          \r\n          if(cell.getIsAlive())\r\n            container.classList.add(\"greenCircle\");\r\n          else\r\n          container.classList.add(\"blackCircle\")\r\n          \r\n      \r\n          ce.appendChild(container)\r\n        }\r\n      }\r\n      \r\n      \r\n      this.#setHtmlStatValues()\r\n      this.#setHmtlIterationValue();\r\n      return array\r\n    }\r\n\r\n    #incrementStats(cell){\r\n      cell.getIsAlive() == true ? this.#livingCellsPerIteration++ : this.#deadCellsPerIteration++\r\n    }\r\n\r\n    #findNumberOfLivingNeighbursCells(row, col){\r\n      let neighburCellCoordinates = this.#getNeighbursCoordinates(row, col)\r\n      let cellNeighburs = neighburCellCoordinates.map(x => this.#getCellbyCoordinate(x))\r\n      return cellNeighburs.reduce((acc, cell) => {\r\n              return cell.getIsAlive() ? ++acc : acc     \r\n      }, 0);\r\n    }\r\n\r\n    #GeneratingLife(){\r\n     return (Math.random() > 0.5) ? new Cell(true) : new Cell(false)\r\n    }\r\n\r\n    #validateCurrentGeneneration(){\r\n      for(var row = 0; row < this.#org.length; row++){\r\n        for(var col = 0; col < this.#org.length; col++){\r\n            let cell = this.#org[row][col]\r\n            let livingNeighboursCells = this.#findNumberOfLivingNeighbursCells(row, col)\r\n            cell.determineNextGenerationStatus(livingNeighboursCells)\r\n\r\n            let o = cell.getIsOverpopulated()\r\n            let u = cell.getIsUnderpopulated()\r\n            let r = cell.getWillReproduce()\r\n\r\n          \tif(o)\r\n              ++this.#CellsDiedOfOverpopulation \r\n              if(u)\r\n                ++this.#CellsDiedOfUnderpopulation\r\n                if(r)\r\n                  ++this.#CellsRevivedByReproduction\r\n      }\r\n    }\r\n  }\r\n  \r\n  #evolveGeneration(){\r\n    let unchanged = true\r\n\r\n    for(var row = 0; row < this.#org.length; row++){\r\n      for(var col = 0; col < this.#org.length; col++){\r\n      const cell = this.#org[row][col]\r\n      cell.evolve()\r\n      this.#incrementStats(cell)\r\n      \r\n      unchanged =  unchanged && cell.getUnchanged()\r\n\r\n      let table = document.querySelector(\"table\")\r\n      let td = table.rows[row].cells[col]\r\n\r\n      let span = td.childNodes[0]\r\n\r\n\r\n      if(cell.getIsAlive()){ \r\n        span.classList.remove(...span.classList)\r\n        span.classList.add(\"greenCircle\")\r\n      }\r\n      else{\r\n        span.classList.remove(...span.classList)\r\n        span.classList.add(\"blackCircle\")\r\n      }\r\n      }\r\n    }  \r\n\r\n    this.#stable = unchanged\r\n\r\n    this.#setHtmlStatValues();\r\n  \r\n  }\r\n\r\n  #setHtmlStatValues(){\r\n    document.getElementById(\"underpopulation\").innerHTML = \"Cell died of Underpopulation: \" + this.#CellsDiedOfUnderpopulation \r\n    document.getElementById(\"overpopulation\").innerHTML = \"Cell died of Overpopulation: \" + this.#CellsDiedOfOverpopulation\r\n    document.getElementById(\"reproduction\").innerHTML = \"Cells reproduced: \" +  this.#CellsRevivedByReproduction\r\n    document.getElementById(\"currentLivingCells\").innerHTML = \"Current Living Cells: \" + this.#livingCellsPerIteration \r\n    document.getElementById(\"currentDeadCells\").innerHTML = \"Current Dead Cells: \" + this.#deadCellsPerIteration \r\n\r\n  }\r\n\r\n  #setHmtlIterationValue(){\r\n    document.getElementById(\"iteration\").innerHTML = \"Cell Iteration: \" + this.#iteration\r\n  }\r\n\r\n\r\n\r\n\r\n  async cycleOfLife(){\r\n    var organismIsDead = false\r\n\r\n\r\n    const sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\r\n\r\n\r\n    while(!organismIsDead && this.#hasStarted && !this.#stopped && !this.#stable){   \r\n      this.#validateCurrentGeneneration()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      this.#evolveGeneration()\r\n\r\n      if(this.#livingCellsPerIteration == 0){\r\n        organismIsDead = true\r\n      }\r\n      \r\n    \r\n      await sleep(this.#interval)\r\n\r\n\r\n      this.#iteration++\r\n      this.#resetCurrentEvolutionCounter();\r\n      this.#setHmtlIterationValue();\r\n    }  \r\n  }\r\n}","'use strict';\nimport Organism from './organism';\n\nlet or = new Organism(10)\n    \n    let tab1 = document.getElementById(\"tab1\")\n    let tab2 = document.getElementById(\"tab2\")\n    let tab3 = document.getElementById(\"tab3\")\n\n  \n\n\n    let startButton = document.getElementById(\"start\")\n\n    startButton.addEventListener(\"click\", function(){\n            or.setHasStarted(true) \n            or.cycleOfLife() \n    }, false)\n\n\n    let stopButton = document.getElementById(\"stop\")\n\n    stopButton.addEventListener(\"click\", function(){\n            or.setStopped(true) \n    }, false)\n\n\n    let resetButton = document.getElementById(\"reset\")\n\n    resetButton.addEventListener(\"click\", function(){\n            or.resetOrg()\n            or.cycleOfLife() \n    }, false)\n\n\n    let stats = document.getElementById(\"Stats\")\n    let rules = document.getElementById(\"Rules\")\n    let settings = document.getElementById(\"Definition\")\n\n\n\n    tab1.addEventListener(\"click\", function(){\n        if(stats.style.display === \"none\"){\n            stats.style.display = \"block\" \n        }\n        else\n        stats.style.display = \"none\"\n    }, false)\n\n    tab2.addEventListener(\"click\", function(){\n        if(rules.style.display === \"none\"){\n            rules.style.display = \"block\" \n        }\n        else\n        rules.style.display = \"none\"\n    }, false)\n\n    tab3.addEventListener(\"click\", function(){\n        if(settings.style.display === \"none\"){\n            settings.style.display = \"block\" \n        }\n        else\n        settings.style.display = \"none\"\n    }, false)\n    \n\n\n\n\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}